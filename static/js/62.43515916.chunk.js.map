{"version":3,"file":"static/js/62.43515916.chunk.js","mappings":"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","sources":["../node_modules/lodash-es/_createFind.js","../node_modules/lodash-es/findIndex.js","../node_modules/lodash-es/find.js","../node_modules/lodash-es/map.js","../node_modules/lodash-es/_baseHas.js","../node_modules/lodash-es/has.js","../node_modules/lodash-es/_baseExtremum.js","../node_modules/lodash-es/_baseLt.js","../node_modules/lodash-es/toInteger.js","../node_modules/lodash-es/_trimmedEndIndex.js","../node_modules/lodash-es/_baseTrim.js","../node_modules/lodash-es/toNumber.js","../node_modules/lodash-es/toFinite.js","../node_modules/lodash-es/last.js","../node_modules/lodash-es/uniqueId.js","../node_modules/lodash-es/_baseRange.js","../node_modules/lodash-es/range.js","../node_modules/lodash-es/_createRange.js","../node_modules/dagre-d3-es/src/dagre/data/list.js","../node_modules/dagre-d3-es/src/dagre/greedy-fas.js","../node_modules/dagre-d3-es/src/dagre/acyclic.js","../node_modules/lodash-es/_basePick.js","../node_modules/lodash-es/pick.js","../node_modules/lodash-es/_flatRest.js","../node_modules/lodash-es/_baseGt.js","../node_modules/lodash-es/max.js","../node_modules/lodash-es/mapValues.js","../node_modules/lodash-es/now.js","../node_modules/dagre-d3-es/src/dagre/util.js","../node_modules/dagre-d3-es/src/dagre/add-border-segments.js","../node_modules/dagre-d3-es/src/dagre/coordinate-system.js","../node_modules/dagre-d3-es/src/dagre/normalize.js","../node_modules/lodash-es/minBy.js","../node_modules/dagre-d3-es/src/dagre/rank/util.js","../node_modules/dagre-d3-es/src/dagre/rank/feasible-tree.js","../node_modules/dagre-d3-es/src/graphlib/alg/dijkstra.js","../node_modules/dagre-d3-es/src/graphlib/alg/floyd-warshall.js","../node_modules/lodash-es/_asciiSize.js","../node_modules/lodash-es/_hasUnicode.js","../node_modules/lodash-es/_unicodeSize.js","../node_modules/dagre-d3-es/src/graphlib/alg/topsort.js","../node_modules/dagre-d3-es/src/graphlib/alg/dfs.js","../node_modules/dagre-d3-es/src/dagre/rank/network-simplex.js","../node_modules/dagre-d3-es/src/graphlib/alg/postorder.js","../node_modules/dagre-d3-es/src/graphlib/alg/preorder.js","../node_modules/dagre-d3-es/src/dagre/rank/index.js","../node_modules/dagre-d3-es/src/dagre/nesting-graph.js","../node_modules/lodash-es/cloneDeep.js","../node_modules/dagre-d3-es/src/dagre/order/build-layer-graph.js","../node_modules/lodash-es/_baseZipObject.js","../node_modules/lodash-es/zipObject.js","../node_modules/lodash-es/_baseSortBy.js","../node_modules/lodash-es/_compareAscending.js","../node_modules/lodash-es/_compareMultiple.js","../node_modules/lodash-es/_baseOrderBy.js","../node_modules/lodash-es/sortBy.js","../node_modules/dagre-d3-es/src/dagre/order/cross-count.js","../node_modules/dagre-d3-es/src/dagre/order/resolve-conflicts.js","../node_modules/dagre-d3-es/src/dagre/order/sort.js","../node_modules/dagre-d3-es/src/dagre/order/sort-subgraph.js","../node_modules/dagre-d3-es/src/dagre/order/barycenter.js","../node_modules/dagre-d3-es/src/dagre/order/index.js","../node_modules/dagre-d3-es/src/dagre/order/init-order.js","../node_modules/dagre-d3-es/src/dagre/order/add-subgraph-constraints.js","../node_modules/dagre-d3-es/src/dagre/parent-dummy-chains.js","../node_modules/lodash-es/forOwn.js","../node_modules/lodash-es/forIn.js","../node_modules/dagre-d3-es/src/dagre/position/bk.js","../node_modules/dagre-d3-es/src/dagre/position/index.js","../node_modules/dagre-d3-es/src/dagre/layout.js","../node_modules/lodash-es/_baseMap.js","../node_modules/lodash-es/min.js","../node_modules/lodash-es/flatten.js","../node_modules/lodash-es/_baseSet.js","../node_modules/lodash-es/_basePickBy.js","../node_modules/lodash-es/isString.js","../node_modules/lodash-es/defaults.js","../node_modules/lodash-es/union.js","../node_modules/dagre-d3-es/src/graphlib/graph.js"],"sourcesContent":["import baseIteratee from './_baseIteratee.js';\nimport isArrayLike from './isArrayLike.js';\nimport keys from './keys.js';\n\n/**\n * Creates a `_.find` or `_.findLast` function.\n *\n * @private\n * @param {Function} findIndexFunc The function to find the collection index.\n * @returns {Function} Returns the new find function.\n */\nfunction createFind(findIndexFunc) {\n  return function(collection, predicate, fromIndex) {\n    var iterable = Object(collection);\n    if (!isArrayLike(collection)) {\n      var iteratee = baseIteratee(predicate, 3);\n      collection = keys(collection);\n      predicate = function(key) { return iteratee(iterable[key], key, iterable); };\n    }\n    var index = findIndexFunc(collection, predicate, fromIndex);\n    return index > -1 ? iterable[iteratee ? collection[index] : index] : undefined;\n  };\n}\n\nexport default createFind;\n","import baseFindIndex from './_baseFindIndex.js';\nimport baseIteratee from './_baseIteratee.js';\nimport toInteger from './toInteger.js';\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max;\n\n/**\n * This method is like `_.find` except that it returns the index of the first\n * element `predicate` returns truthy for instead of the element itself.\n *\n * @static\n * @memberOf _\n * @since 1.1.0\n * @category Array\n * @param {Array} array The array to inspect.\n * @param {Function} [predicate=_.identity] The function invoked per iteration.\n * @param {number} [fromIndex=0] The index to search from.\n * @returns {number} Returns the index of the found element, else `-1`.\n * @example\n *\n * var users = [\n *   { 'user': 'barney',  'active': false },\n *   { 'user': 'fred',    'active': false },\n *   { 'user': 'pebbles', 'active': true }\n * ];\n *\n * _.findIndex(users, function(o) { return o.user == 'barney'; });\n * // => 0\n *\n * // The `_.matches` iteratee shorthand.\n * _.findIndex(users, { 'user': 'fred', 'active': false });\n * // => 1\n *\n * // The `_.matchesProperty` iteratee shorthand.\n * _.findIndex(users, ['active', false]);\n * // => 0\n *\n * // The `_.property` iteratee shorthand.\n * _.findIndex(users, 'active');\n * // => 2\n */\nfunction findIndex(array, predicate, fromIndex) {\n  var length = array == null ? 0 : array.length;\n  if (!length) {\n    return -1;\n  }\n  var index = fromIndex == null ? 0 : toInteger(fromIndex);\n  if (index < 0) {\n    index = nativeMax(length + index, 0);\n  }\n  return baseFindIndex(array, baseIteratee(predicate, 3), index);\n}\n\nexport default findIndex;\n","import createFind from './_createFind.js';\nimport findIndex from './findIndex.js';\n\n/**\n * Iterates over elements of `collection`, returning the first element\n * `predicate` returns truthy for. The predicate is invoked with three\n * arguments: (value, index|key, collection).\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to inspect.\n * @param {Function} [predicate=_.identity] The function invoked per iteration.\n * @param {number} [fromIndex=0] The index to search from.\n * @returns {*} Returns the matched element, else `undefined`.\n * @example\n *\n * var users = [\n *   { 'user': 'barney',  'age': 36, 'active': true },\n *   { 'user': 'fred',    'age': 40, 'active': false },\n *   { 'user': 'pebbles', 'age': 1,  'active': true }\n * ];\n *\n * _.find(users, function(o) { return o.age < 40; });\n * // => object for 'barney'\n *\n * // The `_.matches` iteratee shorthand.\n * _.find(users, { 'age': 1, 'active': true });\n * // => object for 'pebbles'\n *\n * // The `_.matchesProperty` iteratee shorthand.\n * _.find(users, ['active', false]);\n * // => object for 'fred'\n *\n * // The `_.property` iteratee shorthand.\n * _.find(users, 'active');\n * // => object for 'barney'\n */\nvar find = createFind(findIndex);\n\nexport default find;\n","import arrayMap from './_arrayMap.js';\nimport baseIteratee from './_baseIteratee.js';\nimport baseMap from './_baseMap.js';\nimport isArray from './isArray.js';\n\n/**\n * Creates an array of values by running each element in `collection` thru\n * `iteratee`. The iteratee is invoked with three arguments:\n * (value, index|key, collection).\n *\n * Many lodash methods are guarded to work as iteratees for methods like\n * `_.every`, `_.filter`, `_.map`, `_.mapValues`, `_.reject`, and `_.some`.\n *\n * The guarded methods are:\n * `ary`, `chunk`, `curry`, `curryRight`, `drop`, `dropRight`, `every`,\n * `fill`, `invert`, `parseInt`, `random`, `range`, `rangeRight`, `repeat`,\n * `sampleSize`, `slice`, `some`, `sortBy`, `split`, `take`, `takeRight`,\n * `template`, `trim`, `trimEnd`, `trimStart`, and `words`\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n * @returns {Array} Returns the new mapped array.\n * @example\n *\n * function square(n) {\n *   return n * n;\n * }\n *\n * _.map([4, 8], square);\n * // => [16, 64]\n *\n * _.map({ 'a': 4, 'b': 8 }, square);\n * // => [16, 64] (iteration order is not guaranteed)\n *\n * var users = [\n *   { 'user': 'barney' },\n *   { 'user': 'fred' }\n * ];\n *\n * // The `_.property` iteratee shorthand.\n * _.map(users, 'user');\n * // => ['barney', 'fred']\n */\nfunction map(collection, iteratee) {\n  var func = isArray(collection) ? arrayMap : baseMap;\n  return func(collection, baseIteratee(iteratee, 3));\n}\n\nexport default map;\n","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * The base implementation of `_.has` without support for deep paths.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {Array|string} key The key to check.\n * @returns {boolean} Returns `true` if `key` exists, else `false`.\n */\nfunction baseHas(object, key) {\n  return object != null && hasOwnProperty.call(object, key);\n}\n\nexport default baseHas;\n","import baseHas from './_baseHas.js';\nimport hasPath from './_hasPath.js';\n\n/**\n * Checks if `path` is a direct property of `object`.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @param {Array|string} path The path to check.\n * @returns {boolean} Returns `true` if `path` exists, else `false`.\n * @example\n *\n * var object = { 'a': { 'b': 2 } };\n * var other = _.create({ 'a': _.create({ 'b': 2 }) });\n *\n * _.has(object, 'a');\n * // => true\n *\n * _.has(object, 'a.b');\n * // => true\n *\n * _.has(object, ['a', 'b']);\n * // => true\n *\n * _.has(other, 'a');\n * // => false\n */\nfunction has(object, path) {\n  return object != null && hasPath(object, path, baseHas);\n}\n\nexport default has;\n","import isSymbol from './isSymbol.js';\n\n/**\n * The base implementation of methods like `_.max` and `_.min` which accepts a\n * `comparator` to determine the extremum value.\n *\n * @private\n * @param {Array} array The array to iterate over.\n * @param {Function} iteratee The iteratee invoked per iteration.\n * @param {Function} comparator The comparator used to compare values.\n * @returns {*} Returns the extremum value.\n */\nfunction baseExtremum(array, iteratee, comparator) {\n  var index = -1,\n      length = array.length;\n\n  while (++index < length) {\n    var value = array[index],\n        current = iteratee(value);\n\n    if (current != null && (computed === undefined\n          ? (current === current && !isSymbol(current))\n          : comparator(current, computed)\n        )) {\n      var computed = current,\n          result = value;\n    }\n  }\n  return result;\n}\n\nexport default baseExtremum;\n","/**\n * The base implementation of `_.lt` which doesn't coerce arguments.\n *\n * @private\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if `value` is less than `other`,\n *  else `false`.\n */\nfunction baseLt(value, other) {\n  return value < other;\n}\n\nexport default baseLt;\n","import toFinite from './toFinite.js';\n\n/**\n * Converts `value` to an integer.\n *\n * **Note:** This method is loosely based on\n * [`ToInteger`](http://www.ecma-international.org/ecma-262/7.0/#sec-tointeger).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {number} Returns the converted integer.\n * @example\n *\n * _.toInteger(3.2);\n * // => 3\n *\n * _.toInteger(Number.MIN_VALUE);\n * // => 0\n *\n * _.toInteger(Infinity);\n * // => 1.7976931348623157e+308\n *\n * _.toInteger('3.2');\n * // => 3\n */\nfunction toInteger(value) {\n  var result = toFinite(value),\n      remainder = result % 1;\n\n  return result === result ? (remainder ? result - remainder : result) : 0;\n}\n\nexport default toInteger;\n","/** Used to match a single whitespace character. */\nvar reWhitespace = /\\s/;\n\n/**\n * Used by `_.trim` and `_.trimEnd` to get the index of the last non-whitespace\n * character of `string`.\n *\n * @private\n * @param {string} string The string to inspect.\n * @returns {number} Returns the index of the last non-whitespace character.\n */\nfunction trimmedEndIndex(string) {\n  var index = string.length;\n\n  while (index-- && reWhitespace.test(string.charAt(index))) {}\n  return index;\n}\n\nexport default trimmedEndIndex;\n","import trimmedEndIndex from './_trimmedEndIndex.js';\n\n/** Used to match leading whitespace. */\nvar reTrimStart = /^\\s+/;\n\n/**\n * The base implementation of `_.trim`.\n *\n * @private\n * @param {string} string The string to trim.\n * @returns {string} Returns the trimmed string.\n */\nfunction baseTrim(string) {\n  return string\n    ? string.slice(0, trimmedEndIndex(string) + 1).replace(reTrimStart, '')\n    : string;\n}\n\nexport default baseTrim;\n","import baseTrim from './_baseTrim.js';\nimport isObject from './isObject.js';\nimport isSymbol from './isSymbol.js';\n\n/** Used as references for various `Number` constants. */\nvar NAN = 0 / 0;\n\n/** Used to detect bad signed hexadecimal string values. */\nvar reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n/** Used to detect binary string values. */\nvar reIsBinary = /^0b[01]+$/i;\n\n/** Used to detect octal string values. */\nvar reIsOctal = /^0o[0-7]+$/i;\n\n/** Built-in method references without a dependency on `root`. */\nvar freeParseInt = parseInt;\n\n/**\n * Converts `value` to a number.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {number} Returns the number.\n * @example\n *\n * _.toNumber(3.2);\n * // => 3.2\n *\n * _.toNumber(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toNumber(Infinity);\n * // => Infinity\n *\n * _.toNumber('3.2');\n * // => 3.2\n */\nfunction toNumber(value) {\n  if (typeof value == 'number') {\n    return value;\n  }\n  if (isSymbol(value)) {\n    return NAN;\n  }\n  if (isObject(value)) {\n    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n    value = isObject(other) ? (other + '') : other;\n  }\n  if (typeof value != 'string') {\n    return value === 0 ? value : +value;\n  }\n  value = baseTrim(value);\n  var isBinary = reIsBinary.test(value);\n  return (isBinary || reIsOctal.test(value))\n    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n    : (reIsBadHex.test(value) ? NAN : +value);\n}\n\nexport default toNumber;\n","import toNumber from './toNumber.js';\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0,\n    MAX_INTEGER = 1.7976931348623157e+308;\n\n/**\n * Converts `value` to a finite number.\n *\n * @static\n * @memberOf _\n * @since 4.12.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {number} Returns the converted number.\n * @example\n *\n * _.toFinite(3.2);\n * // => 3.2\n *\n * _.toFinite(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toFinite(Infinity);\n * // => 1.7976931348623157e+308\n *\n * _.toFinite('3.2');\n * // => 3.2\n */\nfunction toFinite(value) {\n  if (!value) {\n    return value === 0 ? value : 0;\n  }\n  value = toNumber(value);\n  if (value === INFINITY || value === -INFINITY) {\n    var sign = (value < 0 ? -1 : 1);\n    return sign * MAX_INTEGER;\n  }\n  return value === value ? value : 0;\n}\n\nexport default toFinite;\n","/**\n * Gets the last element of `array`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {Array} array The array to query.\n * @returns {*} Returns the last element of `array`.\n * @example\n *\n * _.last([1, 2, 3]);\n * // => 3\n */\nfunction last(array) {\n  var length = array == null ? 0 : array.length;\n  return length ? array[length - 1] : undefined;\n}\n\nexport default last;\n","import toString from './toString.js';\n\n/** Used to generate unique IDs. */\nvar idCounter = 0;\n\n/**\n * Generates a unique ID. If `prefix` is given, the ID is appended to it.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Util\n * @param {string} [prefix=''] The value to prefix the ID with.\n * @returns {string} Returns the unique ID.\n * @example\n *\n * _.uniqueId('contact_');\n * // => 'contact_104'\n *\n * _.uniqueId();\n * // => '105'\n */\nfunction uniqueId(prefix) {\n  var id = ++idCounter;\n  return toString(prefix) + id;\n}\n\nexport default uniqueId;\n","/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeCeil = Math.ceil,\n    nativeMax = Math.max;\n\n/**\n * The base implementation of `_.range` and `_.rangeRight` which doesn't\n * coerce arguments.\n *\n * @private\n * @param {number} start The start of the range.\n * @param {number} end The end of the range.\n * @param {number} step The value to increment or decrement by.\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Array} Returns the range of numbers.\n */\nfunction baseRange(start, end, step, fromRight) {\n  var index = -1,\n      length = nativeMax(nativeCeil((end - start) / (step || 1)), 0),\n      result = Array(length);\n\n  while (length--) {\n    result[fromRight ? length : ++index] = start;\n    start += step;\n  }\n  return result;\n}\n\nexport default baseRange;\n","import createRange from './_createRange.js';\n\n/**\n * Creates an array of numbers (positive and/or negative) progressing from\n * `start` up to, but not including, `end`. A step of `-1` is used if a negative\n * `start` is specified without an `end` or `step`. If `end` is not specified,\n * it's set to `start` with `start` then set to `0`.\n *\n * **Note:** JavaScript follows the IEEE-754 standard for resolving\n * floating-point values which can produce unexpected results.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Util\n * @param {number} [start=0] The start of the range.\n * @param {number} end The end of the range.\n * @param {number} [step=1] The value to increment or decrement by.\n * @returns {Array} Returns the range of numbers.\n * @see _.inRange, _.rangeRight\n * @example\n *\n * _.range(4);\n * // => [0, 1, 2, 3]\n *\n * _.range(-4);\n * // => [0, -1, -2, -3]\n *\n * _.range(1, 5);\n * // => [1, 2, 3, 4]\n *\n * _.range(0, 20, 5);\n * // => [0, 5, 10, 15]\n *\n * _.range(0, -4, -1);\n * // => [0, -1, -2, -3]\n *\n * _.range(1, 4, 0);\n * // => [1, 1, 1]\n *\n * _.range(0);\n * // => []\n */\nvar range = createRange();\n\nexport default range;\n","import baseRange from './_baseRange.js';\nimport isIterateeCall from './_isIterateeCall.js';\nimport toFinite from './toFinite.js';\n\n/**\n * Creates a `_.range` or `_.rangeRight` function.\n *\n * @private\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Function} Returns the new range function.\n */\nfunction createRange(fromRight) {\n  return function(start, end, step) {\n    if (step && typeof step != 'number' && isIterateeCall(start, end, step)) {\n      end = step = undefined;\n    }\n    // Ensure the sign of `-0` is preserved.\n    start = toFinite(start);\n    if (end === undefined) {\n      end = start;\n      start = 0;\n    } else {\n      end = toFinite(end);\n    }\n    step = step === undefined ? (start < end ? 1 : -1) : toFinite(step);\n    return baseRange(start, end, step, fromRight);\n  };\n}\n\nexport default createRange;\n","/*\n * Simple doubly linked list implementation derived from Cormen, et al.,\n * \"Introduction to Algorithms\".\n */\n\nexport { List };\n\nclass List {\n  constructor() {\n    var sentinel = {};\n    sentinel._next = sentinel._prev = sentinel;\n    this._sentinel = sentinel;\n  }\n  dequeue() {\n    var sentinel = this._sentinel;\n    var entry = sentinel._prev;\n    if (entry !== sentinel) {\n      unlink(entry);\n      return entry;\n    }\n  }\n  enqueue(entry) {\n    var sentinel = this._sentinel;\n    if (entry._prev && entry._next) {\n      unlink(entry);\n    }\n    entry._next = sentinel._next;\n    sentinel._next._prev = entry;\n    sentinel._next = entry;\n    entry._prev = sentinel;\n  }\n  toString() {\n    var strs = [];\n    var sentinel = this._sentinel;\n    var curr = sentinel._prev;\n    while (curr !== sentinel) {\n      strs.push(JSON.stringify(curr, filterOutLinks));\n      curr = curr._prev;\n    }\n    return '[' + strs.join(', ') + ']';\n  }\n}\n\nfunction unlink(entry) {\n  entry._prev._next = entry._next;\n  entry._next._prev = entry._prev;\n  delete entry._next;\n  delete entry._prev;\n}\n\nfunction filterOutLinks(k, v) {\n  if (k !== '_next' && k !== '_prev') {\n    return v;\n  }\n}\n","import * as _ from 'lodash-es';\nimport { Graph } from '../graphlib/index.js';\nimport { List } from './data/list.js';\n\n/*\n * A greedy heuristic for finding a feedback arc set for a graph. A feedback\n * arc set is a set of edges that can be removed to make a graph acyclic.\n * The algorithm comes from: P. Eades, X. Lin, and W. F. Smyth, \"A fast and\n * effective heuristic for the feedback arc set problem.\" This implementation\n * adjusts that from the paper to allow for weighted edges.\n */\nexport { greedyFAS };\n\nvar DEFAULT_WEIGHT_FN = _.constant(1);\n\nfunction greedyFAS(g, weightFn) {\n  if (g.nodeCount() <= 1) {\n    return [];\n  }\n  var state = buildState(g, weightFn || DEFAULT_WEIGHT_FN);\n  var results = doGreedyFAS(state.graph, state.buckets, state.zeroIdx);\n\n  // Expand multi-edges\n  return _.flatten(\n    _.map(results, function (e) {\n      return g.outEdges(e.v, e.w);\n    }),\n  );\n}\n\nfunction doGreedyFAS(g, buckets, zeroIdx) {\n  var results = [];\n  var sources = buckets[buckets.length - 1];\n  var sinks = buckets[0];\n\n  var entry;\n  while (g.nodeCount()) {\n    while ((entry = sinks.dequeue())) {\n      removeNode(g, buckets, zeroIdx, entry);\n    }\n    while ((entry = sources.dequeue())) {\n      removeNode(g, buckets, zeroIdx, entry);\n    }\n    if (g.nodeCount()) {\n      for (var i = buckets.length - 2; i > 0; --i) {\n        entry = buckets[i].dequeue();\n        if (entry) {\n          results = results.concat(removeNode(g, buckets, zeroIdx, entry, true));\n          break;\n        }\n      }\n    }\n  }\n\n  return results;\n}\n\nfunction removeNode(g, buckets, zeroIdx, entry, collectPredecessors) {\n  var results = collectPredecessors ? [] : undefined;\n\n  _.forEach(g.inEdges(entry.v), function (edge) {\n    var weight = g.edge(edge);\n    var uEntry = g.node(edge.v);\n\n    if (collectPredecessors) {\n      results.push({ v: edge.v, w: edge.w });\n    }\n\n    uEntry.out -= weight;\n    assignBucket(buckets, zeroIdx, uEntry);\n  });\n\n  _.forEach(g.outEdges(entry.v), function (edge) {\n    var weight = g.edge(edge);\n    var w = edge.w;\n    var wEntry = g.node(w);\n    wEntry['in'] -= weight;\n    assignBucket(buckets, zeroIdx, wEntry);\n  });\n\n  g.removeNode(entry.v);\n\n  return results;\n}\n\nfunction buildState(g, weightFn) {\n  var fasGraph = new Graph();\n  var maxIn = 0;\n  var maxOut = 0;\n\n  _.forEach(g.nodes(), function (v) {\n    fasGraph.setNode(v, { v: v, in: 0, out: 0 });\n  });\n\n  // Aggregate weights on nodes, but also sum the weights across multi-edges\n  // into a single edge for the fasGraph.\n  _.forEach(g.edges(), function (e) {\n    var prevWeight = fasGraph.edge(e.v, e.w) || 0;\n    var weight = weightFn(e);\n    var edgeWeight = prevWeight + weight;\n    fasGraph.setEdge(e.v, e.w, edgeWeight);\n    maxOut = Math.max(maxOut, (fasGraph.node(e.v).out += weight));\n    maxIn = Math.max(maxIn, (fasGraph.node(e.w)['in'] += weight));\n  });\n\n  var buckets = _.range(maxOut + maxIn + 3).map(function () {\n    return new List();\n  });\n  var zeroIdx = maxIn + 1;\n\n  _.forEach(fasGraph.nodes(), function (v) {\n    assignBucket(buckets, zeroIdx, fasGraph.node(v));\n  });\n\n  return { graph: fasGraph, buckets: buckets, zeroIdx: zeroIdx };\n}\n\nfunction assignBucket(buckets, zeroIdx, entry) {\n  if (!entry.out) {\n    buckets[0].enqueue(entry);\n  } else if (!entry['in']) {\n    buckets[buckets.length - 1].enqueue(entry);\n  } else {\n    buckets[entry.out - entry['in'] + zeroIdx].enqueue(entry);\n  }\n}\n","import * as _ from 'lodash-es';\nimport { greedyFAS } from './greedy-fas.js';\n\nexport { run, undo };\n\nfunction run(g) {\n  var fas = g.graph().acyclicer === 'greedy' ? greedyFAS(g, weightFn(g)) : dfsFAS(g);\n  _.forEach(fas, function (e) {\n    var label = g.edge(e);\n    g.removeEdge(e);\n    label.forwardName = e.name;\n    label.reversed = true;\n    g.setEdge(e.w, e.v, label, _.uniqueId('rev'));\n  });\n\n  function weightFn(g) {\n    return function (e) {\n      return g.edge(e).weight;\n    };\n  }\n}\n\nfunction dfsFAS(g) {\n  var fas = [];\n  var stack = {};\n  var visited = {};\n\n  function dfs(v) {\n    if (Object.prototype.hasOwnProperty.call(visited, v)) {\n      return;\n    }\n    visited[v] = true;\n    stack[v] = true;\n    _.forEach(g.outEdges(v), function (e) {\n      if (Object.prototype.hasOwnProperty.call(stack, e.w)) {\n        fas.push(e);\n      } else {\n        dfs(e.w);\n      }\n    });\n    delete stack[v];\n  }\n\n  _.forEach(g.nodes(), dfs);\n  return fas;\n}\n\nfunction undo(g) {\n  _.forEach(g.edges(), function (e) {\n    var label = g.edge(e);\n    if (label.reversed) {\n      g.removeEdge(e);\n\n      var forwardName = label.forwardName;\n      delete label.reversed;\n      delete label.forwardName;\n      g.setEdge(e.w, e.v, label, forwardName);\n    }\n  });\n}\n","import basePickBy from './_basePickBy.js';\nimport hasIn from './hasIn.js';\n\n/**\n * The base implementation of `_.pick` without support for individual\n * property identifiers.\n *\n * @private\n * @param {Object} object The source object.\n * @param {string[]} paths The property paths to pick.\n * @returns {Object} Returns the new object.\n */\nfunction basePick(object, paths) {\n  return basePickBy(object, paths, function(value, path) {\n    return hasIn(object, path);\n  });\n}\n\nexport default basePick;\n","import basePick from './_basePick.js';\nimport flatRest from './_flatRest.js';\n\n/**\n * Creates an object composed of the picked `object` properties.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The source object.\n * @param {...(string|string[])} [paths] The property paths to pick.\n * @returns {Object} Returns the new object.\n * @example\n *\n * var object = { 'a': 1, 'b': '2', 'c': 3 };\n *\n * _.pick(object, ['a', 'c']);\n * // => { 'a': 1, 'c': 3 }\n */\nvar pick = flatRest(function(object, paths) {\n  return object == null ? {} : basePick(object, paths);\n});\n\nexport default pick;\n","import flatten from './flatten.js';\nimport overRest from './_overRest.js';\nimport setToString from './_setToString.js';\n\n/**\n * A specialized version of `baseRest` which flattens the rest array.\n *\n * @private\n * @param {Function} func The function to apply a rest parameter to.\n * @returns {Function} Returns the new function.\n */\nfunction flatRest(func) {\n  return setToString(overRest(func, undefined, flatten), func + '');\n}\n\nexport default flatRest;\n","/**\n * The base implementation of `_.gt` which doesn't coerce arguments.\n *\n * @private\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if `value` is greater than `other`,\n *  else `false`.\n */\nfunction baseGt(value, other) {\n  return value > other;\n}\n\nexport default baseGt;\n","import baseExtremum from './_baseExtremum.js';\nimport baseGt from './_baseGt.js';\nimport identity from './identity.js';\n\n/**\n * Computes the maximum value of `array`. If `array` is empty or falsey,\n * `undefined` is returned.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Math\n * @param {Array} array The array to iterate over.\n * @returns {*} Returns the maximum value.\n * @example\n *\n * _.max([4, 2, 8, 6]);\n * // => 8\n *\n * _.max([]);\n * // => undefined\n */\nfunction max(array) {\n  return (array && array.length)\n    ? baseExtremum(array, identity, baseGt)\n    : undefined;\n}\n\nexport default max;\n","import baseAssignValue from './_baseAssignValue.js';\nimport baseForOwn from './_baseForOwn.js';\nimport baseIteratee from './_baseIteratee.js';\n\n/**\n * Creates an object with the same keys as `object` and values generated\n * by running each own enumerable string keyed property of `object` thru\n * `iteratee`. The iteratee is invoked with three arguments:\n * (value, key, object).\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Object\n * @param {Object} object The object to iterate over.\n * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n * @returns {Object} Returns the new mapped object.\n * @see _.mapKeys\n * @example\n *\n * var users = {\n *   'fred':    { 'user': 'fred',    'age': 40 },\n *   'pebbles': { 'user': 'pebbles', 'age': 1 }\n * };\n *\n * _.mapValues(users, function(o) { return o.age; });\n * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)\n *\n * // The `_.property` iteratee shorthand.\n * _.mapValues(users, 'age');\n * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)\n */\nfunction mapValues(object, iteratee) {\n  var result = {};\n  iteratee = baseIteratee(iteratee, 3);\n\n  baseForOwn(object, function(value, key, object) {\n    baseAssignValue(result, key, iteratee(value, key, object));\n  });\n  return result;\n}\n\nexport default mapValues;\n","import root from './_root.js';\n\n/**\n * Gets the timestamp of the number of milliseconds that have elapsed since\n * the Unix epoch (1 January 1970 00:00:00 UTC).\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Date\n * @returns {number} Returns the timestamp.\n * @example\n *\n * _.defer(function(stamp) {\n *   console.log(_.now() - stamp);\n * }, _.now());\n * // => Logs the number of milliseconds it took for the deferred invocation.\n */\nvar now = function() {\n  return root.Date.now();\n};\n\nexport default now;\n","import * as _ from 'lodash-es';\nimport { Graph } from '../graphlib/index.js';\n\nexport {\n  addDummyNode,\n  simplify,\n  asNonCompoundGraph,\n  successorWeights,\n  predecessorWeights,\n  intersectRect,\n  buildLayerMatrix,\n  normalizeRanks,\n  removeEmptyRanks,\n  addBorderNode,\n  maxRank,\n  partition,\n  time,\n  notime,\n};\n\n/*\n * Adds a dummy node to the graph and return v.\n */\nfunction addDummyNode(g, type, attrs, name) {\n  var v;\n  do {\n    v = _.uniqueId(name);\n  } while (g.hasNode(v));\n\n  attrs.dummy = type;\n  g.setNode(v, attrs);\n  return v;\n}\n\n/*\n * Returns a new graph with only simple edges. Handles aggregation of data\n * associated with multi-edges.\n */\nfunction simplify(g) {\n  var simplified = new Graph().setGraph(g.graph());\n  _.forEach(g.nodes(), function (v) {\n    simplified.setNode(v, g.node(v));\n  });\n  _.forEach(g.edges(), function (e) {\n    var simpleLabel = simplified.edge(e.v, e.w) || { weight: 0, minlen: 1 };\n    var label = g.edge(e);\n    simplified.setEdge(e.v, e.w, {\n      weight: simpleLabel.weight + label.weight,\n      minlen: Math.max(simpleLabel.minlen, label.minlen),\n    });\n  });\n  return simplified;\n}\n\nfunction asNonCompoundGraph(g) {\n  var simplified = new Graph({ multigraph: g.isMultigraph() }).setGraph(g.graph());\n  _.forEach(g.nodes(), function (v) {\n    if (!g.children(v).length) {\n      simplified.setNode(v, g.node(v));\n    }\n  });\n  _.forEach(g.edges(), function (e) {\n    simplified.setEdge(e, g.edge(e));\n  });\n  return simplified;\n}\n\nfunction successorWeights(g) {\n  var weightMap = _.map(g.nodes(), function (v) {\n    var sucs = {};\n    _.forEach(g.outEdges(v), function (e) {\n      sucs[e.w] = (sucs[e.w] || 0) + g.edge(e).weight;\n    });\n    return sucs;\n  });\n  return _.zipObject(g.nodes(), weightMap);\n}\n\nfunction predecessorWeights(g) {\n  var weightMap = _.map(g.nodes(), function (v) {\n    var preds = {};\n    _.forEach(g.inEdges(v), function (e) {\n      preds[e.v] = (preds[e.v] || 0) + g.edge(e).weight;\n    });\n    return preds;\n  });\n  return _.zipObject(g.nodes(), weightMap);\n}\n\n/*\n * Finds where a line starting at point ({x, y}) would intersect a rectangle\n * ({x, y, width, height}) if it were pointing at the rectangle's center.\n */\nfunction intersectRect(rect, point) {\n  var x = rect.x;\n  var y = rect.y;\n\n  // Rectangle intersection algorithm from:\n  // http://math.stackexchange.com/questions/108113/find-edge-between-two-boxes\n  var dx = point.x - x;\n  var dy = point.y - y;\n  var w = rect.width / 2;\n  var h = rect.height / 2;\n\n  if (!dx && !dy) {\n    throw new Error('Not possible to find intersection inside of the rectangle');\n  }\n\n  var sx, sy;\n  if (Math.abs(dy) * w > Math.abs(dx) * h) {\n    // Intersection is top or bottom of rect.\n    if (dy < 0) {\n      h = -h;\n    }\n    sx = (h * dx) / dy;\n    sy = h;\n  } else {\n    // Intersection is left or right of rect.\n    if (dx < 0) {\n      w = -w;\n    }\n    sx = w;\n    sy = (w * dy) / dx;\n  }\n\n  return { x: x + sx, y: y + sy };\n}\n\n/*\n * Given a DAG with each node assigned \"rank\" and \"order\" properties, this\n * function will produce a matrix with the ids of each node.\n */\nfunction buildLayerMatrix(g) {\n  var layering = _.map(_.range(maxRank(g) + 1), function () {\n    return [];\n  });\n  _.forEach(g.nodes(), function (v) {\n    var node = g.node(v);\n    var rank = node.rank;\n    if (!_.isUndefined(rank)) {\n      layering[rank][node.order] = v;\n    }\n  });\n  return layering;\n}\n\n/*\n * Adjusts the ranks for all nodes in the graph such that all nodes v have\n * rank(v) >= 0 and at least one node w has rank(w) = 0.\n */\nfunction normalizeRanks(g) {\n  var min = _.min(\n    _.map(g.nodes(), function (v) {\n      return g.node(v).rank;\n    }),\n  );\n  _.forEach(g.nodes(), function (v) {\n    var node = g.node(v);\n    if (_.has(node, 'rank')) {\n      node.rank -= min;\n    }\n  });\n}\n\nfunction removeEmptyRanks(g) {\n  // Ranks may not start at 0, so we need to offset them\n  var offset = _.min(\n    _.map(g.nodes(), function (v) {\n      return g.node(v).rank;\n    }),\n  );\n\n  var layers = [];\n  _.forEach(g.nodes(), function (v) {\n    var rank = g.node(v).rank - offset;\n    if (!layers[rank]) {\n      layers[rank] = [];\n    }\n    layers[rank].push(v);\n  });\n\n  var delta = 0;\n  var nodeRankFactor = g.graph().nodeRankFactor;\n  _.forEach(layers, function (vs, i) {\n    if (_.isUndefined(vs) && i % nodeRankFactor !== 0) {\n      --delta;\n    } else if (delta) {\n      _.forEach(vs, function (v) {\n        g.node(v).rank += delta;\n      });\n    }\n  });\n}\n\nfunction addBorderNode(g, prefix, rank, order) {\n  var node = {\n    width: 0,\n    height: 0,\n  };\n  if (arguments.length >= 4) {\n    node.rank = rank;\n    node.order = order;\n  }\n  return addDummyNode(g, 'border', node, prefix);\n}\n\nfunction maxRank(g) {\n  return _.max(\n    _.map(g.nodes(), function (v) {\n      var rank = g.node(v).rank;\n      if (!_.isUndefined(rank)) {\n        return rank;\n      }\n    }),\n  );\n}\n\n/*\n * Partition a collection into two groups: `lhs` and `rhs`. If the supplied\n * function returns true for an entry it goes into `lhs`. Otherwise it goes\n * into `rhs.\n */\nfunction partition(collection, fn) {\n  var result = { lhs: [], rhs: [] };\n  _.forEach(collection, function (value) {\n    if (fn(value)) {\n      result.lhs.push(value);\n    } else {\n      result.rhs.push(value);\n    }\n  });\n  return result;\n}\n\n/*\n * Returns a new function that wraps `fn` with a timer. The wrapper logs the\n * time it takes to execute the function.\n */\nfunction time(name, fn) {\n  var start = _.now();\n  try {\n    return fn();\n  } finally {\n    console.log(name + ' time: ' + (_.now() - start) + 'ms');\n  }\n}\n\nfunction notime(name, fn) {\n  return fn();\n}\n","import * as _ from 'lodash-es';\nimport * as util from './util.js';\n\nexport { addBorderSegments };\n\nfunction addBorderSegments(g) {\n  function dfs(v) {\n    var children = g.children(v);\n    var node = g.node(v);\n    if (children.length) {\n      _.forEach(children, dfs);\n    }\n\n    if (Object.prototype.hasOwnProperty.call(node, 'minRank')) {\n      node.borderLeft = [];\n      node.borderRight = [];\n      for (var rank = node.minRank, maxRank = node.maxRank + 1; rank < maxRank; ++rank) {\n        addBorderNode(g, 'borderLeft', '_bl', v, node, rank);\n        addBorderNode(g, 'borderRight', '_br', v, node, rank);\n      }\n    }\n  }\n\n  _.forEach(g.children(), dfs);\n}\n\nfunction addBorderNode(g, prop, prefix, sg, sgNode, rank) {\n  var label = { width: 0, height: 0, rank: rank, borderType: prop };\n  var prev = sgNode[prop][rank - 1];\n  var curr = util.addDummyNode(g, 'border', label, prefix);\n  sgNode[prop][rank] = curr;\n  g.setParent(curr, sg);\n  if (prev) {\n    g.setEdge(prev, curr, { weight: 1 });\n  }\n}\n","import * as _ from 'lodash-es';\n\nexport { adjust, undo };\n\nfunction adjust(g) {\n  var rankDir = g.graph().rankdir.toLowerCase();\n  if (rankDir === 'lr' || rankDir === 'rl') {\n    swapWidthHeight(g);\n  }\n}\n\nfunction undo(g) {\n  var rankDir = g.graph().rankdir.toLowerCase();\n  if (rankDir === 'bt' || rankDir === 'rl') {\n    reverseY(g);\n  }\n\n  if (rankDir === 'lr' || rankDir === 'rl') {\n    swapXY(g);\n    swapWidthHeight(g);\n  }\n}\n\nfunction swapWidthHeight(g) {\n  _.forEach(g.nodes(), function (v) {\n    swapWidthHeightOne(g.node(v));\n  });\n  _.forEach(g.edges(), function (e) {\n    swapWidthHeightOne(g.edge(e));\n  });\n}\n\nfunction swapWidthHeightOne(attrs) {\n  var w = attrs.width;\n  attrs.width = attrs.height;\n  attrs.height = w;\n}\n\nfunction reverseY(g) {\n  _.forEach(g.nodes(), function (v) {\n    reverseYOne(g.node(v));\n  });\n\n  _.forEach(g.edges(), function (e) {\n    var edge = g.edge(e);\n    _.forEach(edge.points, reverseYOne);\n    if (Object.prototype.hasOwnProperty.call(edge, 'y')) {\n      reverseYOne(edge);\n    }\n  });\n}\n\nfunction reverseYOne(attrs) {\n  attrs.y = -attrs.y;\n}\n\nfunction swapXY(g) {\n  _.forEach(g.nodes(), function (v) {\n    swapXYOne(g.node(v));\n  });\n\n  _.forEach(g.edges(), function (e) {\n    var edge = g.edge(e);\n    _.forEach(edge.points, swapXYOne);\n    if (Object.prototype.hasOwnProperty.call(edge, 'x')) {\n      swapXYOne(edge);\n    }\n  });\n}\n\nfunction swapXYOne(attrs) {\n  var x = attrs.x;\n  attrs.x = attrs.y;\n  attrs.y = x;\n}\n","/**\n * TypeScript type imports:\n *\n * @import { Graph } from '../graphlib/graph.js';\n */\nimport * as _ from 'lodash-es';\nimport * as util from './util.js';\n\nexport { run, undo };\n\n/*\n * Breaks any long edges in the graph into short segments that span 1 layer\n * each. This operation is undoable with the denormalize function.\n *\n * Pre-conditions:\n *\n *    1. The input graph is a DAG.\n *    2. Each node in the graph has a \"rank\" property.\n *\n * Post-condition:\n *\n *    1. All edges in the graph have a length of 1.\n *    2. Dummy nodes are added where edges have been split into segments.\n *    3. The graph is augmented with a \"dummyChains\" attribute which contains\n *       the first dummy in each chain of dummy nodes produced.\n */\nfunction run(g) {\n  g.graph().dummyChains = [];\n  _.forEach(g.edges(), function (edge) {\n    normalizeEdge(g, edge);\n  });\n}\n\n/**\n * @param {Graph} g\n */\nfunction normalizeEdge(g, e) {\n  var v = e.v;\n  var vRank = g.node(v).rank;\n  var w = e.w;\n  var wRank = g.node(w).rank;\n  var name = e.name;\n  var edgeLabel = g.edge(e);\n  var labelRank = edgeLabel.labelRank;\n\n  if (wRank === vRank + 1) return;\n\n  g.removeEdge(e);\n\n  /**\n   * @typedef {Object} Attrs\n   * @property {number} width\n   * @property {number} height\n   * @property {ReturnType<Graph[\"node\"]>} edgeLabel\n   * @property {any} edgeObj\n   * @property {ReturnType<Graph[\"node\"]>[\"rank\"]} rank\n   * @property {string} [dummy]\n   * @property {ReturnType<Graph[\"node\"]>[\"labelpos\"]} [labelpos]\n   */\n\n  /** @type {Attrs | undefined} */\n  var attrs = undefined;\n  var dummy, i;\n  for (i = 0, ++vRank; vRank < wRank; ++i, ++vRank) {\n    edgeLabel.points = [];\n    attrs = {\n      width: 0,\n      height: 0,\n      edgeLabel: edgeLabel,\n      edgeObj: e,\n      rank: vRank,\n    };\n    dummy = util.addDummyNode(g, 'edge', attrs, '_d');\n    if (vRank === labelRank) {\n      attrs.width = edgeLabel.width;\n      attrs.height = edgeLabel.height;\n      attrs.dummy = 'edge-label';\n      attrs.labelpos = edgeLabel.labelpos;\n    }\n    g.setEdge(v, dummy, { weight: edgeLabel.weight }, name);\n    if (i === 0) {\n      g.graph().dummyChains.push(dummy);\n    }\n    v = dummy;\n  }\n\n  g.setEdge(v, w, { weight: edgeLabel.weight }, name);\n}\n\nfunction undo(g) {\n  _.forEach(g.graph().dummyChains, function (v) {\n    var node = g.node(v);\n    var origLabel = node.edgeLabel;\n    var w;\n    g.setEdge(node.edgeObj, origLabel);\n    while (node.dummy) {\n      w = g.successors(v)[0];\n      g.removeNode(v);\n      origLabel.points.push({ x: node.x, y: node.y });\n      if (node.dummy === 'edge-label') {\n        origLabel.x = node.x;\n        origLabel.y = node.y;\n        origLabel.width = node.width;\n        origLabel.height = node.height;\n      }\n      v = w;\n      node = g.node(v);\n    }\n  });\n}\n","import baseExtremum from './_baseExtremum.js';\nimport baseIteratee from './_baseIteratee.js';\nimport baseLt from './_baseLt.js';\n\n/**\n * This method is like `_.min` except that it accepts `iteratee` which is\n * invoked for each element in `array` to generate the criterion by which\n * the value is ranked. The iteratee is invoked with one argument: (value).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Math\n * @param {Array} array The array to iterate over.\n * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n * @returns {*} Returns the minimum value.\n * @example\n *\n * var objects = [{ 'n': 1 }, { 'n': 2 }];\n *\n * _.minBy(objects, function(o) { return o.n; });\n * // => { 'n': 1 }\n *\n * // The `_.property` iteratee shorthand.\n * _.minBy(objects, 'n');\n * // => { 'n': 1 }\n */\nfunction minBy(array, iteratee) {\n  return (array && array.length)\n    ? baseExtremum(array, baseIteratee(iteratee, 2), baseLt)\n    : undefined;\n}\n\nexport default minBy;\n","import * as _ from 'lodash-es';\n\nexport { longestPath, slack };\n\n/*\n * Initializes ranks for the input graph using the longest path algorithm. This\n * algorithm scales well and is fast in practice, it yields rather poor\n * solutions. Nodes are pushed to the lowest layer possible, leaving the bottom\n * ranks wide and leaving edges longer than necessary. However, due to its\n * speed, this algorithm is good for getting an initial ranking that can be fed\n * into other algorithms.\n *\n * This algorithm does not normalize layers because it will be used by other\n * algorithms in most cases. If using this algorithm directly, be sure to\n * run normalize at the end.\n *\n * Pre-conditions:\n *\n *    1. Input graph is a DAG.\n *    2. Input graph node labels can be assigned properties.\n *\n * Post-conditions:\n *\n *    1. Each node will be assign an (unnormalized) \"rank\" property.\n */\nfunction longestPath(g) {\n  var visited = {};\n\n  function dfs(v) {\n    var label = g.node(v);\n    if (Object.prototype.hasOwnProperty.call(visited, v)) {\n      return label.rank;\n    }\n    visited[v] = true;\n\n    var rank = _.min(\n      _.map(g.outEdges(v), function (e) {\n        return dfs(e.w) - g.edge(e).minlen;\n      }),\n    );\n\n    if (\n      rank === Number.POSITIVE_INFINITY || // return value of _.map([]) for Lodash 3\n      rank === undefined || // return value of _.map([]) for Lodash 4\n      rank === null\n    ) {\n      // return value of _.map([null])\n      rank = 0;\n    }\n\n    return (label.rank = rank);\n  }\n\n  _.forEach(g.sources(), dfs);\n}\n\n/*\n * Returns the amount of slack for the given edge. The slack is defined as the\n * difference between the length of the edge and its minimum length.\n */\nfunction slack(g, e) {\n  return g.node(e.w).rank - g.node(e.v).rank - g.edge(e).minlen;\n}\n","import * as _ from 'lodash-es';\nimport { Graph } from '../../graphlib/index.js';\nimport { slack } from './util.js';\n\nexport { feasibleTree };\n\n/*\n * Constructs a spanning tree with tight edges and adjusted the input node's\n * ranks to achieve this. A tight edge is one that is has a length that matches\n * its \"minlen\" attribute.\n *\n * The basic structure for this function is derived from Gansner, et al., \"A\n * Technique for Drawing Directed Graphs.\"\n *\n * Pre-conditions:\n *\n *    1. Graph must be a DAG.\n *    2. Graph must be connected.\n *    3. Graph must have at least one node.\n *    5. Graph nodes must have been previously assigned a \"rank\" property that\n *       respects the \"minlen\" property of incident edges.\n *    6. Graph edges must have a \"minlen\" property.\n *\n * Post-conditions:\n *\n *    - Graph nodes will have their rank adjusted to ensure that all edges are\n *      tight.\n *\n * Returns a tree (undirected graph) that is constructed using only \"tight\"\n * edges.\n */\nfunction feasibleTree(g) {\n  var t = new Graph({ directed: false });\n\n  // Choose arbitrary node from which to start our tree\n  var start = g.nodes()[0];\n  var size = g.nodeCount();\n  t.setNode(start, {});\n\n  var edge, delta;\n  while (tightTree(t, g) < size) {\n    edge = findMinSlackEdge(t, g);\n    delta = t.hasNode(edge.v) ? slack(g, edge) : -slack(g, edge);\n    shiftRanks(t, g, delta);\n  }\n\n  return t;\n}\n\n/*\n * Finds a maximal tree of tight edges and returns the number of nodes in the\n * tree.\n */\nfunction tightTree(t, g) {\n  function dfs(v) {\n    _.forEach(g.nodeEdges(v), function (e) {\n      var edgeV = e.v,\n        w = v === edgeV ? e.w : edgeV;\n      if (!t.hasNode(w) && !slack(g, e)) {\n        t.setNode(w, {});\n        t.setEdge(v, w, {});\n        dfs(w);\n      }\n    });\n  }\n\n  _.forEach(t.nodes(), dfs);\n  return t.nodeCount();\n}\n\n/*\n * Finds the edge with the smallest slack that is incident on tree and returns\n * it.\n */\nfunction findMinSlackEdge(t, g) {\n  return _.minBy(g.edges(), function (e) {\n    if (t.hasNode(e.v) !== t.hasNode(e.w)) {\n      return slack(g, e);\n    }\n  });\n}\n\nfunction shiftRanks(t, g, delta) {\n  _.forEach(t.nodes(), function (v) {\n    g.node(v).rank += delta;\n  });\n}\n","import * as _ from 'lodash-es';\nimport { PriorityQueue } from '../data/priority-queue.js';\n\nexport { dijkstra };\n\nvar DEFAULT_WEIGHT_FUNC = _.constant(1);\n\nfunction dijkstra(g, source, weightFn, edgeFn) {\n  return runDijkstra(\n    g,\n    String(source),\n    weightFn || DEFAULT_WEIGHT_FUNC,\n    edgeFn ||\n      function (v) {\n        return g.outEdges(v);\n      },\n  );\n}\n\nfunction runDijkstra(g, source, weightFn, edgeFn) {\n  var results = {};\n  var pq = new PriorityQueue();\n  var v, vEntry;\n\n  var updateNeighbors = function (edge) {\n    var w = edge.v !== v ? edge.v : edge.w;\n    var wEntry = results[w];\n    var weight = weightFn(edge);\n    var distance = vEntry.distance + weight;\n\n    if (weight < 0) {\n      throw new Error(\n        'dijkstra does not allow negative edge weights. ' +\n          'Bad edge: ' +\n          edge +\n          ' Weight: ' +\n          weight,\n      );\n    }\n\n    if (distance < wEntry.distance) {\n      wEntry.distance = distance;\n      wEntry.predecessor = v;\n      pq.decrease(w, distance);\n    }\n  };\n\n  g.nodes().forEach(function (v) {\n    var distance = v === source ? 0 : Number.POSITIVE_INFINITY;\n    results[v] = { distance: distance };\n    pq.add(v, distance);\n  });\n\n  while (pq.size() > 0) {\n    v = pq.removeMin();\n    vEntry = results[v];\n    if (vEntry.distance === Number.POSITIVE_INFINITY) {\n      break;\n    }\n\n    edgeFn(v).forEach(updateNeighbors);\n  }\n\n  return results;\n}\n","import * as _ from 'lodash-es';\n\nexport { floydWarshall };\n\nvar DEFAULT_WEIGHT_FUNC = _.constant(1);\n\nfunction floydWarshall(g, weightFn, edgeFn) {\n  return runFloydWarshall(\n    g,\n    weightFn || DEFAULT_WEIGHT_FUNC,\n    edgeFn ||\n      function (v) {\n        return g.outEdges(v);\n      },\n  );\n}\n\nfunction runFloydWarshall(g, weightFn, edgeFn) {\n  var results = {};\n  var nodes = g.nodes();\n\n  nodes.forEach(function (v) {\n    results[v] = {};\n    results[v][v] = { distance: 0 };\n    nodes.forEach(function (w) {\n      if (v !== w) {\n        results[v][w] = { distance: Number.POSITIVE_INFINITY };\n      }\n    });\n    edgeFn(v).forEach(function (edge) {\n      var w = edge.v === v ? edge.w : edge.v;\n      var d = weightFn(edge);\n      results[v][w] = { distance: d, predecessor: v };\n    });\n  });\n\n  nodes.forEach(function (k) {\n    var rowK = results[k];\n    nodes.forEach(function (i) {\n      var rowI = results[i];\n      nodes.forEach(function (j) {\n        var ik = rowI[k];\n        var kj = rowK[j];\n        var ij = rowI[j];\n        var altDistance = ik.distance + kj.distance;\n        if (altDistance < ij.distance) {\n          ij.distance = altDistance;\n          ij.predecessor = kj.predecessor;\n        }\n      });\n    });\n  });\n\n  return results;\n}\n","import baseProperty from './_baseProperty.js';\n\n/**\n * Gets the size of an ASCII `string`.\n *\n * @private\n * @param {string} string The string inspect.\n * @returns {number} Returns the string size.\n */\nvar asciiSize = baseProperty('length');\n\nexport default asciiSize;\n","/** Used to compose unicode character classes. */\nvar rsAstralRange = '\\\\ud800-\\\\udfff',\n    rsComboMarksRange = '\\\\u0300-\\\\u036f',\n    reComboHalfMarksRange = '\\\\ufe20-\\\\ufe2f',\n    rsComboSymbolsRange = '\\\\u20d0-\\\\u20ff',\n    rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange,\n    rsVarRange = '\\\\ufe0e\\\\ufe0f';\n\n/** Used to compose unicode capture groups. */\nvar rsZWJ = '\\\\u200d';\n\n/** Used to detect strings with [zero-width joiners or code points from the astral planes](http://eev.ee/blog/2015/09/12/dark-corners-of-unicode/). */\nvar reHasUnicode = RegExp('[' + rsZWJ + rsAstralRange  + rsComboRange + rsVarRange + ']');\n\n/**\n * Checks if `string` contains Unicode symbols.\n *\n * @private\n * @param {string} string The string to inspect.\n * @returns {boolean} Returns `true` if a symbol is found, else `false`.\n */\nfunction hasUnicode(string) {\n  return reHasUnicode.test(string);\n}\n\nexport default hasUnicode;\n","/** Used to compose unicode character classes. */\nvar rsAstralRange = '\\\\ud800-\\\\udfff',\n    rsComboMarksRange = '\\\\u0300-\\\\u036f',\n    reComboHalfMarksRange = '\\\\ufe20-\\\\ufe2f',\n    rsComboSymbolsRange = '\\\\u20d0-\\\\u20ff',\n    rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange,\n    rsVarRange = '\\\\ufe0e\\\\ufe0f';\n\n/** Used to compose unicode capture groups. */\nvar rsAstral = '[' + rsAstralRange + ']',\n    rsCombo = '[' + rsComboRange + ']',\n    rsFitz = '\\\\ud83c[\\\\udffb-\\\\udfff]',\n    rsModifier = '(?:' + rsCombo + '|' + rsFitz + ')',\n    rsNonAstral = '[^' + rsAstralRange + ']',\n    rsRegional = '(?:\\\\ud83c[\\\\udde6-\\\\uddff]){2}',\n    rsSurrPair = '[\\\\ud800-\\\\udbff][\\\\udc00-\\\\udfff]',\n    rsZWJ = '\\\\u200d';\n\n/** Used to compose unicode regexes. */\nvar reOptMod = rsModifier + '?',\n    rsOptVar = '[' + rsVarRange + ']?',\n    rsOptJoin = '(?:' + rsZWJ + '(?:' + [rsNonAstral, rsRegional, rsSurrPair].join('|') + ')' + rsOptVar + reOptMod + ')*',\n    rsSeq = rsOptVar + reOptMod + rsOptJoin,\n    rsSymbol = '(?:' + [rsNonAstral + rsCombo + '?', rsCombo, rsRegional, rsSurrPair, rsAstral].join('|') + ')';\n\n/** Used to match [string symbols](https://mathiasbynens.be/notes/javascript-unicode). */\nvar reUnicode = RegExp(rsFitz + '(?=' + rsFitz + ')|' + rsSymbol + rsSeq, 'g');\n\n/**\n * Gets the size of a Unicode `string`.\n *\n * @private\n * @param {string} string The string inspect.\n * @returns {number} Returns the string size.\n */\nfunction unicodeSize(string) {\n  var result = reUnicode.lastIndex = 0;\n  while (reUnicode.test(string)) {\n    ++result;\n  }\n  return result;\n}\n\nexport default unicodeSize;\n","import * as _ from 'lodash-es';\n\nexport { topsort, CycleException };\n\ntopsort.CycleException = CycleException;\n\nfunction topsort(g) {\n  var visited = {};\n  var stack = {};\n  var results = [];\n\n  function visit(node) {\n    if (Object.prototype.hasOwnProperty.call(stack, node)) {\n      throw new CycleException();\n    }\n\n    if (!Object.prototype.hasOwnProperty.call(visited, node)) {\n      stack[node] = true;\n      visited[node] = true;\n      _.each(g.predecessors(node), visit);\n      delete stack[node];\n      results.push(node);\n    }\n  }\n\n  _.each(g.sinks(), visit);\n\n  if (_.size(visited) !== g.nodeCount()) {\n    throw new CycleException();\n  }\n\n  return results;\n}\n\nfunction CycleException() {}\nCycleException.prototype = new Error(); // must be an instance of Error to pass testing\n","import * as _ from 'lodash-es';\n\nexport { dfs };\n\n/*\n * A helper that preforms a pre- or post-order traversal on the input graph\n * and returns the nodes in the order they were visited. If the graph is\n * undirected then this algorithm will navigate using neighbors. If the graph\n * is directed then this algorithm will navigate using successors.\n *\n * Order must be one of \"pre\" or \"post\".\n */\nfunction dfs(g, vs, order) {\n  if (!_.isArray(vs)) {\n    vs = [vs];\n  }\n\n  var navigation = (g.isDirected() ? g.successors : g.neighbors).bind(g);\n\n  var acc = [];\n  var visited = {};\n  _.each(vs, function (v) {\n    if (!g.hasNode(v)) {\n      throw new Error('Graph does not have node: ' + v);\n    }\n\n    doDfs(g, v, order === 'post', visited, navigation, acc);\n  });\n  return acc;\n}\n\nfunction doDfs(g, v, postorder, visited, navigation, acc) {\n  if (!Object.prototype.hasOwnProperty.call(visited, v)) {\n    visited[v] = true;\n\n    if (!postorder) {\n      acc.push(v);\n    }\n    _.each(navigation(v), function (w) {\n      doDfs(g, w, postorder, visited, navigation, acc);\n    });\n    if (postorder) {\n      acc.push(v);\n    }\n  }\n}\n","import * as _ from 'lodash-es';\nimport * as alg from '../../graphlib/alg/index.js';\nimport { simplify } from '../util.js';\nimport { feasibleTree } from './feasible-tree.js';\nimport { longestPath, slack } from './util.js';\n\nexport { networkSimplex };\n\n// Expose some internals for testing purposes\nnetworkSimplex.initLowLimValues = initLowLimValues;\nnetworkSimplex.initCutValues = initCutValues;\nnetworkSimplex.calcCutValue = calcCutValue;\nnetworkSimplex.leaveEdge = leaveEdge;\nnetworkSimplex.enterEdge = enterEdge;\nnetworkSimplex.exchangeEdges = exchangeEdges;\n\n/*\n * The network simplex algorithm assigns ranks to each node in the input graph\n * and iteratively improves the ranking to reduce the length of edges.\n *\n * Preconditions:\n *\n *    1. The input graph must be a DAG.\n *    2. All nodes in the graph must have an object value.\n *    3. All edges in the graph must have \"minlen\" and \"weight\" attributes.\n *\n * Postconditions:\n *\n *    1. All nodes in the graph will have an assigned \"rank\" attribute that has\n *       been optimized by the network simplex algorithm. Ranks start at 0.\n *\n *\n * A rough sketch of the algorithm is as follows:\n *\n *    1. Assign initial ranks to each node. We use the longest path algorithm,\n *       which assigns ranks to the lowest position possible. In general this\n *       leads to very wide bottom ranks and unnecessarily long edges.\n *    2. Construct a feasible tight tree. A tight tree is one such that all\n *       edges in the tree have no slack (difference between length of edge\n *       and minlen for the edge). This by itself greatly improves the assigned\n *       rankings by shorting edges.\n *    3. Iteratively find edges that have negative cut values. Generally a\n *       negative cut value indicates that the edge could be removed and a new\n *       tree edge could be added to produce a more compact graph.\n *\n * Much of the algorithms here are derived from Gansner, et al., \"A Technique\n * for Drawing Directed Graphs.\" The structure of the file roughly follows the\n * structure of the overall algorithm.\n */\nfunction networkSimplex(g) {\n  g = simplify(g);\n  longestPath(g);\n  var t = feasibleTree(g);\n  initLowLimValues(t);\n  initCutValues(t, g);\n\n  var e, f;\n  while ((e = leaveEdge(t))) {\n    f = enterEdge(t, g, e);\n    exchangeEdges(t, g, e, f);\n  }\n}\n\n/*\n * Initializes cut values for all edges in the tree.\n */\nfunction initCutValues(t, g) {\n  var vs = alg.postorder(t, t.nodes());\n  vs = vs.slice(0, vs.length - 1);\n  _.forEach(vs, function (v) {\n    assignCutValue(t, g, v);\n  });\n}\n\nfunction assignCutValue(t, g, child) {\n  var childLab = t.node(child);\n  var parent = childLab.parent;\n  t.edge(child, parent).cutvalue = calcCutValue(t, g, child);\n}\n\n/*\n * Given the tight tree, its graph, and a child in the graph calculate and\n * return the cut value for the edge between the child and its parent.\n */\nfunction calcCutValue(t, g, child) {\n  var childLab = t.node(child);\n  var parent = childLab.parent;\n  // True if the child is on the tail end of the edge in the directed graph\n  var childIsTail = true;\n  // The graph's view of the tree edge we're inspecting\n  var graphEdge = g.edge(child, parent);\n  // The accumulated cut value for the edge between this node and its parent\n  var cutValue = 0;\n\n  if (!graphEdge) {\n    childIsTail = false;\n    graphEdge = g.edge(parent, child);\n  }\n\n  cutValue = graphEdge.weight;\n\n  _.forEach(g.nodeEdges(child), function (e) {\n    var isOutEdge = e.v === child,\n      other = isOutEdge ? e.w : e.v;\n\n    if (other !== parent) {\n      var pointsToHead = isOutEdge === childIsTail,\n        otherWeight = g.edge(e).weight;\n\n      cutValue += pointsToHead ? otherWeight : -otherWeight;\n      if (isTreeEdge(t, child, other)) {\n        var otherCutValue = t.edge(child, other).cutvalue;\n        cutValue += pointsToHead ? -otherCutValue : otherCutValue;\n      }\n    }\n  });\n\n  return cutValue;\n}\n\nfunction initLowLimValues(tree, root) {\n  if (arguments.length < 2) {\n    root = tree.nodes()[0];\n  }\n  dfsAssignLowLim(tree, {}, 1, root);\n}\n\nfunction dfsAssignLowLim(tree, visited, nextLim, v, parent) {\n  var low = nextLim;\n  var label = tree.node(v);\n\n  visited[v] = true;\n  _.forEach(tree.neighbors(v), function (w) {\n    if (!Object.prototype.hasOwnProperty.call(visited, w)) {\n      nextLim = dfsAssignLowLim(tree, visited, nextLim, w, v);\n    }\n  });\n\n  label.low = low;\n  label.lim = nextLim++;\n  if (parent) {\n    label.parent = parent;\n  } else {\n    // TODO should be able to remove this when we incrementally update low lim\n    delete label.parent;\n  }\n\n  return nextLim;\n}\n\nfunction leaveEdge(tree) {\n  return _.find(tree.edges(), function (e) {\n    return tree.edge(e).cutvalue < 0;\n  });\n}\n\nfunction enterEdge(t, g, edge) {\n  var v = edge.v;\n  var w = edge.w;\n\n  // For the rest of this function we assume that v is the tail and w is the\n  // head, so if we don't have this edge in the graph we should flip it to\n  // match the correct orientation.\n  if (!g.hasEdge(v, w)) {\n    v = edge.w;\n    w = edge.v;\n  }\n\n  var vLabel = t.node(v);\n  var wLabel = t.node(w);\n  var tailLabel = vLabel;\n  var flip = false;\n\n  // If the root is in the tail of the edge then we need to flip the logic that\n  // checks for the head and tail nodes in the candidates function below.\n  if (vLabel.lim > wLabel.lim) {\n    tailLabel = wLabel;\n    flip = true;\n  }\n\n  var candidates = _.filter(g.edges(), function (edge) {\n    return (\n      flip === isDescendant(t, t.node(edge.v), tailLabel) &&\n      flip !== isDescendant(t, t.node(edge.w), tailLabel)\n    );\n  });\n\n  return _.minBy(candidates, function (edge) {\n    return slack(g, edge);\n  });\n}\n\nfunction exchangeEdges(t, g, e, f) {\n  var v = e.v;\n  var w = e.w;\n  t.removeEdge(v, w);\n  t.setEdge(f.v, f.w, {});\n  initLowLimValues(t);\n  initCutValues(t, g);\n  updateRanks(t, g);\n}\n\nfunction updateRanks(t, g) {\n  var root = _.find(t.nodes(), function (v) {\n    return !g.node(v).parent;\n  });\n  var vs = alg.preorder(t, root);\n  vs = vs.slice(1);\n  _.forEach(vs, function (v) {\n    var parent = t.node(v).parent,\n      edge = g.edge(v, parent),\n      flipped = false;\n\n    if (!edge) {\n      edge = g.edge(parent, v);\n      flipped = true;\n    }\n\n    g.node(v).rank = g.node(parent).rank + (flipped ? edge.minlen : -edge.minlen);\n  });\n}\n\n/*\n * Returns true if the edge is in the tree.\n */\nfunction isTreeEdge(tree, u, v) {\n  return tree.hasEdge(u, v);\n}\n\n/*\n * Returns true if the specified node is descendant of the root node per the\n * assigned low and lim attributes in the tree.\n */\nfunction isDescendant(tree, vLabel, rootLabel) {\n  return rootLabel.low <= vLabel.lim && vLabel.lim <= rootLabel.lim;\n}\n","import { dfs } from './dfs.js';\n\nexport { postorder };\n\nfunction postorder(g, vs) {\n  return dfs(g, vs, 'post');\n}\n","import { dfs } from './dfs.js';\n\nexport { preorder };\n\nfunction preorder(g, vs) {\n  return dfs(g, vs, 'pre');\n}\n","import { feasibleTree } from './feasible-tree.js';\nimport { networkSimplex } from './network-simplex.js';\nimport { longestPath } from './util.js';\n\nexport { rank };\n\n/*\n * Assigns a rank to each node in the input graph that respects the \"minlen\"\n * constraint specified on edges between nodes.\n *\n * This basic structure is derived from Gansner, et al., \"A Technique for\n * Drawing Directed Graphs.\"\n *\n * Pre-conditions:\n *\n *    1. Graph must be a connected DAG\n *    2. Graph nodes must be objects\n *    3. Graph edges must have \"weight\" and \"minlen\" attributes\n *\n * Post-conditions:\n *\n *    1. Graph nodes will have a \"rank\" attribute based on the results of the\n *       algorithm. Ranks can start at any index (including negative), we'll\n *       fix them up later.\n */\nfunction rank(g) {\n  switch (g.graph().ranker) {\n    case 'network-simplex':\n      networkSimplexRanker(g);\n      break;\n    case 'tight-tree':\n      tightTreeRanker(g);\n      break;\n    case 'longest-path':\n      longestPathRanker(g);\n      break;\n    default:\n      networkSimplexRanker(g);\n  }\n}\n\n// A fast and simple ranker, but results are far from optimal.\nvar longestPathRanker = longestPath;\n\nfunction tightTreeRanker(g) {\n  longestPath(g);\n  feasibleTree(g);\n}\n\nfunction networkSimplexRanker(g) {\n  networkSimplex(g);\n}\n","import * as _ from 'lodash-es';\nimport * as util from './util.js';\n\nexport { run, cleanup };\n\n/*\n * A nesting graph creates dummy nodes for the tops and bottoms of subgraphs,\n * adds appropriate edges to ensure that all cluster nodes are placed between\n * these boundries, and ensures that the graph is connected.\n *\n * In addition we ensure, through the use of the minlen property, that nodes\n * and subgraph border nodes to not end up on the same rank.\n *\n * Preconditions:\n *\n *    1. Input graph is a DAG\n *    2. Nodes in the input graph has a minlen attribute\n *\n * Postconditions:\n *\n *    1. Input graph is connected.\n *    2. Dummy nodes are added for the tops and bottoms of subgraphs.\n *    3. The minlen attribute for nodes is adjusted to ensure nodes do not\n *       get placed on the same rank as subgraph border nodes.\n *\n * The nesting graph idea comes from Sander, \"Layout of Compound Directed\n * Graphs.\"\n */\nfunction run(g) {\n  var root = util.addDummyNode(g, 'root', {}, '_root');\n  var depths = treeDepths(g);\n  var height = _.max(_.values(depths)) - 1; // Note: depths is an Object not an array\n  var nodeSep = 2 * height + 1;\n\n  g.graph().nestingRoot = root;\n\n  // Multiply minlen by nodeSep to align nodes on non-border ranks.\n  _.forEach(g.edges(), function (e) {\n    g.edge(e).minlen *= nodeSep;\n  });\n\n  // Calculate a weight that is sufficient to keep subgraphs vertically compact\n  var weight = sumWeights(g) + 1;\n\n  // Create border nodes and link them up\n  _.forEach(g.children(), function (child) {\n    dfs(g, root, nodeSep, weight, height, depths, child);\n  });\n\n  // Save the multiplier for node layers for later removal of empty border\n  // layers.\n  g.graph().nodeRankFactor = nodeSep;\n}\n\nfunction dfs(g, root, nodeSep, weight, height, depths, v) {\n  var children = g.children(v);\n  if (!children.length) {\n    if (v !== root) {\n      g.setEdge(root, v, { weight: 0, minlen: nodeSep });\n    }\n    return;\n  }\n\n  var top = util.addBorderNode(g, '_bt');\n  var bottom = util.addBorderNode(g, '_bb');\n  var label = g.node(v);\n\n  g.setParent(top, v);\n  label.borderTop = top;\n  g.setParent(bottom, v);\n  label.borderBottom = bottom;\n\n  _.forEach(children, function (child) {\n    dfs(g, root, nodeSep, weight, height, depths, child);\n\n    var childNode = g.node(child);\n    var childTop = childNode.borderTop ? childNode.borderTop : child;\n    var childBottom = childNode.borderBottom ? childNode.borderBottom : child;\n    var thisWeight = childNode.borderTop ? weight : 2 * weight;\n    var minlen = childTop !== childBottom ? 1 : height - depths[v] + 1;\n\n    g.setEdge(top, childTop, {\n      weight: thisWeight,\n      minlen: minlen,\n      nestingEdge: true,\n    });\n\n    g.setEdge(childBottom, bottom, {\n      weight: thisWeight,\n      minlen: minlen,\n      nestingEdge: true,\n    });\n  });\n\n  if (!g.parent(v)) {\n    g.setEdge(root, top, { weight: 0, minlen: height + depths[v] });\n  }\n}\n\nfunction treeDepths(g) {\n  var depths = {};\n  function dfs(v, depth) {\n    var children = g.children(v);\n    if (children && children.length) {\n      _.forEach(children, function (child) {\n        dfs(child, depth + 1);\n      });\n    }\n    depths[v] = depth;\n  }\n  _.forEach(g.children(), function (v) {\n    dfs(v, 1);\n  });\n  return depths;\n}\n\nfunction sumWeights(g) {\n  return _.reduce(\n    g.edges(),\n    function (acc, e) {\n      return acc + g.edge(e).weight;\n    },\n    0,\n  );\n}\n\nfunction cleanup(g) {\n  var graphLabel = g.graph();\n  g.removeNode(graphLabel.nestingRoot);\n  delete graphLabel.nestingRoot;\n  _.forEach(g.edges(), function (e) {\n    var edge = g.edge(e);\n    if (edge.nestingEdge) {\n      g.removeEdge(e);\n    }\n  });\n}\n","import baseClone from './_baseClone.js';\n\n/** Used to compose bitmasks for cloning. */\nvar CLONE_DEEP_FLAG = 1,\n    CLONE_SYMBOLS_FLAG = 4;\n\n/**\n * This method is like `_.clone` except that it recursively clones `value`.\n *\n * @static\n * @memberOf _\n * @since 1.0.0\n * @category Lang\n * @param {*} value The value to recursively clone.\n * @returns {*} Returns the deep cloned value.\n * @see _.clone\n * @example\n *\n * var objects = [{ 'a': 1 }, { 'b': 2 }];\n *\n * var deep = _.cloneDeep(objects);\n * console.log(deep[0] === objects[0]);\n * // => false\n */\nfunction cloneDeep(value) {\n  return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG);\n}\n\nexport default cloneDeep;\n","import * as _ from 'lodash-es';\nimport { Graph } from '../../graphlib/index.js';\n\nexport { buildLayerGraph };\n\n/*\n * Constructs a graph that can be used to sort a layer of nodes. The graph will\n * contain all base and subgraph nodes from the request layer in their original\n * hierarchy and any edges that are incident on these nodes and are of the type\n * requested by the \"relationship\" parameter.\n *\n * Nodes from the requested rank that do not have parents are assigned a root\n * node in the output graph, which is set in the root graph attribute. This\n * makes it easy to walk the hierarchy of movable nodes during ordering.\n *\n * Pre-conditions:\n *\n *    1. Input graph is a DAG\n *    2. Base nodes in the input graph have a rank attribute\n *    3. Subgraph nodes in the input graph has minRank and maxRank attributes\n *    4. Edges have an assigned weight\n *\n * Post-conditions:\n *\n *    1. Output graph has all nodes in the movable rank with preserved\n *       hierarchy.\n *    2. Root nodes in the movable layer are made children of the node\n *       indicated by the root attribute of the graph.\n *    3. Non-movable nodes incident on movable nodes, selected by the\n *       relationship parameter, are included in the graph (without hierarchy).\n *    4. Edges incident on movable nodes, selected by the relationship\n *       parameter, are added to the output graph.\n *    5. The weights for copied edges are aggregated as need, since the output\n *       graph is not a multi-graph.\n */\nfunction buildLayerGraph(g, rank, relationship) {\n  var root = createRootNode(g),\n    result = new Graph({ compound: true })\n      .setGraph({ root: root })\n      .setDefaultNodeLabel(function (v) {\n        return g.node(v);\n      });\n\n  _.forEach(g.nodes(), function (v) {\n    var node = g.node(v),\n      parent = g.parent(v);\n\n    if (node.rank === rank || (node.minRank <= rank && rank <= node.maxRank)) {\n      result.setNode(v);\n      result.setParent(v, parent || root);\n\n      // This assumes we have only short edges!\n      _.forEach(g[relationship](v), function (e) {\n        var u = e.v === v ? e.w : e.v,\n          edge = result.edge(u, v),\n          weight = !_.isUndefined(edge) ? edge.weight : 0;\n        result.setEdge(u, v, { weight: g.edge(e).weight + weight });\n      });\n\n      if (Object.prototype.hasOwnProperty.call(node, 'minRank')) {\n        result.setNode(v, {\n          borderLeft: node.borderLeft[rank],\n          borderRight: node.borderRight[rank],\n        });\n      }\n    }\n  });\n\n  return result;\n}\n\nfunction createRootNode(g) {\n  var v;\n  while (g.hasNode((v = _.uniqueId('_root'))));\n  return v;\n}\n","/**\n * This base implementation of `_.zipObject` which assigns values using `assignFunc`.\n *\n * @private\n * @param {Array} props The property identifiers.\n * @param {Array} values The property values.\n * @param {Function} assignFunc The function to assign values.\n * @returns {Object} Returns the new object.\n */\nfunction baseZipObject(props, values, assignFunc) {\n  var index = -1,\n      length = props.length,\n      valsLength = values.length,\n      result = {};\n\n  while (++index < length) {\n    var value = index < valsLength ? values[index] : undefined;\n    assignFunc(result, props[index], value);\n  }\n  return result;\n}\n\nexport default baseZipObject;\n","import assignValue from './_assignValue.js';\nimport baseZipObject from './_baseZipObject.js';\n\n/**\n * This method is like `_.fromPairs` except that it accepts two arrays,\n * one of property identifiers and one of corresponding values.\n *\n * @static\n * @memberOf _\n * @since 0.4.0\n * @category Array\n * @param {Array} [props=[]] The property identifiers.\n * @param {Array} [values=[]] The property values.\n * @returns {Object} Returns the new object.\n * @example\n *\n * _.zipObject(['a', 'b'], [1, 2]);\n * // => { 'a': 1, 'b': 2 }\n */\nfunction zipObject(props, values) {\n  return baseZipObject(props || [], values || [], assignValue);\n}\n\nexport default zipObject;\n","/**\n * The base implementation of `_.sortBy` which uses `comparer` to define the\n * sort order of `array` and replaces criteria objects with their corresponding\n * values.\n *\n * @private\n * @param {Array} array The array to sort.\n * @param {Function} comparer The function to define sort order.\n * @returns {Array} Returns `array`.\n */\nfunction baseSortBy(array, comparer) {\n  var length = array.length;\n\n  array.sort(comparer);\n  while (length--) {\n    array[length] = array[length].value;\n  }\n  return array;\n}\n\nexport default baseSortBy;\n","import isSymbol from './isSymbol.js';\n\n/**\n * Compares values to sort them in ascending order.\n *\n * @private\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {number} Returns the sort order indicator for `value`.\n */\nfunction compareAscending(value, other) {\n  if (value !== other) {\n    var valIsDefined = value !== undefined,\n        valIsNull = value === null,\n        valIsReflexive = value === value,\n        valIsSymbol = isSymbol(value);\n\n    var othIsDefined = other !== undefined,\n        othIsNull = other === null,\n        othIsReflexive = other === other,\n        othIsSymbol = isSymbol(other);\n\n    if ((!othIsNull && !othIsSymbol && !valIsSymbol && value > other) ||\n        (valIsSymbol && othIsDefined && othIsReflexive && !othIsNull && !othIsSymbol) ||\n        (valIsNull && othIsDefined && othIsReflexive) ||\n        (!valIsDefined && othIsReflexive) ||\n        !valIsReflexive) {\n      return 1;\n    }\n    if ((!valIsNull && !valIsSymbol && !othIsSymbol && value < other) ||\n        (othIsSymbol && valIsDefined && valIsReflexive && !valIsNull && !valIsSymbol) ||\n        (othIsNull && valIsDefined && valIsReflexive) ||\n        (!othIsDefined && valIsReflexive) ||\n        !othIsReflexive) {\n      return -1;\n    }\n  }\n  return 0;\n}\n\nexport default compareAscending;\n","import compareAscending from './_compareAscending.js';\n\n/**\n * Used by `_.orderBy` to compare multiple properties of a value to another\n * and stable sort them.\n *\n * If `orders` is unspecified, all values are sorted in ascending order. Otherwise,\n * specify an order of \"desc\" for descending or \"asc\" for ascending sort order\n * of corresponding values.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {boolean[]|string[]} orders The order to sort by for each property.\n * @returns {number} Returns the sort order indicator for `object`.\n */\nfunction compareMultiple(object, other, orders) {\n  var index = -1,\n      objCriteria = object.criteria,\n      othCriteria = other.criteria,\n      length = objCriteria.length,\n      ordersLength = orders.length;\n\n  while (++index < length) {\n    var result = compareAscending(objCriteria[index], othCriteria[index]);\n    if (result) {\n      if (index >= ordersLength) {\n        return result;\n      }\n      var order = orders[index];\n      return result * (order == 'desc' ? -1 : 1);\n    }\n  }\n  // Fixes an `Array#sort` bug in the JS engine embedded in Adobe applications\n  // that causes it, under certain circumstances, to provide the same value for\n  // `object` and `other`. See https://github.com/jashkenas/underscore/pull/1247\n  // for more details.\n  //\n  // This also ensures a stable sort in V8 and other engines.\n  // See https://bugs.chromium.org/p/v8/issues/detail?id=90 for more details.\n  return object.index - other.index;\n}\n\nexport default compareMultiple;\n","import arrayMap from './_arrayMap.js';\nimport baseGet from './_baseGet.js';\nimport baseIteratee from './_baseIteratee.js';\nimport baseMap from './_baseMap.js';\nimport baseSortBy from './_baseSortBy.js';\nimport baseUnary from './_baseUnary.js';\nimport compareMultiple from './_compareMultiple.js';\nimport identity from './identity.js';\nimport isArray from './isArray.js';\n\n/**\n * The base implementation of `_.orderBy` without param guards.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function[]|Object[]|string[]} iteratees The iteratees to sort by.\n * @param {string[]} orders The sort orders of `iteratees`.\n * @returns {Array} Returns the new sorted array.\n */\nfunction baseOrderBy(collection, iteratees, orders) {\n  if (iteratees.length) {\n    iteratees = arrayMap(iteratees, function(iteratee) {\n      if (isArray(iteratee)) {\n        return function(value) {\n          return baseGet(value, iteratee.length === 1 ? iteratee[0] : iteratee);\n        }\n      }\n      return iteratee;\n    });\n  } else {\n    iteratees = [identity];\n  }\n\n  var index = -1;\n  iteratees = arrayMap(iteratees, baseUnary(baseIteratee));\n\n  var result = baseMap(collection, function(value, key, collection) {\n    var criteria = arrayMap(iteratees, function(iteratee) {\n      return iteratee(value);\n    });\n    return { 'criteria': criteria, 'index': ++index, 'value': value };\n  });\n\n  return baseSortBy(result, function(object, other) {\n    return compareMultiple(object, other, orders);\n  });\n}\n\nexport default baseOrderBy;\n","import baseFlatten from './_baseFlatten.js';\nimport baseOrderBy from './_baseOrderBy.js';\nimport baseRest from './_baseRest.js';\nimport isIterateeCall from './_isIterateeCall.js';\n\n/**\n * Creates an array of elements, sorted in ascending order by the results of\n * running each element in a collection thru each iteratee. This method\n * performs a stable sort, that is, it preserves the original sort order of\n * equal elements. The iteratees are invoked with one argument: (value).\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {...(Function|Function[])} [iteratees=[_.identity]]\n *  The iteratees to sort by.\n * @returns {Array} Returns the new sorted array.\n * @example\n *\n * var users = [\n *   { 'user': 'fred',   'age': 48 },\n *   { 'user': 'barney', 'age': 36 },\n *   { 'user': 'fred',   'age': 30 },\n *   { 'user': 'barney', 'age': 34 }\n * ];\n *\n * _.sortBy(users, [function(o) { return o.user; }]);\n * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 30]]\n *\n * _.sortBy(users, ['user', 'age']);\n * // => objects for [['barney', 34], ['barney', 36], ['fred', 30], ['fred', 48]]\n */\nvar sortBy = baseRest(function(collection, iteratees) {\n  if (collection == null) {\n    return [];\n  }\n  var length = iteratees.length;\n  if (length > 1 && isIterateeCall(collection, iteratees[0], iteratees[1])) {\n    iteratees = [];\n  } else if (length > 2 && isIterateeCall(iteratees[0], iteratees[1], iteratees[2])) {\n    iteratees = [iteratees[0]];\n  }\n  return baseOrderBy(collection, baseFlatten(iteratees, 1), []);\n});\n\nexport default sortBy;\n","import * as _ from 'lodash-es';\n\nexport { crossCount };\n\n/*\n * A function that takes a layering (an array of layers, each with an array of\n * ordererd nodes) and a graph and returns a weighted crossing count.\n *\n * Pre-conditions:\n *\n *    1. Input graph must be simple (not a multigraph), directed, and include\n *       only simple edges.\n *    2. Edges in the input graph must have assigned weights.\n *\n * Post-conditions:\n *\n *    1. The graph and layering matrix are left unchanged.\n *\n * This algorithm is derived from Barth, et al., \"Bilayer Cross Counting.\"\n */\nfunction crossCount(g, layering) {\n  var cc = 0;\n  for (var i = 1; i < layering.length; ++i) {\n    cc += twoLayerCrossCount(g, layering[i - 1], layering[i]);\n  }\n  return cc;\n}\n\nfunction twoLayerCrossCount(g, northLayer, southLayer) {\n  // Sort all of the edges between the north and south layers by their position\n  // in the north layer and then the south. Map these edges to the position of\n  // their head in the south layer.\n  var southPos = _.zipObject(\n    southLayer,\n    _.map(southLayer, function (v, i) {\n      return i;\n    }),\n  );\n  var southEntries = _.flatten(\n    _.map(northLayer, function (v) {\n      return _.sortBy(\n        _.map(g.outEdges(v), function (e) {\n          return { pos: southPos[e.w], weight: g.edge(e).weight };\n        }),\n        'pos',\n      );\n    }),\n  );\n\n  // Build the accumulator tree\n  var firstIndex = 1;\n  while (firstIndex < southLayer.length) firstIndex <<= 1;\n  var treeSize = 2 * firstIndex - 1;\n  firstIndex -= 1;\n  var tree = _.map(new Array(treeSize), function () {\n    return 0;\n  });\n\n  // Calculate the weighted crossings\n  var cc = 0;\n  _.forEach(\n    // @ts-expect-error\n    southEntries.forEach(function (entry) {\n      var index = entry.pos + firstIndex;\n      tree[index] += entry.weight;\n      var weightSum = 0;\n      // @ts-expect-error\n      while (index > 0) {\n        // @ts-expect-error\n        if (index % 2) {\n          weightSum += tree[index + 1];\n        }\n        // @ts-expect-error\n        index = (index - 1) >> 1;\n        tree[index] += entry.weight;\n      }\n      cc += entry.weight * weightSum;\n    }),\n  );\n\n  return cc;\n}\n","import * as _ from 'lodash-es';\n\nexport { resolveConflicts };\n\n/*\n * Given a list of entries of the form {v, barycenter, weight} and a\n * constraint graph this function will resolve any conflicts between the\n * constraint graph and the barycenters for the entries. If the barycenters for\n * an entry would violate a constraint in the constraint graph then we coalesce\n * the nodes in the conflict into a new node that respects the contraint and\n * aggregates barycenter and weight information.\n *\n * This implementation is based on the description in Forster, \"A Fast and\n * Simple Hueristic for Constrained Two-Level Crossing Reduction,\" thought it\n * differs in some specific details.\n *\n * Pre-conditions:\n *\n *    1. Each entry has the form {v, barycenter, weight}, or if the node has\n *       no barycenter, then {v}.\n *\n * Returns:\n *\n *    A new list of entries of the form {vs, i, barycenter, weight}. The list\n *    `vs` may either be a singleton or it may be an aggregation of nodes\n *    ordered such that they do not violate constraints from the constraint\n *    graph. The property `i` is the lowest original index of any of the\n *    elements in `vs`.\n */\nfunction resolveConflicts(entries, cg) {\n  var mappedEntries = {};\n  _.forEach(entries, function (entry, i) {\n    var tmp = (mappedEntries[entry.v] = {\n      indegree: 0,\n      in: [],\n      out: [],\n      vs: [entry.v],\n      i: i,\n    });\n    if (!_.isUndefined(entry.barycenter)) {\n      // @ts-expect-error\n      tmp.barycenter = entry.barycenter;\n      // @ts-expect-error\n      tmp.weight = entry.weight;\n    }\n  });\n\n  _.forEach(cg.edges(), function (e) {\n    var entryV = mappedEntries[e.v];\n    var entryW = mappedEntries[e.w];\n    if (!_.isUndefined(entryV) && !_.isUndefined(entryW)) {\n      entryW.indegree++;\n      entryV.out.push(mappedEntries[e.w]);\n    }\n  });\n\n  var sourceSet = _.filter(mappedEntries, function (entry) {\n    // @ts-expect-error\n    return !entry.indegree;\n  });\n\n  return doResolveConflicts(sourceSet);\n}\n\nfunction doResolveConflicts(sourceSet) {\n  var entries = [];\n\n  function handleIn(vEntry) {\n    return function (uEntry) {\n      if (uEntry.merged) {\n        return;\n      }\n      if (\n        _.isUndefined(uEntry.barycenter) ||\n        _.isUndefined(vEntry.barycenter) ||\n        uEntry.barycenter >= vEntry.barycenter\n      ) {\n        mergeEntries(vEntry, uEntry);\n      }\n    };\n  }\n\n  function handleOut(vEntry) {\n    return function (wEntry) {\n      wEntry['in'].push(vEntry);\n      if (--wEntry.indegree === 0) {\n        sourceSet.push(wEntry);\n      }\n    };\n  }\n\n  while (sourceSet.length) {\n    var entry = sourceSet.pop();\n    entries.push(entry);\n    _.forEach(entry['in'].reverse(), handleIn(entry));\n    _.forEach(entry.out, handleOut(entry));\n  }\n\n  return _.map(\n    _.filter(entries, function (entry) {\n      return !entry.merged;\n    }),\n    function (entry) {\n      return _.pick(entry, ['vs', 'i', 'barycenter', 'weight']);\n    },\n  );\n}\n\nfunction mergeEntries(target, source) {\n  var sum = 0;\n  var weight = 0;\n\n  if (target.weight) {\n    sum += target.barycenter * target.weight;\n    weight += target.weight;\n  }\n\n  if (source.weight) {\n    sum += source.barycenter * source.weight;\n    weight += source.weight;\n  }\n\n  target.vs = source.vs.concat(target.vs);\n  target.barycenter = sum / weight;\n  target.weight = weight;\n  target.i = Math.min(source.i, target.i);\n  source.merged = true;\n}\n","import * as _ from 'lodash-es';\nimport * as util from '../util.js';\n\nexport { sort };\n\nfunction sort(entries, biasRight) {\n  var parts = util.partition(entries, function (entry) {\n    return Object.prototype.hasOwnProperty.call(entry, 'barycenter');\n  });\n  var sortable = parts.lhs,\n    unsortable = _.sortBy(parts.rhs, function (entry) {\n      return -entry.i;\n    }),\n    vs = [],\n    sum = 0,\n    weight = 0,\n    vsIndex = 0;\n\n  sortable.sort(compareWithBias(!!biasRight));\n\n  vsIndex = consumeUnsortable(vs, unsortable, vsIndex);\n\n  _.forEach(sortable, function (entry) {\n    vsIndex += entry.vs.length;\n    vs.push(entry.vs);\n    sum += entry.barycenter * entry.weight;\n    weight += entry.weight;\n    vsIndex = consumeUnsortable(vs, unsortable, vsIndex);\n  });\n\n  var result = { vs: _.flatten(vs) };\n  if (weight) {\n    result.barycenter = sum / weight;\n    result.weight = weight;\n  }\n  return result;\n}\n\nfunction consumeUnsortable(vs, unsortable, index) {\n  var last;\n  while (unsortable.length && (last = _.last(unsortable)).i <= index) {\n    unsortable.pop();\n    vs.push(last.vs);\n    index++;\n  }\n  return index;\n}\n\nfunction compareWithBias(bias) {\n  return function (entryV, entryW) {\n    if (entryV.barycenter < entryW.barycenter) {\n      return -1;\n    } else if (entryV.barycenter > entryW.barycenter) {\n      return 1;\n    }\n\n    return !bias ? entryV.i - entryW.i : entryW.i - entryV.i;\n  };\n}\n","import * as _ from 'lodash-es';\nimport { barycenter } from './barycenter.js';\nimport { resolveConflicts } from './resolve-conflicts.js';\nimport { sort } from './sort.js';\n\nexport { sortSubgraph };\n\nfunction sortSubgraph(g, v, cg, biasRight) {\n  var movable = g.children(v);\n  var node = g.node(v);\n  var bl = node ? node.borderLeft : undefined;\n  var br = node ? node.borderRight : undefined;\n  var subgraphs = {};\n\n  if (bl) {\n    movable = _.filter(movable, function (w) {\n      return w !== bl && w !== br;\n    });\n  }\n\n  var barycenters = barycenter(g, movable);\n  _.forEach(barycenters, function (entry) {\n    if (g.children(entry.v).length) {\n      var subgraphResult = sortSubgraph(g, entry.v, cg, biasRight);\n      subgraphs[entry.v] = subgraphResult;\n      if (Object.prototype.hasOwnProperty.call(subgraphResult, 'barycenter')) {\n        mergeBarycenters(entry, subgraphResult);\n      }\n    }\n  });\n\n  var entries = resolveConflicts(barycenters, cg);\n  expandSubgraphs(entries, subgraphs);\n\n  var result = sort(entries, biasRight);\n\n  if (bl) {\n    result.vs = _.flatten([bl, result.vs, br]);\n    if (g.predecessors(bl).length) {\n      var blPred = g.node(g.predecessors(bl)[0]),\n        brPred = g.node(g.predecessors(br)[0]);\n      if (!Object.prototype.hasOwnProperty.call(result, 'barycenter')) {\n        result.barycenter = 0;\n        result.weight = 0;\n      }\n      result.barycenter =\n        (result.barycenter * result.weight + blPred.order + brPred.order) / (result.weight + 2);\n      result.weight += 2;\n    }\n  }\n\n  return result;\n}\n\nfunction expandSubgraphs(entries, subgraphs) {\n  _.forEach(entries, function (entry) {\n    entry.vs = _.flatten(\n      entry.vs.map(function (v) {\n        if (subgraphs[v]) {\n          return subgraphs[v].vs;\n        }\n        return v;\n      }),\n    );\n  });\n}\n\nfunction mergeBarycenters(target, other) {\n  if (!_.isUndefined(target.barycenter)) {\n    target.barycenter =\n      (target.barycenter * target.weight + other.barycenter * other.weight) /\n      (target.weight + other.weight);\n    target.weight += other.weight;\n  } else {\n    target.barycenter = other.barycenter;\n    target.weight = other.weight;\n  }\n}\n","import * as _ from 'lodash-es';\n\nexport { barycenter };\n\nfunction barycenter(g, movable) {\n  return _.map(movable, function (v) {\n    var inV = g.inEdges(v);\n    if (!inV.length) {\n      return { v: v };\n    } else {\n      var result = _.reduce(\n        inV,\n        function (acc, e) {\n          var edge = g.edge(e),\n            nodeU = g.node(e.v);\n          return {\n            sum: acc.sum + edge.weight * nodeU.order,\n            weight: acc.weight + edge.weight,\n          };\n        },\n        { sum: 0, weight: 0 },\n      );\n\n      return {\n        v: v,\n        barycenter: result.sum / result.weight,\n        weight: result.weight,\n      };\n    }\n  });\n}\n","import * as _ from 'lodash-es';\nimport { Graph } from '../../graphlib/index.js';\nimport * as util from '../util.js';\nimport { addSubgraphConstraints } from './add-subgraph-constraints.js';\nimport { buildLayerGraph } from './build-layer-graph.js';\nimport { crossCount } from './cross-count.js';\nimport { initOrder } from './init-order.js';\nimport { sortSubgraph } from './sort-subgraph.js';\n\nexport { order };\n\n/*\n * Applies heuristics to minimize edge crossings in the graph and sets the best\n * order solution as an order attribute on each node.\n *\n * Pre-conditions:\n *\n *    1. Graph must be DAG\n *    2. Graph nodes must be objects with a \"rank\" attribute\n *    3. Graph edges must have the \"weight\" attribute\n *\n * Post-conditions:\n *\n *    1. Graph nodes will have an \"order\" attribute based on the results of the\n *       algorithm.\n */\nfunction order(g) {\n  var maxRank = util.maxRank(g),\n    downLayerGraphs = buildLayerGraphs(g, _.range(1, maxRank + 1), 'inEdges'),\n    upLayerGraphs = buildLayerGraphs(g, _.range(maxRank - 1, -1, -1), 'outEdges');\n\n  var layering = initOrder(g);\n  assignOrder(g, layering);\n\n  var bestCC = Number.POSITIVE_INFINITY,\n    best;\n\n  for (var i = 0, lastBest = 0; lastBest < 4; ++i, ++lastBest) {\n    sweepLayerGraphs(i % 2 ? downLayerGraphs : upLayerGraphs, i % 4 >= 2);\n\n    layering = util.buildLayerMatrix(g);\n    var cc = crossCount(g, layering);\n    if (cc < bestCC) {\n      lastBest = 0;\n      best = _.cloneDeep(layering);\n      bestCC = cc;\n    }\n  }\n\n  assignOrder(g, best);\n}\n\nfunction buildLayerGraphs(g, ranks, relationship) {\n  return _.map(ranks, function (rank) {\n    return buildLayerGraph(g, rank, relationship);\n  });\n}\n\nfunction sweepLayerGraphs(layerGraphs, biasRight) {\n  var cg = new Graph();\n  _.forEach(layerGraphs, function (lg) {\n    var root = lg.graph().root;\n    var sorted = sortSubgraph(lg, root, cg, biasRight);\n    _.forEach(sorted.vs, function (v, i) {\n      lg.node(v).order = i;\n    });\n    addSubgraphConstraints(lg, cg, sorted.vs);\n  });\n}\n\nfunction assignOrder(g, layering) {\n  _.forEach(layering, function (layer) {\n    _.forEach(layer, function (v, i) {\n      g.node(v).order = i;\n    });\n  });\n}\n","import * as _ from 'lodash-es';\n\n/*\n * Assigns an initial order value for each node by performing a DFS search\n * starting from nodes in the first rank. Nodes are assigned an order in their\n * rank as they are first visited.\n *\n * This approach comes from Gansner, et al., \"A Technique for Drawing Directed\n * Graphs.\"\n *\n * Returns a layering matrix with an array per layer and each layer sorted by\n * the order of its nodes.\n */\nexport function initOrder(g) {\n  var visited = {};\n  var simpleNodes = _.filter(g.nodes(), function (v) {\n    return !g.children(v).length;\n  });\n  var maxRank = _.max(\n    _.map(simpleNodes, function (v) {\n      return g.node(v).rank;\n    }),\n  );\n  var layers = _.map(_.range(maxRank + 1), function () {\n    return [];\n  });\n\n  function dfs(v) {\n    if (_.has(visited, v)) return;\n    visited[v] = true;\n    var node = g.node(v);\n    layers[node.rank].push(v);\n    _.forEach(g.successors(v), dfs);\n  }\n\n  var orderedVs = _.sortBy(simpleNodes, function (v) {\n    return g.node(v).rank;\n  });\n  _.forEach(orderedVs, dfs);\n\n  return layers;\n}\n","import * as _ from 'lodash-es';\n\nexport { addSubgraphConstraints };\n\nfunction addSubgraphConstraints(g, cg, vs) {\n  var prev = {},\n    rootPrev;\n\n  _.forEach(vs, function (v) {\n    var child = g.parent(v),\n      parent,\n      prevChild;\n    while (child) {\n      parent = g.parent(child);\n      if (parent) {\n        prevChild = prev[parent];\n        prev[parent] = child;\n      } else {\n        prevChild = rootPrev;\n        rootPrev = child;\n      }\n      if (prevChild && prevChild !== child) {\n        cg.setEdge(prevChild, child);\n        return;\n      }\n      child = parent;\n    }\n  });\n\n  /*\n  function dfs(v) {\n    var children = v ? g.children(v) : g.children();\n    if (children.length) {\n      var min = Number.POSITIVE_INFINITY,\n          subgraphs = [];\n      _.each(children, function(child) {\n        var childMin = dfs(child);\n        if (g.children(child).length) {\n          subgraphs.push({ v: child, order: childMin });\n        }\n        min = Math.min(min, childMin);\n      });\n      _.reduce(_.sortBy(subgraphs, \"order\"), function(prev, curr) {\n        cg.setEdge(prev.v, curr.v);\n        return curr;\n      });\n      return min;\n    }\n    return g.node(v).order;\n  }\n  dfs(undefined);\n  */\n}\n","import * as _ from 'lodash-es';\n\nexport { parentDummyChains };\n\nfunction parentDummyChains(g) {\n  var postorderNums = postorder(g);\n\n  _.forEach(g.graph().dummyChains, function (v) {\n    var node = g.node(v);\n    var edgeObj = node.edgeObj;\n    var pathData = findPath(g, postorderNums, edgeObj.v, edgeObj.w);\n    var path = pathData.path;\n    var lca = pathData.lca;\n    var pathIdx = 0;\n    var pathV = path[pathIdx];\n    var ascending = true;\n\n    while (v !== edgeObj.w) {\n      node = g.node(v);\n\n      if (ascending) {\n        while ((pathV = path[pathIdx]) !== lca && g.node(pathV).maxRank < node.rank) {\n          pathIdx++;\n        }\n\n        if (pathV === lca) {\n          ascending = false;\n        }\n      }\n\n      if (!ascending) {\n        while (\n          pathIdx < path.length - 1 &&\n          g.node((pathV = path[pathIdx + 1])).minRank <= node.rank\n        ) {\n          pathIdx++;\n        }\n        pathV = path[pathIdx];\n      }\n\n      g.setParent(v, pathV);\n      v = g.successors(v)[0];\n    }\n  });\n}\n\n// Find a path from v to w through the lowest common ancestor (LCA). Return the\n// full path and the LCA.\nfunction findPath(g, postorderNums, v, w) {\n  var vPath = [];\n  var wPath = [];\n  var low = Math.min(postorderNums[v].low, postorderNums[w].low);\n  var lim = Math.max(postorderNums[v].lim, postorderNums[w].lim);\n  var parent;\n  var lca;\n\n  // Traverse up from v to find the LCA\n  parent = v;\n  do {\n    parent = g.parent(parent);\n    vPath.push(parent);\n  } while (parent && (postorderNums[parent].low > low || lim > postorderNums[parent].lim));\n  lca = parent;\n\n  // Traverse from w to LCA\n  parent = w;\n  while ((parent = g.parent(parent)) !== lca) {\n    wPath.push(parent);\n  }\n\n  return { path: vPath.concat(wPath.reverse()), lca: lca };\n}\n\nfunction postorder(g) {\n  var result = {};\n  var lim = 0;\n\n  function dfs(v) {\n    var low = lim;\n    _.forEach(g.children(v), dfs);\n    result[v] = { low: low, lim: lim++ };\n  }\n  _.forEach(g.children(), dfs);\n\n  return result;\n}\n","import baseForOwn from './_baseForOwn.js';\nimport castFunction from './_castFunction.js';\n\n/**\n * Iterates over own enumerable string keyed properties of an object and\n * invokes `iteratee` for each property. The iteratee is invoked with three\n * arguments: (value, key, object). Iteratee functions may exit iteration\n * early by explicitly returning `false`.\n *\n * @static\n * @memberOf _\n * @since 0.3.0\n * @category Object\n * @param {Object} object The object to iterate over.\n * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n * @returns {Object} Returns `object`.\n * @see _.forOwnRight\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.forOwn(new Foo, function(value, key) {\n *   console.log(key);\n * });\n * // => Logs 'a' then 'b' (iteration order is not guaranteed).\n */\nfunction forOwn(object, iteratee) {\n  return object && baseForOwn(object, castFunction(iteratee));\n}\n\nexport default forOwn;\n","import baseFor from './_baseFor.js';\nimport castFunction from './_castFunction.js';\nimport keysIn from './keysIn.js';\n\n/**\n * Iterates over own and inherited enumerable string keyed properties of an\n * object and invokes `iteratee` for each property. The iteratee is invoked\n * with three arguments: (value, key, object). Iteratee functions may exit\n * iteration early by explicitly returning `false`.\n *\n * @static\n * @memberOf _\n * @since 0.3.0\n * @category Object\n * @param {Object} object The object to iterate over.\n * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n * @returns {Object} Returns `object`.\n * @see _.forInRight\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.forIn(new Foo, function(value, key) {\n *   console.log(key);\n * });\n * // => Logs 'a', 'b', then 'c' (iteration order is not guaranteed).\n */\nfunction forIn(object, iteratee) {\n  return object == null\n    ? object\n    : baseFor(object, castFunction(iteratee), keysIn);\n}\n\nexport default forIn;\n","import * as _ from 'lodash-es';\nimport { Graph } from '../../graphlib/index.js';\nimport * as util from '../util.js';\n\n/*\n * This module provides coordinate assignment based on Brandes and Köpf, \"Fast\n * and Simple Horizontal Coordinate Assignment.\"\n */\n\nexport {\n  positionX,\n  findType1Conflicts,\n  findType2Conflicts,\n  addConflict,\n  hasConflict,\n  verticalAlignment,\n  horizontalCompaction,\n  alignCoordinates,\n  findSmallestWidthAlignment,\n  balance,\n};\n\n/*\n * Marks all edges in the graph with a type-1 conflict with the \"type1Conflict\"\n * property. A type-1 conflict is one where a non-inner segment crosses an\n * inner segment. An inner segment is an edge with both incident nodes marked\n * with the \"dummy\" property.\n *\n * This algorithm scans layer by layer, starting with the second, for type-1\n * conflicts between the current layer and the previous layer. For each layer\n * it scans the nodes from left to right until it reaches one that is incident\n * on an inner segment. It then scans predecessors to determine if they have\n * edges that cross that inner segment. At the end a final scan is done for all\n * nodes on the current rank to see if they cross the last visited inner\n * segment.\n *\n * This algorithm (safely) assumes that a dummy node will only be incident on a\n * single node in the layers being scanned.\n */\nfunction findType1Conflicts(g, layering) {\n  var conflicts = {};\n\n  function visitLayer(prevLayer, layer) {\n    var // last visited node in the previous layer that is incident on an inner\n      // segment.\n      k0 = 0,\n      // Tracks the last node in this layer scanned for crossings with a type-1\n      // segment.\n      scanPos = 0,\n      prevLayerLength = prevLayer.length,\n      lastNode = _.last(layer);\n\n    _.forEach(layer, function (v, i) {\n      var w = findOtherInnerSegmentNode(g, v),\n        k1 = w ? g.node(w).order : prevLayerLength;\n\n      if (w || v === lastNode) {\n        _.forEach(layer.slice(scanPos, i + 1), function (scanNode) {\n          _.forEach(g.predecessors(scanNode), function (u) {\n            var uLabel = g.node(u),\n              uPos = uLabel.order;\n            if ((uPos < k0 || k1 < uPos) && !(uLabel.dummy && g.node(scanNode).dummy)) {\n              addConflict(conflicts, u, scanNode);\n            }\n          });\n        });\n        // @ts-expect-error\n        scanPos = i + 1;\n        k0 = k1;\n      }\n    });\n\n    return layer;\n  }\n\n  _.reduce(layering, visitLayer);\n  return conflicts;\n}\n\nfunction findType2Conflicts(g, layering) {\n  var conflicts = {};\n\n  function scan(south, southPos, southEnd, prevNorthBorder, nextNorthBorder) {\n    var v;\n    _.forEach(_.range(southPos, southEnd), function (i) {\n      v = south[i];\n      if (g.node(v).dummy) {\n        _.forEach(g.predecessors(v), function (u) {\n          var uNode = g.node(u);\n          if (uNode.dummy && (uNode.order < prevNorthBorder || uNode.order > nextNorthBorder)) {\n            addConflict(conflicts, u, v);\n          }\n        });\n      }\n    });\n  }\n\n  function visitLayer(north, south) {\n    var prevNorthPos = -1,\n      nextNorthPos,\n      southPos = 0;\n\n    _.forEach(south, function (v, southLookahead) {\n      if (g.node(v).dummy === 'border') {\n        var predecessors = g.predecessors(v);\n        if (predecessors.length) {\n          nextNorthPos = g.node(predecessors[0]).order;\n          scan(south, southPos, southLookahead, prevNorthPos, nextNorthPos);\n          // @ts-expect-error\n          southPos = southLookahead;\n          prevNorthPos = nextNorthPos;\n        }\n      }\n      scan(south, southPos, south.length, nextNorthPos, north.length);\n    });\n\n    return south;\n  }\n\n  _.reduce(layering, visitLayer);\n  return conflicts;\n}\n\nfunction findOtherInnerSegmentNode(g, v) {\n  if (g.node(v).dummy) {\n    return _.find(g.predecessors(v), function (u) {\n      return g.node(u).dummy;\n    });\n  }\n}\n\nfunction addConflict(conflicts, v, w) {\n  if (v > w) {\n    var tmp = v;\n    v = w;\n    w = tmp;\n  }\n\n  var conflictsV = conflicts[v];\n  if (!conflictsV) {\n    conflicts[v] = conflictsV = {};\n  }\n  conflictsV[w] = true;\n}\n\nfunction hasConflict(conflicts, v, w) {\n  if (v > w) {\n    var tmp = v;\n    v = w;\n    w = tmp;\n  }\n  return !!conflicts[v] && Object.prototype.hasOwnProperty.call(conflicts[v], w);\n}\n\n/*\n * Try to align nodes into vertical \"blocks\" where possible. This algorithm\n * attempts to align a node with one of its median neighbors. If the edge\n * connecting a neighbor is a type-1 conflict then we ignore that possibility.\n * If a previous node has already formed a block with a node after the node\n * we're trying to form a block with, we also ignore that possibility - our\n * blocks would be split in that scenario.\n */\nfunction verticalAlignment(g, layering, conflicts, neighborFn) {\n  var root = {},\n    align = {},\n    pos = {};\n\n  // We cache the position here based on the layering because the graph and\n  // layering may be out of sync. The layering matrix is manipulated to\n  // generate different extreme alignments.\n  _.forEach(layering, function (layer) {\n    _.forEach(layer, function (v, order) {\n      root[v] = v;\n      align[v] = v;\n      pos[v] = order;\n    });\n  });\n\n  _.forEach(layering, function (layer) {\n    var prevIdx = -1;\n    _.forEach(layer, function (v) {\n      var ws = neighborFn(v);\n      if (ws.length) {\n        ws = _.sortBy(ws, function (w) {\n          return pos[w];\n        });\n        var mp = (ws.length - 1) / 2;\n        for (var i = Math.floor(mp), il = Math.ceil(mp); i <= il; ++i) {\n          var w = ws[i];\n          if (align[v] === v && prevIdx < pos[w] && !hasConflict(conflicts, v, w)) {\n            align[w] = v;\n            align[v] = root[v] = root[w];\n            prevIdx = pos[w];\n          }\n        }\n      }\n    });\n  });\n\n  return { root: root, align: align };\n}\n\nfunction horizontalCompaction(g, layering, root, align, reverseSep) {\n  // This portion of the algorithm differs from BK due to a number of problems.\n  // Instead of their algorithm we construct a new block graph and do two\n  // sweeps. The first sweep places blocks with the smallest possible\n  // coordinates. The second sweep removes unused space by moving blocks to the\n  // greatest coordinates without violating separation.\n  var xs = {},\n    blockG = buildBlockGraph(g, layering, root, reverseSep),\n    borderType = reverseSep ? 'borderLeft' : 'borderRight';\n\n  function iterate(setXsFunc, nextNodesFunc) {\n    var stack = blockG.nodes();\n    var elem = stack.pop();\n    var visited = {};\n    while (elem) {\n      if (visited[elem]) {\n        setXsFunc(elem);\n      } else {\n        visited[elem] = true;\n        stack.push(elem);\n        stack = stack.concat(nextNodesFunc(elem));\n      }\n\n      elem = stack.pop();\n    }\n  }\n\n  // First pass, assign smallest coordinates\n  function pass1(elem) {\n    xs[elem] = blockG.inEdges(elem).reduce(function (acc, e) {\n      return Math.max(acc, xs[e.v] + blockG.edge(e));\n    }, 0);\n  }\n\n  // Second pass, assign greatest coordinates\n  function pass2(elem) {\n    var min = blockG.outEdges(elem).reduce(function (acc, e) {\n      return Math.min(acc, xs[e.w] - blockG.edge(e));\n    }, Number.POSITIVE_INFINITY);\n\n    var node = g.node(elem);\n    if (min !== Number.POSITIVE_INFINITY && node.borderType !== borderType) {\n      xs[elem] = Math.max(xs[elem], min);\n    }\n  }\n\n  iterate(pass1, blockG.predecessors.bind(blockG));\n  iterate(pass2, blockG.successors.bind(blockG));\n\n  // Assign x coordinates to all nodes\n  _.forEach(align, function (v) {\n    xs[v] = xs[root[v]];\n  });\n\n  return xs;\n}\n\nfunction buildBlockGraph(g, layering, root, reverseSep) {\n  var blockGraph = new Graph(),\n    graphLabel = g.graph(),\n    sepFn = sep(graphLabel.nodesep, graphLabel.edgesep, reverseSep);\n\n  _.forEach(layering, function (layer) {\n    var u;\n    _.forEach(layer, function (v) {\n      var vRoot = root[v];\n      blockGraph.setNode(vRoot);\n      if (u) {\n        var uRoot = root[u],\n          prevMax = blockGraph.edge(uRoot, vRoot);\n        blockGraph.setEdge(uRoot, vRoot, Math.max(sepFn(g, v, u), prevMax || 0));\n      }\n      u = v;\n    });\n  });\n\n  return blockGraph;\n}\n\n/*\n * Returns the alignment that has the smallest width of the given alignments.\n */\nfunction findSmallestWidthAlignment(g, xss) {\n  return _.minBy(_.values(xss), function (xs) {\n    var max = Number.NEGATIVE_INFINITY;\n    var min = Number.POSITIVE_INFINITY;\n\n    _.forIn(xs, function (x, v) {\n      var halfWidth = width(g, v) / 2;\n\n      max = Math.max(x + halfWidth, max);\n      min = Math.min(x - halfWidth, min);\n    });\n\n    return max - min;\n  });\n}\n\n/*\n * Align the coordinates of each of the layout alignments such that\n * left-biased alignments have their minimum coordinate at the same point as\n * the minimum coordinate of the smallest width alignment and right-biased\n * alignments have their maximum coordinate at the same point as the maximum\n * coordinate of the smallest width alignment.\n */\nfunction alignCoordinates(xss, alignTo) {\n  var alignToVals = _.values(alignTo),\n    alignToMin = _.min(alignToVals),\n    alignToMax = _.max(alignToVals);\n\n  _.forEach(['u', 'd'], function (vert) {\n    _.forEach(['l', 'r'], function (horiz) {\n      var alignment = vert + horiz,\n        xs = xss[alignment],\n        delta;\n      if (xs === alignTo) return;\n\n      var xsVals = _.values(xs);\n      delta = horiz === 'l' ? alignToMin - _.min(xsVals) : alignToMax - _.max(xsVals);\n\n      if (delta) {\n        xss[alignment] = _.mapValues(xs, function (x) {\n          return x + delta;\n        });\n      }\n    });\n  });\n}\n\nfunction balance(xss, align) {\n  return _.mapValues(xss.ul, function (ignore, v) {\n    if (align) {\n      return xss[align.toLowerCase()][v];\n    } else {\n      var xs = _.sortBy(_.map(xss, v));\n      return (xs[1] + xs[2]) / 2;\n    }\n  });\n}\n\nfunction positionX(g) {\n  var layering = util.buildLayerMatrix(g);\n  var conflicts = _.merge(findType1Conflicts(g, layering), findType2Conflicts(g, layering));\n\n  var xss = {};\n  var adjustedLayering;\n  _.forEach(['u', 'd'], function (vert) {\n    adjustedLayering = vert === 'u' ? layering : _.values(layering).reverse();\n    _.forEach(['l', 'r'], function (horiz) {\n      if (horiz === 'r') {\n        adjustedLayering = _.map(adjustedLayering, function (inner) {\n          return _.values(inner).reverse();\n        });\n      }\n\n      var neighborFn = (vert === 'u' ? g.predecessors : g.successors).bind(g);\n      var align = verticalAlignment(g, adjustedLayering, conflicts, neighborFn);\n      var xs = horizontalCompaction(g, adjustedLayering, align.root, align.align, horiz === 'r');\n      if (horiz === 'r') {\n        xs = _.mapValues(xs, function (x) {\n          return -x;\n        });\n      }\n      xss[vert + horiz] = xs;\n    });\n  });\n\n  var smallestWidth = findSmallestWidthAlignment(g, xss);\n  alignCoordinates(xss, smallestWidth);\n  return balance(xss, g.graph().align);\n}\n\nfunction sep(nodeSep, edgeSep, reverseSep) {\n  return function (g, v, w) {\n    var vLabel = g.node(v);\n    var wLabel = g.node(w);\n    var sum = 0;\n    var delta;\n\n    sum += vLabel.width / 2;\n    if (Object.prototype.hasOwnProperty.call(vLabel, 'labelpos')) {\n      switch (vLabel.labelpos.toLowerCase()) {\n        case 'l':\n          delta = -vLabel.width / 2;\n          break;\n        case 'r':\n          delta = vLabel.width / 2;\n          break;\n      }\n    }\n    if (delta) {\n      sum += reverseSep ? delta : -delta;\n    }\n    delta = 0;\n\n    sum += (vLabel.dummy ? edgeSep : nodeSep) / 2;\n    sum += (wLabel.dummy ? edgeSep : nodeSep) / 2;\n\n    sum += wLabel.width / 2;\n    if (Object.prototype.hasOwnProperty.call(wLabel, 'labelpos')) {\n      switch (wLabel.labelpos.toLowerCase()) {\n        case 'l':\n          delta = wLabel.width / 2;\n          break;\n        case 'r':\n          delta = -wLabel.width / 2;\n          break;\n      }\n    }\n    if (delta) {\n      sum += reverseSep ? delta : -delta;\n    }\n    delta = 0;\n\n    return sum;\n  };\n}\n\nfunction width(g, v) {\n  return g.node(v).width;\n}\n","import * as _ from 'lodash-es';\nimport * as util from '../util.js';\nimport { positionX } from './bk.js';\n\nexport { position };\n\nfunction position(g) {\n  g = util.asNonCompoundGraph(g);\n\n  positionY(g);\n  _.forOwn(positionX(g), function (x, v) {\n    g.node(v).x = x;\n  });\n}\n\nfunction positionY(g) {\n  var layering = util.buildLayerMatrix(g);\n  var rankSep = g.graph().ranksep;\n  var prevY = 0;\n  _.forEach(layering, function (layer) {\n    var maxHeight = _.max(\n      _.map(layer, function (v) {\n        return g.node(v).height;\n      }),\n    );\n    _.forEach(layer, function (v) {\n      g.node(v).y = prevY + maxHeight / 2;\n    });\n    prevY += maxHeight + rankSep;\n  });\n}\n","import * as _ from 'lodash-es';\nimport { Graph } from '../graphlib/index.js';\nimport { addBorderSegments } from './add-border-segments.js';\nimport * as coordinateSystem from './coordinate-system.js';\nimport * as acyclic from './acyclic.js';\nimport * as normalize from './normalize.js';\nimport { rank } from './rank/index.js';\nimport * as nestingGraph from './nesting-graph.js';\nimport { order } from './order/index.js';\nimport { parentDummyChains } from './parent-dummy-chains.js';\nimport { position } from './position/index.js';\nimport * as util from './util.js';\n\nexport { layout };\n\nfunction layout(g, opts) {\n  var time = opts && opts.debugTiming ? util.time : util.notime;\n  time('layout', () => {\n    var layoutGraph = time('  buildLayoutGraph', () => buildLayoutGraph(g));\n    time('  runLayout', () => runLayout(layoutGraph, time));\n    time('  updateInputGraph', () => updateInputGraph(g, layoutGraph));\n  });\n}\n\nfunction runLayout(g, time) {\n  time('    makeSpaceForEdgeLabels', () => makeSpaceForEdgeLabels(g));\n  time('    removeSelfEdges', () => removeSelfEdges(g));\n  time('    acyclic', () => acyclic.run(g));\n  time('    nestingGraph.run', () => nestingGraph.run(g));\n  time('    rank', () => rank(util.asNonCompoundGraph(g)));\n  time('    injectEdgeLabelProxies', () => injectEdgeLabelProxies(g));\n  time('    removeEmptyRanks', () => util.removeEmptyRanks(g));\n  time('    nestingGraph.cleanup', () => nestingGraph.cleanup(g));\n  time('    normalizeRanks', () => util.normalizeRanks(g));\n  time('    assignRankMinMax', () => assignRankMinMax(g));\n  time('    removeEdgeLabelProxies', () => removeEdgeLabelProxies(g));\n  time('    normalize.run', () => normalize.run(g));\n  time('    parentDummyChains', () => parentDummyChains(g));\n  time('    addBorderSegments', () => addBorderSegments(g));\n  time('    order', () => order(g));\n  time('    insertSelfEdges', () => insertSelfEdges(g));\n  time('    adjustCoordinateSystem', () => coordinateSystem.adjust(g));\n  time('    position', () => position(g));\n  time('    positionSelfEdges', () => positionSelfEdges(g));\n  time('    removeBorderNodes', () => removeBorderNodes(g));\n  time('    normalize.undo', () => normalize.undo(g));\n  time('    fixupEdgeLabelCoords', () => fixupEdgeLabelCoords(g));\n  time('    undoCoordinateSystem', () => coordinateSystem.undo(g));\n  time('    translateGraph', () => translateGraph(g));\n  time('    assignNodeIntersects', () => assignNodeIntersects(g));\n  time('    reversePoints', () => reversePointsForReversedEdges(g));\n  time('    acyclic.undo', () => acyclic.undo(g));\n}\n\n/*\n * Copies final layout information from the layout graph back to the input\n * graph. This process only copies whitelisted attributes from the layout graph\n * to the input graph, so it serves as a good place to determine what\n * attributes can influence layout.\n */\nfunction updateInputGraph(inputGraph, layoutGraph) {\n  _.forEach(inputGraph.nodes(), function (v) {\n    var inputLabel = inputGraph.node(v);\n    var layoutLabel = layoutGraph.node(v);\n\n    if (inputLabel) {\n      inputLabel.x = layoutLabel.x;\n      inputLabel.y = layoutLabel.y;\n\n      if (layoutGraph.children(v).length) {\n        inputLabel.width = layoutLabel.width;\n        inputLabel.height = layoutLabel.height;\n      }\n    }\n  });\n\n  _.forEach(inputGraph.edges(), function (e) {\n    var inputLabel = inputGraph.edge(e);\n    var layoutLabel = layoutGraph.edge(e);\n\n    inputLabel.points = layoutLabel.points;\n    if (Object.prototype.hasOwnProperty.call(layoutLabel, 'x')) {\n      inputLabel.x = layoutLabel.x;\n      inputLabel.y = layoutLabel.y;\n    }\n  });\n\n  inputGraph.graph().width = layoutGraph.graph().width;\n  inputGraph.graph().height = layoutGraph.graph().height;\n}\n\nvar graphNumAttrs = ['nodesep', 'edgesep', 'ranksep', 'marginx', 'marginy'];\nvar graphDefaults = { ranksep: 50, edgesep: 20, nodesep: 50, rankdir: 'tb' };\nvar graphAttrs = ['acyclicer', 'ranker', 'rankdir', 'align'];\nvar nodeNumAttrs = ['width', 'height'];\nvar nodeDefaults = { width: 0, height: 0 };\nvar edgeNumAttrs = ['minlen', 'weight', 'width', 'height', 'labeloffset'];\nvar edgeDefaults = {\n  minlen: 1,\n  weight: 1,\n  width: 0,\n  height: 0,\n  labeloffset: 10,\n  labelpos: 'r',\n};\nvar edgeAttrs = ['labelpos'];\n\n/*\n * Constructs a new graph from the input graph, which can be used for layout.\n * This process copies only whitelisted attributes from the input graph to the\n * layout graph. Thus this function serves as a good place to determine what\n * attributes can influence layout.\n */\nfunction buildLayoutGraph(inputGraph) {\n  var g = new Graph({ multigraph: true, compound: true });\n  var graph = canonicalize(inputGraph.graph());\n\n  g.setGraph(\n    _.merge({}, graphDefaults, selectNumberAttrs(graph, graphNumAttrs), _.pick(graph, graphAttrs)),\n  );\n\n  _.forEach(inputGraph.nodes(), function (v) {\n    var node = canonicalize(inputGraph.node(v));\n    g.setNode(v, _.defaults(selectNumberAttrs(node, nodeNumAttrs), nodeDefaults));\n    g.setParent(v, inputGraph.parent(v));\n  });\n\n  _.forEach(inputGraph.edges(), function (e) {\n    var edge = canonicalize(inputGraph.edge(e));\n    g.setEdge(\n      e,\n      _.merge({}, edgeDefaults, selectNumberAttrs(edge, edgeNumAttrs), _.pick(edge, edgeAttrs)),\n    );\n  });\n\n  return g;\n}\n\n/*\n * This idea comes from the Gansner paper: to account for edge labels in our\n * layout we split each rank in half by doubling minlen and halving ranksep.\n * Then we can place labels at these mid-points between nodes.\n *\n * We also add some minimal padding to the width to push the label for the edge\n * away from the edge itself a bit.\n */\nfunction makeSpaceForEdgeLabels(g) {\n  var graph = g.graph();\n  graph.ranksep /= 2;\n  _.forEach(g.edges(), function (e) {\n    var edge = g.edge(e);\n    edge.minlen *= 2;\n    if (edge.labelpos.toLowerCase() !== 'c') {\n      if (graph.rankdir === 'TB' || graph.rankdir === 'BT') {\n        edge.width += edge.labeloffset;\n      } else {\n        edge.height += edge.labeloffset;\n      }\n    }\n  });\n}\n\n/*\n * Creates temporary dummy nodes that capture the rank in which each edge's\n * label is going to, if it has one of non-zero width and height. We do this\n * so that we can safely remove empty ranks while preserving balance for the\n * label's position.\n */\nfunction injectEdgeLabelProxies(g) {\n  _.forEach(g.edges(), function (e) {\n    var edge = g.edge(e);\n    if (edge.width && edge.height) {\n      var v = g.node(e.v);\n      var w = g.node(e.w);\n      var label = { rank: (w.rank - v.rank) / 2 + v.rank, e: e };\n      util.addDummyNode(g, 'edge-proxy', label, '_ep');\n    }\n  });\n}\n\nfunction assignRankMinMax(g) {\n  var maxRank = 0;\n  _.forEach(g.nodes(), function (v) {\n    var node = g.node(v);\n    if (node.borderTop) {\n      node.minRank = g.node(node.borderTop).rank;\n      node.maxRank = g.node(node.borderBottom).rank;\n      // @ts-expect-error\n      maxRank = _.max(maxRank, node.maxRank);\n    }\n  });\n  g.graph().maxRank = maxRank;\n}\n\nfunction removeEdgeLabelProxies(g) {\n  _.forEach(g.nodes(), function (v) {\n    var node = g.node(v);\n    if (node.dummy === 'edge-proxy') {\n      g.edge(node.e).labelRank = node.rank;\n      g.removeNode(v);\n    }\n  });\n}\n\nfunction translateGraph(g) {\n  var minX = Number.POSITIVE_INFINITY;\n  var maxX = 0;\n  var minY = Number.POSITIVE_INFINITY;\n  var maxY = 0;\n  var graphLabel = g.graph();\n  var marginX = graphLabel.marginx || 0;\n  var marginY = graphLabel.marginy || 0;\n\n  function getExtremes(attrs) {\n    var x = attrs.x;\n    var y = attrs.y;\n    var w = attrs.width;\n    var h = attrs.height;\n    minX = Math.min(minX, x - w / 2);\n    maxX = Math.max(maxX, x + w / 2);\n    minY = Math.min(minY, y - h / 2);\n    maxY = Math.max(maxY, y + h / 2);\n  }\n\n  _.forEach(g.nodes(), function (v) {\n    getExtremes(g.node(v));\n  });\n  _.forEach(g.edges(), function (e) {\n    var edge = g.edge(e);\n    if (Object.prototype.hasOwnProperty.call(edge, 'x')) {\n      getExtremes(edge);\n    }\n  });\n\n  minX -= marginX;\n  minY -= marginY;\n\n  _.forEach(g.nodes(), function (v) {\n    var node = g.node(v);\n    node.x -= minX;\n    node.y -= minY;\n  });\n\n  _.forEach(g.edges(), function (e) {\n    var edge = g.edge(e);\n    _.forEach(edge.points, function (p) {\n      p.x -= minX;\n      p.y -= minY;\n    });\n    if (Object.prototype.hasOwnProperty.call(edge, 'x')) {\n      edge.x -= minX;\n    }\n    if (Object.prototype.hasOwnProperty.call(edge, 'y')) {\n      edge.y -= minY;\n    }\n  });\n\n  graphLabel.width = maxX - minX + marginX;\n  graphLabel.height = maxY - minY + marginY;\n}\n\nfunction assignNodeIntersects(g) {\n  _.forEach(g.edges(), function (e) {\n    var edge = g.edge(e);\n    var nodeV = g.node(e.v);\n    var nodeW = g.node(e.w);\n    var p1, p2;\n    if (!edge.points) {\n      edge.points = [];\n      p1 = nodeW;\n      p2 = nodeV;\n    } else {\n      p1 = edge.points[0];\n      p2 = edge.points[edge.points.length - 1];\n    }\n    edge.points.unshift(util.intersectRect(nodeV, p1));\n    edge.points.push(util.intersectRect(nodeW, p2));\n  });\n}\n\nfunction fixupEdgeLabelCoords(g) {\n  _.forEach(g.edges(), function (e) {\n    var edge = g.edge(e);\n    if (Object.prototype.hasOwnProperty.call(edge, 'x')) {\n      if (edge.labelpos === 'l' || edge.labelpos === 'r') {\n        edge.width -= edge.labeloffset;\n      }\n      switch (edge.labelpos) {\n        case 'l':\n          edge.x -= edge.width / 2 + edge.labeloffset;\n          break;\n        case 'r':\n          edge.x += edge.width / 2 + edge.labeloffset;\n          break;\n      }\n    }\n  });\n}\n\nfunction reversePointsForReversedEdges(g) {\n  _.forEach(g.edges(), function (e) {\n    var edge = g.edge(e);\n    if (edge.reversed) {\n      edge.points.reverse();\n    }\n  });\n}\n\nfunction removeBorderNodes(g) {\n  _.forEach(g.nodes(), function (v) {\n    if (g.children(v).length) {\n      var node = g.node(v);\n      var t = g.node(node.borderTop);\n      var b = g.node(node.borderBottom);\n      var l = g.node(_.last(node.borderLeft));\n      var r = g.node(_.last(node.borderRight));\n\n      node.width = Math.abs(r.x - l.x);\n      node.height = Math.abs(b.y - t.y);\n      node.x = l.x + node.width / 2;\n      node.y = t.y + node.height / 2;\n    }\n  });\n\n  _.forEach(g.nodes(), function (v) {\n    if (g.node(v).dummy === 'border') {\n      g.removeNode(v);\n    }\n  });\n}\n\nfunction removeSelfEdges(g) {\n  _.forEach(g.edges(), function (e) {\n    if (e.v === e.w) {\n      var node = g.node(e.v);\n      if (!node.selfEdges) {\n        node.selfEdges = [];\n      }\n      node.selfEdges.push({ e: e, label: g.edge(e) });\n      g.removeEdge(e);\n    }\n  });\n}\n\nfunction insertSelfEdges(g) {\n  var layers = util.buildLayerMatrix(g);\n  _.forEach(layers, function (layer) {\n    var orderShift = 0;\n    _.forEach(layer, function (v, i) {\n      var node = g.node(v);\n      node.order = i + orderShift;\n      _.forEach(node.selfEdges, function (selfEdge) {\n        util.addDummyNode(\n          g,\n          'selfedge',\n          {\n            width: selfEdge.label.width,\n            height: selfEdge.label.height,\n            rank: node.rank,\n            order: i + ++orderShift,\n            e: selfEdge.e,\n            label: selfEdge.label,\n          },\n          '_se',\n        );\n      });\n      delete node.selfEdges;\n    });\n  });\n}\n\nfunction positionSelfEdges(g) {\n  _.forEach(g.nodes(), function (v) {\n    var node = g.node(v);\n    if (node.dummy === 'selfedge') {\n      var selfNode = g.node(node.e.v);\n      var x = selfNode.x + selfNode.width / 2;\n      var y = selfNode.y;\n      var dx = node.x - x;\n      var dy = selfNode.height / 2;\n      g.setEdge(node.e, node.label);\n      g.removeNode(v);\n      node.label.points = [\n        { x: x + (2 * dx) / 3, y: y - dy },\n        { x: x + (5 * dx) / 6, y: y - dy },\n        { x: x + dx, y: y },\n        { x: x + (5 * dx) / 6, y: y + dy },\n        { x: x + (2 * dx) / 3, y: y + dy },\n      ];\n      node.label.x = node.x;\n      node.label.y = node.y;\n    }\n  });\n}\n\nfunction selectNumberAttrs(obj, attrs) {\n  return _.mapValues(_.pick(obj, attrs), Number);\n}\n\nfunction canonicalize(attrs) {\n  var newAttrs = {};\n  _.forEach(attrs, function (v, k) {\n    newAttrs[k.toLowerCase()] = v;\n  });\n  return newAttrs;\n}\n","import baseEach from './_baseEach.js';\nimport isArrayLike from './isArrayLike.js';\n\n/**\n * The base implementation of `_.map` without support for iteratee shorthands.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the new mapped array.\n */\nfunction baseMap(collection, iteratee) {\n  var index = -1,\n      result = isArrayLike(collection) ? Array(collection.length) : [];\n\n  baseEach(collection, function(value, key, collection) {\n    result[++index] = iteratee(value, key, collection);\n  });\n  return result;\n}\n\nexport default baseMap;\n","import baseExtremum from './_baseExtremum.js';\nimport baseLt from './_baseLt.js';\nimport identity from './identity.js';\n\n/**\n * Computes the minimum value of `array`. If `array` is empty or falsey,\n * `undefined` is returned.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Math\n * @param {Array} array The array to iterate over.\n * @returns {*} Returns the minimum value.\n * @example\n *\n * _.min([4, 2, 8, 6]);\n * // => 2\n *\n * _.min([]);\n * // => undefined\n */\nfunction min(array) {\n  return (array && array.length)\n    ? baseExtremum(array, identity, baseLt)\n    : undefined;\n}\n\nexport default min;\n","import baseFlatten from './_baseFlatten.js';\n\n/**\n * Flattens `array` a single level deep.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {Array} array The array to flatten.\n * @returns {Array} Returns the new flattened array.\n * @example\n *\n * _.flatten([1, [2, [3, [4]], 5]]);\n * // => [1, 2, [3, [4]], 5]\n */\nfunction flatten(array) {\n  var length = array == null ? 0 : array.length;\n  return length ? baseFlatten(array, 1) : [];\n}\n\nexport default flatten;\n","import assignValue from './_assignValue.js';\nimport castPath from './_castPath.js';\nimport isIndex from './_isIndex.js';\nimport isObject from './isObject.js';\nimport toKey from './_toKey.js';\n\n/**\n * The base implementation of `_.set`.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {Array|string} path The path of the property to set.\n * @param {*} value The value to set.\n * @param {Function} [customizer] The function to customize path creation.\n * @returns {Object} Returns `object`.\n */\nfunction baseSet(object, path, value, customizer) {\n  if (!isObject(object)) {\n    return object;\n  }\n  path = castPath(path, object);\n\n  var index = -1,\n      length = path.length,\n      lastIndex = length - 1,\n      nested = object;\n\n  while (nested != null && ++index < length) {\n    var key = toKey(path[index]),\n        newValue = value;\n\n    if (key === '__proto__' || key === 'constructor' || key === 'prototype') {\n      return object;\n    }\n\n    if (index != lastIndex) {\n      var objValue = nested[key];\n      newValue = customizer ? customizer(objValue, key, nested) : undefined;\n      if (newValue === undefined) {\n        newValue = isObject(objValue)\n          ? objValue\n          : (isIndex(path[index + 1]) ? [] : {});\n      }\n    }\n    assignValue(nested, key, newValue);\n    nested = nested[key];\n  }\n  return object;\n}\n\nexport default baseSet;\n","import baseGet from './_baseGet.js';\nimport baseSet from './_baseSet.js';\nimport castPath from './_castPath.js';\n\n/**\n * The base implementation of  `_.pickBy` without support for iteratee shorthands.\n *\n * @private\n * @param {Object} object The source object.\n * @param {string[]} paths The property paths to pick.\n * @param {Function} predicate The function invoked per property.\n * @returns {Object} Returns the new object.\n */\nfunction basePickBy(object, paths, predicate) {\n  var index = -1,\n      length = paths.length,\n      result = {};\n\n  while (++index < length) {\n    var path = paths[index],\n        value = baseGet(object, path);\n\n    if (predicate(value, path)) {\n      baseSet(result, castPath(path, object), value);\n    }\n  }\n  return result;\n}\n\nexport default basePickBy;\n","import baseGetTag from './_baseGetTag.js';\nimport isArray from './isArray.js';\nimport isObjectLike from './isObjectLike.js';\n\n/** `Object#toString` result references. */\nvar stringTag = '[object String]';\n\n/**\n * Checks if `value` is classified as a `String` primitive or object.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a string, else `false`.\n * @example\n *\n * _.isString('abc');\n * // => true\n *\n * _.isString(1);\n * // => false\n */\nfunction isString(value) {\n  return typeof value == 'string' ||\n    (!isArray(value) && isObjectLike(value) && baseGetTag(value) == stringTag);\n}\n\nexport default isString;\n","import baseRest from './_baseRest.js';\nimport eq from './eq.js';\nimport isIterateeCall from './_isIterateeCall.js';\nimport keysIn from './keysIn.js';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Assigns own and inherited enumerable string keyed properties of source\n * objects to the destination object for all destination properties that\n * resolve to `undefined`. Source objects are applied from left to right.\n * Once a property is set, additional values of the same property are ignored.\n *\n * **Note:** This method mutates `object`.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The destination object.\n * @param {...Object} [sources] The source objects.\n * @returns {Object} Returns `object`.\n * @see _.defaultsDeep\n * @example\n *\n * _.defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });\n * // => { 'a': 1, 'b': 2 }\n */\nvar defaults = baseRest(function(object, sources) {\n  object = Object(object);\n\n  var index = -1;\n  var length = sources.length;\n  var guard = length > 2 ? sources[2] : undefined;\n\n  if (guard && isIterateeCall(sources[0], sources[1], guard)) {\n    length = 1;\n  }\n\n  while (++index < length) {\n    var source = sources[index];\n    var props = keysIn(source);\n    var propsIndex = -1;\n    var propsLength = props.length;\n\n    while (++propsIndex < propsLength) {\n      var key = props[propsIndex];\n      var value = object[key];\n\n      if (value === undefined ||\n          (eq(value, objectProto[key]) && !hasOwnProperty.call(object, key))) {\n        object[key] = source[key];\n      }\n    }\n  }\n\n  return object;\n});\n\nexport default defaults;\n","import baseFlatten from './_baseFlatten.js';\nimport baseRest from './_baseRest.js';\nimport baseUniq from './_baseUniq.js';\nimport isArrayLikeObject from './isArrayLikeObject.js';\n\n/**\n * Creates an array of unique values, in order, from all given arrays using\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * for equality comparisons.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {...Array} [arrays] The arrays to inspect.\n * @returns {Array} Returns the new array of combined values.\n * @example\n *\n * _.union([2], [1, 2]);\n * // => [2, 1]\n */\nvar union = baseRest(function(arrays) {\n  return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true));\n});\n\nexport default union;\n","import * as _ from 'lodash-es';\n\nvar DEFAULT_EDGE_NAME = '\\x00';\nvar GRAPH_NODE = '\\x00';\nvar EDGE_KEY_DELIM = '\\x01';\n\n// Implementation notes:\n//\n//  * Node id query functions should return string ids for the nodes\n//  * Edge id query functions should return an \"edgeObj\", edge object, that is\n//    composed of enough information to uniquely identify an edge: {v, w, name}.\n//  * Internally we use an \"edgeId\", a stringified form of the edgeObj, to\n//    reference edges. This is because we need a performant way to look these\n//    edges up and, object properties, which have string keys, are the closest\n//    we're going to get to a performant hashtable in JavaScript.\n\n// Implementation notes:\n//\n//  * Node id query functions should return string ids for the nodes\n//  * Edge id query functions should return an \"edgeObj\", edge object, that is\n//    composed of enough information to uniquely identify an edge: {v, w, name}.\n//  * Internally we use an \"edgeId\", a stringified form of the edgeObj, to\n//    reference edges. This is because we need a performant way to look these\n//    edges up and, object properties, which have string keys, are the closest\n//    we're going to get to a performant hashtable in JavaScript.\nexport class Graph {\n  constructor(opts = {}) {\n    this._isDirected = Object.prototype.hasOwnProperty.call(opts, 'directed')\n      ? opts.directed\n      : true;\n    this._isMultigraph = Object.prototype.hasOwnProperty.call(opts, 'multigraph')\n      ? opts.multigraph\n      : false;\n    this._isCompound = Object.prototype.hasOwnProperty.call(opts, 'compound')\n      ? opts.compound\n      : false;\n\n    // Label for the graph itself\n    this._label = undefined;\n\n    // Defaults to be set when creating a new node\n    this._defaultNodeLabelFn = _.constant(undefined);\n\n    // Defaults to be set when creating a new edge\n    this._defaultEdgeLabelFn = _.constant(undefined);\n\n    // v -> label\n    this._nodes = {};\n\n    if (this._isCompound) {\n      // v -> parent\n      this._parent = {};\n\n      // v -> children\n      this._children = {};\n      this._children[GRAPH_NODE] = {};\n    }\n\n    // v -> edgeObj\n    this._in = {};\n\n    // u -> v -> Number\n    this._preds = {};\n\n    // v -> edgeObj\n    this._out = {};\n\n    // v -> w -> Number\n    this._sucs = {};\n\n    // e -> edgeObj\n    this._edgeObjs = {};\n\n    // e -> label\n    this._edgeLabels = {};\n  }\n  /* === Graph functions ========= */\n  isDirected() {\n    return this._isDirected;\n  }\n  isMultigraph() {\n    return this._isMultigraph;\n  }\n  isCompound() {\n    return this._isCompound;\n  }\n  setGraph(label) {\n    this._label = label;\n    return this;\n  }\n  graph() {\n    return this._label;\n  }\n  /* === Node functions ========== */\n  setDefaultNodeLabel(newDefault) {\n    if (!_.isFunction(newDefault)) {\n      newDefault = _.constant(newDefault);\n    }\n    this._defaultNodeLabelFn = newDefault;\n    return this;\n  }\n  nodeCount() {\n    return this._nodeCount;\n  }\n  nodes() {\n    return _.keys(this._nodes);\n  }\n  sources() {\n    var self = this;\n    return _.filter(this.nodes(), function (v) {\n      return _.isEmpty(self._in[v]);\n    });\n  }\n  sinks() {\n    var self = this;\n    return _.filter(this.nodes(), function (v) {\n      return _.isEmpty(self._out[v]);\n    });\n  }\n  setNodes(vs, value) {\n    var args = arguments;\n    var self = this;\n    _.each(vs, function (v) {\n      if (args.length > 1) {\n        self.setNode(v, value);\n      } else {\n        self.setNode(v);\n      }\n    });\n    return this;\n  }\n  setNode(v, value) {\n    if (Object.prototype.hasOwnProperty.call(this._nodes, v)) {\n      if (arguments.length > 1) {\n        this._nodes[v] = value;\n      }\n      return this;\n    }\n\n    // @ts-expect-error\n    this._nodes[v] = arguments.length > 1 ? value : this._defaultNodeLabelFn(v);\n    if (this._isCompound) {\n      this._parent[v] = GRAPH_NODE;\n      this._children[v] = {};\n      this._children[GRAPH_NODE][v] = true;\n    }\n    this._in[v] = {};\n    this._preds[v] = {};\n    this._out[v] = {};\n    this._sucs[v] = {};\n    ++this._nodeCount;\n    return this;\n  }\n  node(v) {\n    return this._nodes[v];\n  }\n  hasNode(v) {\n    return Object.prototype.hasOwnProperty.call(this._nodes, v);\n  }\n  removeNode(v) {\n    if (Object.prototype.hasOwnProperty.call(this._nodes, v)) {\n      var removeEdge = (e) => this.removeEdge(this._edgeObjs[e]);\n      delete this._nodes[v];\n      if (this._isCompound) {\n        this._removeFromParentsChildList(v);\n        delete this._parent[v];\n        _.each(this.children(v), (child) => {\n          this.setParent(child);\n        });\n        delete this._children[v];\n      }\n      _.each(_.keys(this._in[v]), removeEdge);\n      delete this._in[v];\n      delete this._preds[v];\n      _.each(_.keys(this._out[v]), removeEdge);\n      delete this._out[v];\n      delete this._sucs[v];\n      --this._nodeCount;\n    }\n    return this;\n  }\n  setParent(v, parent) {\n    if (!this._isCompound) {\n      throw new Error('Cannot set parent in a non-compound graph');\n    }\n\n    if (_.isUndefined(parent)) {\n      parent = GRAPH_NODE;\n    } else {\n      // Coerce parent to string\n      parent += '';\n      for (var ancestor = parent; !_.isUndefined(ancestor); ancestor = this.parent(ancestor)) {\n        if (ancestor === v) {\n          throw new Error('Setting ' + parent + ' as parent of ' + v + ' would create a cycle');\n        }\n      }\n\n      this.setNode(parent);\n    }\n\n    this.setNode(v);\n    this._removeFromParentsChildList(v);\n    this._parent[v] = parent;\n    this._children[parent][v] = true;\n    return this;\n  }\n  _removeFromParentsChildList(v) {\n    delete this._children[this._parent[v]][v];\n  }\n  parent(v) {\n    if (this._isCompound) {\n      var parent = this._parent[v];\n      if (parent !== GRAPH_NODE) {\n        return parent;\n      }\n    }\n  }\n  children(v) {\n    if (_.isUndefined(v)) {\n      v = GRAPH_NODE;\n    }\n\n    if (this._isCompound) {\n      var children = this._children[v];\n      if (children) {\n        return _.keys(children);\n      }\n    } else if (v === GRAPH_NODE) {\n      return this.nodes();\n    } else if (this.hasNode(v)) {\n      return [];\n    }\n  }\n  predecessors(v) {\n    var predsV = this._preds[v];\n    if (predsV) {\n      return _.keys(predsV);\n    }\n  }\n  successors(v) {\n    var sucsV = this._sucs[v];\n    if (sucsV) {\n      return _.keys(sucsV);\n    }\n  }\n  neighbors(v) {\n    var preds = this.predecessors(v);\n    if (preds) {\n      return _.union(preds, this.successors(v));\n    }\n  }\n  isLeaf(v) {\n    var neighbors;\n    if (this.isDirected()) {\n      neighbors = this.successors(v);\n    } else {\n      neighbors = this.neighbors(v);\n    }\n    return neighbors.length === 0;\n  }\n  filterNodes(filter) {\n    // @ts-expect-error\n    var copy = new this.constructor({\n      directed: this._isDirected,\n      multigraph: this._isMultigraph,\n      compound: this._isCompound,\n    });\n\n    copy.setGraph(this.graph());\n\n    var self = this;\n    _.each(this._nodes, function (value, v) {\n      if (filter(v)) {\n        copy.setNode(v, value);\n      }\n    });\n\n    _.each(this._edgeObjs, function (e) {\n      // @ts-expect-error\n      if (copy.hasNode(e.v) && copy.hasNode(e.w)) {\n        copy.setEdge(e, self.edge(e));\n      }\n    });\n\n    var parents = {};\n    function findParent(v) {\n      var parent = self.parent(v);\n      if (parent === undefined || copy.hasNode(parent)) {\n        parents[v] = parent;\n        return parent;\n      } else if (parent in parents) {\n        return parents[parent];\n      } else {\n        return findParent(parent);\n      }\n    }\n\n    if (this._isCompound) {\n      _.each(copy.nodes(), function (v) {\n        copy.setParent(v, findParent(v));\n      });\n    }\n\n    return copy;\n  }\n  /* === Edge functions ========== */\n  setDefaultEdgeLabel(newDefault) {\n    if (!_.isFunction(newDefault)) {\n      newDefault = _.constant(newDefault);\n    }\n    this._defaultEdgeLabelFn = newDefault;\n    return this;\n  }\n  edgeCount() {\n    return this._edgeCount;\n  }\n  edges() {\n    return _.values(this._edgeObjs);\n  }\n  setPath(vs, value) {\n    var self = this;\n    var args = arguments;\n    _.reduce(vs, function (v, w) {\n      if (args.length > 1) {\n        self.setEdge(v, w, value);\n      } else {\n        self.setEdge(v, w);\n      }\n      return w;\n    });\n    return this;\n  }\n  /*\n   * setEdge(v, w, [value, [name]])\n   * setEdge({ v, w, [name] }, [value])\n   */\n  setEdge() {\n    var v, w, name, value;\n    var valueSpecified = false;\n    var arg0 = arguments[0];\n\n    if (typeof arg0 === 'object' && arg0 !== null && 'v' in arg0) {\n      v = arg0.v;\n      w = arg0.w;\n      name = arg0.name;\n      if (arguments.length === 2) {\n        value = arguments[1];\n        valueSpecified = true;\n      }\n    } else {\n      v = arg0;\n      w = arguments[1];\n      name = arguments[3];\n      if (arguments.length > 2) {\n        value = arguments[2];\n        valueSpecified = true;\n      }\n    }\n\n    v = '' + v;\n    w = '' + w;\n    if (!_.isUndefined(name)) {\n      name = '' + name;\n    }\n\n    var e = edgeArgsToId(this._isDirected, v, w, name);\n    if (Object.prototype.hasOwnProperty.call(this._edgeLabels, e)) {\n      if (valueSpecified) {\n        this._edgeLabels[e] = value;\n      }\n      return this;\n    }\n\n    if (!_.isUndefined(name) && !this._isMultigraph) {\n      throw new Error('Cannot set a named edge when isMultigraph = false');\n    }\n\n    // It didn't exist, so we need to create it.\n    // First ensure the nodes exist.\n    this.setNode(v);\n    this.setNode(w);\n\n    // @ts-expect-error\n    this._edgeLabels[e] = valueSpecified ? value : this._defaultEdgeLabelFn(v, w, name);\n\n    var edgeObj = edgeArgsToObj(this._isDirected, v, w, name);\n    // Ensure we add undirected edges in a consistent way.\n    v = edgeObj.v;\n    w = edgeObj.w;\n\n    Object.freeze(edgeObj);\n    this._edgeObjs[e] = edgeObj;\n    incrementOrInitEntry(this._preds[w], v);\n    incrementOrInitEntry(this._sucs[v], w);\n    this._in[w][e] = edgeObj;\n    this._out[v][e] = edgeObj;\n    this._edgeCount++;\n    return this;\n  }\n  edge(v, w, name) {\n    var e =\n      arguments.length === 1\n        ? edgeObjToId(this._isDirected, arguments[0])\n        : edgeArgsToId(this._isDirected, v, w, name);\n    return this._edgeLabels[e];\n  }\n  hasEdge(v, w, name) {\n    var e =\n      arguments.length === 1\n        ? edgeObjToId(this._isDirected, arguments[0])\n        : edgeArgsToId(this._isDirected, v, w, name);\n    return Object.prototype.hasOwnProperty.call(this._edgeLabels, e);\n  }\n  removeEdge(v, w, name) {\n    var e =\n      arguments.length === 1\n        ? edgeObjToId(this._isDirected, arguments[0])\n        : edgeArgsToId(this._isDirected, v, w, name);\n    var edge = this._edgeObjs[e];\n    if (edge) {\n      v = edge.v;\n      w = edge.w;\n      delete this._edgeLabels[e];\n      delete this._edgeObjs[e];\n      decrementOrRemoveEntry(this._preds[w], v);\n      decrementOrRemoveEntry(this._sucs[v], w);\n      delete this._in[w][e];\n      delete this._out[v][e];\n      this._edgeCount--;\n    }\n    return this;\n  }\n  inEdges(v, u) {\n    var inV = this._in[v];\n    if (inV) {\n      var edges = _.values(inV);\n      if (!u) {\n        return edges;\n      }\n      return _.filter(edges, function (edge) {\n        return edge.v === u;\n      });\n    }\n  }\n  outEdges(v, w) {\n    var outV = this._out[v];\n    if (outV) {\n      var edges = _.values(outV);\n      if (!w) {\n        return edges;\n      }\n      return _.filter(edges, function (edge) {\n        return edge.w === w;\n      });\n    }\n  }\n  nodeEdges(v, w) {\n    var inEdges = this.inEdges(v, w);\n    if (inEdges) {\n      return inEdges.concat(this.outEdges(v, w));\n    }\n  }\n}\n\n/* Number of nodes in the graph. Should only be changed by the implementation. */\nGraph.prototype._nodeCount = 0;\n\n/* Number of edges in the graph. Should only be changed by the implementation. */\nGraph.prototype._edgeCount = 0;\n\nfunction incrementOrInitEntry(map, k) {\n  if (map[k]) {\n    map[k]++;\n  } else {\n    map[k] = 1;\n  }\n}\n\nfunction decrementOrRemoveEntry(map, k) {\n  if (!--map[k]) {\n    delete map[k];\n  }\n}\n\nfunction edgeArgsToId(isDirected, v_, w_, name) {\n  var v = '' + v_;\n  var w = '' + w_;\n  if (!isDirected && v > w) {\n    var tmp = v;\n    v = w;\n    w = tmp;\n  }\n  return v + EDGE_KEY_DELIM + w + EDGE_KEY_DELIM + (_.isUndefined(name) ? DEFAULT_EDGE_NAME : name);\n}\n\nfunction edgeArgsToObj(isDirected, v_, w_, name) {\n  var v = '' + v_;\n  var w = '' + w_;\n  if (!isDirected && v > w) {\n    var tmp = v;\n    v = w;\n    w = tmp;\n  }\n  var edgeObj = { v: v, w: w };\n  if (name) {\n    edgeObj.name = name;\n  }\n  return edgeObj;\n}\n\nfunction edgeObjToId(isDirected, edgeObj) {\n  return edgeArgsToId(isDirected, edgeObj.v, edgeObj.w, edgeObj.name);\n}\n"],"names":["findIndexFunc","collection","predicate","fromIndex","iterable","Object","isArrayLike","iteratee","baseIteratee","keys","key","index","undefined","nativeMax","Math","max","createFind","array","length","toInteger","baseFindIndex","isArray","arrayMap","baseMap","hasOwnProperty","prototype","object","call","path","hasPath","baseHas","comparator","value","current","computed","isSymbol","result","other","toFinite","remainder","reWhitespace","string","test","charAt","reTrimStart","slice","trimmedEndIndex","replace","reIsBadHex","reIsBinary","reIsOctal","freeParseInt","parseInt","isObject","valueOf","baseTrim","isBinary","INFINITY","toNumber","idCounter","prefix","id","toString","nativeCeil","ceil","start","end","step","fromRight","Array","isIterateeCall","baseRange","createRange","List","constructor","sentinel","_next","_prev","this","_sentinel","dequeue","entry","unlink","enqueue","strs","curr","push","JSON","stringify","filterOutLinks","join","k","v","DEFAULT_WEIGHT_FN","_","greedyFAS","g","weightFn","nodeCount","state","fasGraph","Graph","maxIn","maxOut","nodes","setNode","in","out","edges","e","prevWeight","edge","w","weight","edgeWeight","setEdge","node","buckets","map","zeroIdx","assignBucket","graph","buildState","results","sources","sinks","removeNode","i","concat","doGreedyFAS","outEdges","collectPredecessors","inEdges","uEntry","wEntry","run","fas","acyclicer","stack","visited","dfs","dfsFAS","label","removeEdge","forwardName","name","reversed","paths","basePickBy","hasIn","func","setToString","overRest","flatten","flatRest","basePick","baseExtremum","identity","baseGt","baseForOwn","baseAssignValue","root","Date","now","addDummyNode","type","attrs","hasNode","dummy","asNonCompoundGraph","simplified","multigraph","isMultigraph","setGraph","children","intersectRect","rect","point","sx","sy","x","y","dx","dy","width","h","height","Error","abs","buildLayerMatrix","layering","maxRank","rank","order","addBorderNode","arguments","time","fn","console","log","notime","prop","sg","sgNode","borderType","prev","util","setParent","undo","rankDir","rankdir","toLowerCase","reverseYOne","points","reverseY","swapXYOne","swapXY","swapWidthHeight","swapWidthHeightOne","dummyChains","vRank","wRank","edgeLabel","labelRank","edgeObj","labelpos","normalizeEdge","baseLt","longestPath","minlen","Number","POSITIVE_INFINITY","slack","feasibleTree","delta","t","directed","size","tightTree","findMinSlackEdge","shiftRanks","nodeEdges","edgeV","baseProperty","RegExp","rsAstralRange","rsAstral","rsCombo","rsFitz","rsNonAstral","rsRegional","rsSurrPair","reOptMod","rsOptVar","rsSeq","rsSymbol","CycleException","vs","navigation","isDirected","successors","neighbors","bind","acc","doDfs","postorder","networkSimplex","simpleLabel","simplify","initLowLimValues","initCutValues","leaveEdge","exchangeEdges","enterEdge","alg","child","childLab","parent","cutvalue","calcCutValue","assignCutValue","childIsTail","graphEdge","cutValue","u","isOutEdge","pointsToHead","otherWeight","hasEdge","otherCutValue","tree","dfsAssignLowLim","nextLim","low","lim","vLabel","wLabel","tailLabel","flip","candidates","isDescendant","f","flipped","updateRanks","rootLabel","ranker","networkSimplexRanker","tightTreeRanker","longestPathRanker","depths","depth","treeDepths","nodeSep","nestingRoot","sumWeights","nodeRankFactor","top","bottom","borderTop","borderBottom","childNode","childTop","childBottom","thisWeight","nestingEdge","baseClone","CLONE_DEEP_FLAG","buildLayerGraph","relationship","createRootNode","compound","setDefaultNodeLabel","minRank","borderLeft","borderRight","props","values","assignFunc","valsLength","baseZipObject","assignValue","comparer","sort","valIsDefined","valIsNull","valIsReflexive","valIsSymbol","othIsDefined","othIsNull","othIsReflexive","othIsSymbol","orders","objCriteria","criteria","othCriteria","ordersLength","compareAscending","iteratees","baseGet","baseUnary","baseSortBy","compareMultiple","baseRest","baseOrderBy","baseFlatten","crossCount","cc","twoLayerCrossCount","northLayer","southLayer","southPos","southEntries","pos","firstIndex","treeSize","forEach","weightSum","resolveConflicts","entries","cg","mappedEntries","tmp","indegree","barycenter","entryV","entryW","sourceSet","handleIn","vEntry","merged","target","source","sum","min","mergeEntries","handleOut","pop","reverse","doResolveConflicts","biasRight","bias","parts","lhs","rhs","sortable","unsortable","vsIndex","consumeUnsortable","last","sortSubgraph","movable","bl","br","subgraphs","barycenters","inV","nodeU","subgraphResult","expandSubgraphs","predecessors","blPred","brPred","downLayerGraphs","buildLayerGraphs","upLayerGraphs","simpleNodes","layers","orderedVs","initOrder","assignOrder","best","bestCC","lastBest","sweepLayerGraphs","ranks","layerGraphs","lg","sorted","rootPrev","prevChild","addSubgraphConstraints","layer","parentDummyChains","postorderNums","pathData","lca","vPath","wPath","findPath","pathIdx","pathV","ascending","castFunction","baseFor","keysIn","findType1Conflicts","conflicts","prevLayer","k0","scanPos","prevLayerLength","lastNode","findOtherInnerSegmentNode","k1","scanNode","uLabel","uPos","addConflict","conflictsV","hasConflict","horizontalCompaction","align","reverseSep","xs","blockG","blockGraph","graphLabel","sepFn","edgeSep","sep","nodesep","edgesep","vRoot","uRoot","prevMax","buildBlockGraph","iterate","setXsFunc","nextNodesFunc","elem","reduce","positionX","adjustedLayering","scan","south","southEnd","prevNorthBorder","nextNorthBorder","uNode","north","nextNorthPos","prevNorthPos","southLookahead","findType2Conflicts","xss","vert","horiz","inner","neighborFn","prevIdx","ws","mp","floor","il","verticalAlignment","smallestWidth","NEGATIVE_INFINITY","halfWidth","findSmallestWidthAlignment","alignTo","alignToVals","alignToMin","alignToMax","alignment","xsVals","alignCoordinates","ul","ignore","balance","position","rankSep","ranksep","prevY","maxHeight","positionY","layout","opts","debugTiming","layoutGraph","inputGraph","canonicalize","graphDefaults","selectNumberAttrs","graphNumAttrs","graphAttrs","nodeNumAttrs","nodeDefaults","edgeDefaults","edgeNumAttrs","edgeAttrs","buildLayoutGraph","labeloffset","makeSpaceForEdgeLabels","selfEdges","removeSelfEdges","acyclic","nestingGraph","injectEdgeLabelProxies","offset","assignRankMinMax","removeEdgeLabelProxies","normalize","addBorderSegments","orderShift","selfEdge","insertSelfEdges","coordinateSystem","selfNode","positionSelfEdges","b","l","r","removeBorderNodes","origLabel","fixupEdgeLabelCoords","minX","maxX","minY","maxY","marginX","marginx","marginY","marginy","getExtremes","p","translateGraph","p1","p2","nodeV","nodeW","unshift","assignNodeIntersects","reversePointsForReversedEdges","runLayout","inputLabel","layoutLabel","updateInputGraph","obj","newAttrs","baseEach","customizer","castPath","lastIndex","nested","toKey","newValue","objValue","isIndex","baseSet","isObjectLike","baseGetTag","objectProto","guard","propsIndex","propsLength","eq","arrays","baseUniq","isArrayLikeObject","GRAPH_NODE","_isDirected","_isMultigraph","_isCompound","_label","_defaultNodeLabelFn","_defaultEdgeLabelFn","_nodes","_parent","_children","_in","_preds","_out","_sucs","_edgeObjs","_edgeLabels","isCompound","newDefault","_nodeCount","self","setNodes","args","_removeFromParentsChildList","ancestor","predsV","sucsV","preds","isLeaf","filterNodes","filter","copy","parents","findParent","setDefaultEdgeLabel","edgeCount","_edgeCount","setPath","valueSpecified","arg0","edgeArgsToId","v_","w_","edgeArgsToObj","freeze","incrementOrInitEntry","edgeObjToId","decrementOrRemoveEntry","outV"],"sourceRoot":""}