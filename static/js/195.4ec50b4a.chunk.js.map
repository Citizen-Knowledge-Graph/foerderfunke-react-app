{"version":3,"file":"static/js/195.4ec50b4a.chunk.js","mappings":"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","sources":["../node_modules/cytoscape-cose-bilkent/cytoscape-cose-bilkent.js","../node_modules/mermaid/dist/chunks/mermaid.core/cose-bilkent-S5V4N54A.mjs","../node_modules/cose-base/cose-base.js","../node_modules/layout-base/layout-base.js"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"cose-base\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"cose-base\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"cytoscapeCoseBilkent\"] = factory(require(\"cose-base\"));\n\telse\n\t\troot[\"cytoscapeCoseBilkent\"] = factory(root[\"coseBase\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_0__) {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// identity function for calling harmony imports with the correct context\n/******/ \t__webpack_require__.i = function(value) { return value; };\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 1);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports) {\n\nmodule.exports = __WEBPACK_EXTERNAL_MODULE_0__;\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar LayoutConstants = __webpack_require__(0).layoutBase.LayoutConstants;\nvar FDLayoutConstants = __webpack_require__(0).layoutBase.FDLayoutConstants;\nvar CoSEConstants = __webpack_require__(0).CoSEConstants;\nvar CoSELayout = __webpack_require__(0).CoSELayout;\nvar CoSENode = __webpack_require__(0).CoSENode;\nvar PointD = __webpack_require__(0).layoutBase.PointD;\nvar DimensionD = __webpack_require__(0).layoutBase.DimensionD;\n\nvar defaults = {\n  // Called on `layoutready`\n  ready: function ready() {},\n  // Called on `layoutstop`\n  stop: function stop() {},\n  // 'draft', 'default' or 'proof\" \n  // - 'draft' fast cooling rate \n  // - 'default' moderate cooling rate \n  // - \"proof\" slow cooling rate\n  quality: 'default',\n  // include labels in node dimensions\n  nodeDimensionsIncludeLabels: false,\n  // number of ticks per frame; higher is faster but more jerky\n  refresh: 30,\n  // Whether to fit the network view after when done\n  fit: true,\n  // Padding on fit\n  padding: 10,\n  // Whether to enable incremental mode\n  randomize: true,\n  // Node repulsion (non overlapping) multiplier\n  nodeRepulsion: 4500,\n  // Ideal edge (non nested) length\n  idealEdgeLength: 50,\n  // Divisor to compute edge forces\n  edgeElasticity: 0.45,\n  // Nesting factor (multiplier) to compute ideal edge length for nested edges\n  nestingFactor: 0.1,\n  // Gravity force (constant)\n  gravity: 0.25,\n  // Maximum number of iterations to perform\n  numIter: 2500,\n  // For enabling tiling\n  tile: true,\n  // Type of layout animation. The option set is {'during', 'end', false}\n  animate: 'end',\n  // Duration for animate:end\n  animationDuration: 500,\n  // Represents the amount of the vertical space to put between the zero degree members during the tiling operation(can also be a function)\n  tilingPaddingVertical: 10,\n  // Represents the amount of the horizontal space to put between the zero degree members during the tiling operation(can also be a function)\n  tilingPaddingHorizontal: 10,\n  // Gravity range (constant) for compounds\n  gravityRangeCompound: 1.5,\n  // Gravity force (constant) for compounds\n  gravityCompound: 1.0,\n  // Gravity range (constant)\n  gravityRange: 3.8,\n  // Initial cooling factor for incremental layout\n  initialEnergyOnIncremental: 0.5\n};\n\nfunction extend(defaults, options) {\n  var obj = {};\n\n  for (var i in defaults) {\n    obj[i] = defaults[i];\n  }\n\n  for (var i in options) {\n    obj[i] = options[i];\n  }\n\n  return obj;\n};\n\nfunction _CoSELayout(_options) {\n  this.options = extend(defaults, _options);\n  getUserOptions(this.options);\n}\n\nvar getUserOptions = function getUserOptions(options) {\n  if (options.nodeRepulsion != null) CoSEConstants.DEFAULT_REPULSION_STRENGTH = FDLayoutConstants.DEFAULT_REPULSION_STRENGTH = options.nodeRepulsion;\n  if (options.idealEdgeLength != null) CoSEConstants.DEFAULT_EDGE_LENGTH = FDLayoutConstants.DEFAULT_EDGE_LENGTH = options.idealEdgeLength;\n  if (options.edgeElasticity != null) CoSEConstants.DEFAULT_SPRING_STRENGTH = FDLayoutConstants.DEFAULT_SPRING_STRENGTH = options.edgeElasticity;\n  if (options.nestingFactor != null) CoSEConstants.PER_LEVEL_IDEAL_EDGE_LENGTH_FACTOR = FDLayoutConstants.PER_LEVEL_IDEAL_EDGE_LENGTH_FACTOR = options.nestingFactor;\n  if (options.gravity != null) CoSEConstants.DEFAULT_GRAVITY_STRENGTH = FDLayoutConstants.DEFAULT_GRAVITY_STRENGTH = options.gravity;\n  if (options.numIter != null) CoSEConstants.MAX_ITERATIONS = FDLayoutConstants.MAX_ITERATIONS = options.numIter;\n  if (options.gravityRange != null) CoSEConstants.DEFAULT_GRAVITY_RANGE_FACTOR = FDLayoutConstants.DEFAULT_GRAVITY_RANGE_FACTOR = options.gravityRange;\n  if (options.gravityCompound != null) CoSEConstants.DEFAULT_COMPOUND_GRAVITY_STRENGTH = FDLayoutConstants.DEFAULT_COMPOUND_GRAVITY_STRENGTH = options.gravityCompound;\n  if (options.gravityRangeCompound != null) CoSEConstants.DEFAULT_COMPOUND_GRAVITY_RANGE_FACTOR = FDLayoutConstants.DEFAULT_COMPOUND_GRAVITY_RANGE_FACTOR = options.gravityRangeCompound;\n  if (options.initialEnergyOnIncremental != null) CoSEConstants.DEFAULT_COOLING_FACTOR_INCREMENTAL = FDLayoutConstants.DEFAULT_COOLING_FACTOR_INCREMENTAL = options.initialEnergyOnIncremental;\n\n  if (options.quality == 'draft') LayoutConstants.QUALITY = 0;else if (options.quality == 'proof') LayoutConstants.QUALITY = 2;else LayoutConstants.QUALITY = 1;\n\n  CoSEConstants.NODE_DIMENSIONS_INCLUDE_LABELS = FDLayoutConstants.NODE_DIMENSIONS_INCLUDE_LABELS = LayoutConstants.NODE_DIMENSIONS_INCLUDE_LABELS = options.nodeDimensionsIncludeLabels;\n  CoSEConstants.DEFAULT_INCREMENTAL = FDLayoutConstants.DEFAULT_INCREMENTAL = LayoutConstants.DEFAULT_INCREMENTAL = !options.randomize;\n  CoSEConstants.ANIMATE = FDLayoutConstants.ANIMATE = LayoutConstants.ANIMATE = options.animate;\n  CoSEConstants.TILE = options.tile;\n  CoSEConstants.TILING_PADDING_VERTICAL = typeof options.tilingPaddingVertical === 'function' ? options.tilingPaddingVertical.call() : options.tilingPaddingVertical;\n  CoSEConstants.TILING_PADDING_HORIZONTAL = typeof options.tilingPaddingHorizontal === 'function' ? options.tilingPaddingHorizontal.call() : options.tilingPaddingHorizontal;\n};\n\n_CoSELayout.prototype.run = function () {\n  var ready;\n  var frameId;\n  var options = this.options;\n  var idToLNode = this.idToLNode = {};\n  var layout = this.layout = new CoSELayout();\n  var self = this;\n\n  self.stopped = false;\n\n  this.cy = this.options.cy;\n\n  this.cy.trigger({ type: 'layoutstart', layout: this });\n\n  var gm = layout.newGraphManager();\n  this.gm = gm;\n\n  var nodes = this.options.eles.nodes();\n  var edges = this.options.eles.edges();\n\n  this.root = gm.addRoot();\n  this.processChildrenList(this.root, this.getTopMostNodes(nodes), layout);\n\n  for (var i = 0; i < edges.length; i++) {\n    var edge = edges[i];\n    var sourceNode = this.idToLNode[edge.data(\"source\")];\n    var targetNode = this.idToLNode[edge.data(\"target\")];\n    if (sourceNode !== targetNode && sourceNode.getEdgesBetween(targetNode).length == 0) {\n      var e1 = gm.add(layout.newEdge(), sourceNode, targetNode);\n      e1.id = edge.id();\n    }\n  }\n\n  var getPositions = function getPositions(ele, i) {\n    if (typeof ele === \"number\") {\n      ele = i;\n    }\n    var theId = ele.data('id');\n    var lNode = self.idToLNode[theId];\n\n    return {\n      x: lNode.getRect().getCenterX(),\n      y: lNode.getRect().getCenterY()\n    };\n  };\n\n  /*\n   * Reposition nodes in iterations animatedly\n   */\n  var iterateAnimated = function iterateAnimated() {\n    // Thigs to perform after nodes are repositioned on screen\n    var afterReposition = function afterReposition() {\n      if (options.fit) {\n        options.cy.fit(options.eles, options.padding);\n      }\n\n      if (!ready) {\n        ready = true;\n        self.cy.one('layoutready', options.ready);\n        self.cy.trigger({ type: 'layoutready', layout: self });\n      }\n    };\n\n    var ticksPerFrame = self.options.refresh;\n    var isDone;\n\n    for (var i = 0; i < ticksPerFrame && !isDone; i++) {\n      isDone = self.stopped || self.layout.tick();\n    }\n\n    // If layout is done\n    if (isDone) {\n      // If the layout is not a sublayout and it is successful perform post layout.\n      if (layout.checkLayoutSuccess() && !layout.isSubLayout) {\n        layout.doPostLayout();\n      }\n\n      // If layout has a tilingPostLayout function property call it.\n      if (layout.tilingPostLayout) {\n        layout.tilingPostLayout();\n      }\n\n      layout.isLayoutFinished = true;\n\n      self.options.eles.nodes().positions(getPositions);\n\n      afterReposition();\n\n      // trigger layoutstop when the layout stops (e.g. finishes)\n      self.cy.one('layoutstop', self.options.stop);\n      self.cy.trigger({ type: 'layoutstop', layout: self });\n\n      if (frameId) {\n        cancelAnimationFrame(frameId);\n      }\n\n      ready = false;\n      return;\n    }\n\n    var animationData = self.layout.getPositionsData(); // Get positions of layout nodes note that all nodes may not be layout nodes because of tiling\n\n    // Position nodes, for the nodes whose id does not included in data (because they are removed from their parents and included in dummy compounds)\n    // use position of their ancestors or dummy ancestors\n    options.eles.nodes().positions(function (ele, i) {\n      if (typeof ele === \"number\") {\n        ele = i;\n      }\n      // If ele is a compound node, then its position will be defined by its children\n      if (!ele.isParent()) {\n        var theId = ele.id();\n        var pNode = animationData[theId];\n        var temp = ele;\n        // If pNode is undefined search until finding position data of its first ancestor (It may be dummy as well)\n        while (pNode == null) {\n          pNode = animationData[temp.data('parent')] || animationData['DummyCompound_' + temp.data('parent')];\n          animationData[theId] = pNode;\n          temp = temp.parent()[0];\n          if (temp == undefined) {\n            break;\n          }\n        }\n        if (pNode != null) {\n          return {\n            x: pNode.x,\n            y: pNode.y\n          };\n        } else {\n          return {\n            x: ele.position('x'),\n            y: ele.position('y')\n          };\n        }\n      }\n    });\n\n    afterReposition();\n\n    frameId = requestAnimationFrame(iterateAnimated);\n  };\n\n  /*\n  * Listen 'layoutstarted' event and start animated iteration if animate option is 'during'\n  */\n  layout.addListener('layoutstarted', function () {\n    if (self.options.animate === 'during') {\n      frameId = requestAnimationFrame(iterateAnimated);\n    }\n  });\n\n  layout.runLayout(); // Run cose layout\n\n  /*\n   * If animate option is not 'during' ('end' or false) perform these here (If it is 'during' similar things are already performed)\n   */\n  if (this.options.animate !== \"during\") {\n    self.options.eles.nodes().not(\":parent\").layoutPositions(self, self.options, getPositions); // Use layout positions to reposition the nodes it considers the options parameter\n    ready = false;\n  }\n\n  return this; // chaining\n};\n\n//Get the top most ones of a list of nodes\n_CoSELayout.prototype.getTopMostNodes = function (nodes) {\n  var nodesMap = {};\n  for (var i = 0; i < nodes.length; i++) {\n    nodesMap[nodes[i].id()] = true;\n  }\n  var roots = nodes.filter(function (ele, i) {\n    if (typeof ele === \"number\") {\n      ele = i;\n    }\n    var parent = ele.parent()[0];\n    while (parent != null) {\n      if (nodesMap[parent.id()]) {\n        return false;\n      }\n      parent = parent.parent()[0];\n    }\n    return true;\n  });\n\n  return roots;\n};\n\n_CoSELayout.prototype.processChildrenList = function (parent, children, layout) {\n  var size = children.length;\n  for (var i = 0; i < size; i++) {\n    var theChild = children[i];\n    var children_of_children = theChild.children();\n    var theNode;\n\n    var dimensions = theChild.layoutDimensions({\n      nodeDimensionsIncludeLabels: this.options.nodeDimensionsIncludeLabels\n    });\n\n    if (theChild.outerWidth() != null && theChild.outerHeight() != null) {\n      theNode = parent.add(new CoSENode(layout.graphManager, new PointD(theChild.position('x') - dimensions.w / 2, theChild.position('y') - dimensions.h / 2), new DimensionD(parseFloat(dimensions.w), parseFloat(dimensions.h))));\n    } else {\n      theNode = parent.add(new CoSENode(this.graphManager));\n    }\n    // Attach id to the layout node\n    theNode.id = theChild.data(\"id\");\n    // Attach the paddings of cy node to layout node\n    theNode.paddingLeft = parseInt(theChild.css('padding'));\n    theNode.paddingTop = parseInt(theChild.css('padding'));\n    theNode.paddingRight = parseInt(theChild.css('padding'));\n    theNode.paddingBottom = parseInt(theChild.css('padding'));\n\n    //Attach the label properties to compound if labels will be included in node dimensions  \n    if (this.options.nodeDimensionsIncludeLabels) {\n      if (theChild.isParent()) {\n        var labelWidth = theChild.boundingBox({ includeLabels: true, includeNodes: false }).w;\n        var labelHeight = theChild.boundingBox({ includeLabels: true, includeNodes: false }).h;\n        var labelPos = theChild.css(\"text-halign\");\n        theNode.labelWidth = labelWidth;\n        theNode.labelHeight = labelHeight;\n        theNode.labelPos = labelPos;\n      }\n    }\n\n    // Map the layout node\n    this.idToLNode[theChild.data(\"id\")] = theNode;\n\n    if (isNaN(theNode.rect.x)) {\n      theNode.rect.x = 0;\n    }\n\n    if (isNaN(theNode.rect.y)) {\n      theNode.rect.y = 0;\n    }\n\n    if (children_of_children != null && children_of_children.length > 0) {\n      var theNewGraph;\n      theNewGraph = layout.getGraphManager().add(layout.newGraph(), theNode);\n      this.processChildrenList(theNewGraph, children_of_children, layout);\n    }\n  }\n};\n\n/**\n * @brief : called on continuous layouts to stop them before they finish\n */\n_CoSELayout.prototype.stop = function () {\n  this.stopped = true;\n\n  return this; // chaining\n};\n\nvar register = function register(cytoscape) {\n  //  var Layout = getLayout( cytoscape );\n\n  cytoscape('layout', 'cose-bilkent', _CoSELayout);\n};\n\n// auto reg for globals\nif (typeof cytoscape !== 'undefined') {\n  register(cytoscape);\n}\n\nmodule.exports = register;\n\n/***/ })\n/******/ ]);\n});","import {\n  __name,\n  log\n} from \"./chunk-AGHRB4JF.mjs\";\n\n// src/rendering-util/layout-algorithms/cose-bilkent/cytoscape-setup.ts\nimport cytoscape from \"cytoscape\";\nimport coseBilkent from \"cytoscape-cose-bilkent\";\nimport { select } from \"d3\";\ncytoscape.use(coseBilkent);\nfunction addNodes(nodes, cy) {\n  nodes.forEach((node) => {\n    const nodeData = {\n      id: node.id,\n      labelText: node.label,\n      height: node.height,\n      width: node.width,\n      padding: node.padding ?? 0\n    };\n    Object.keys(node).forEach((key) => {\n      if (![\"id\", \"label\", \"height\", \"width\", \"padding\", \"x\", \"y\"].includes(key)) {\n        nodeData[key] = node[key];\n      }\n    });\n    cy.add({\n      group: \"nodes\",\n      data: nodeData,\n      position: {\n        x: node.x ?? 0,\n        y: node.y ?? 0\n      }\n    });\n  });\n}\n__name(addNodes, \"addNodes\");\nfunction addEdges(edges, cy) {\n  edges.forEach((edge) => {\n    const edgeData = {\n      id: edge.id,\n      source: edge.start,\n      target: edge.end\n    };\n    Object.keys(edge).forEach((key) => {\n      if (![\"id\", \"start\", \"end\"].includes(key)) {\n        edgeData[key] = edge[key];\n      }\n    });\n    cy.add({\n      group: \"edges\",\n      data: edgeData\n    });\n  });\n}\n__name(addEdges, \"addEdges\");\nfunction createCytoscapeInstance(data) {\n  return new Promise((resolve) => {\n    const renderEl = select(\"body\").append(\"div\").attr(\"id\", \"cy\").attr(\"style\", \"display:none\");\n    const cy = cytoscape({\n      container: document.getElementById(\"cy\"),\n      // container to render in\n      style: [\n        {\n          selector: \"edge\",\n          style: {\n            \"curve-style\": \"bezier\"\n          }\n        }\n      ]\n    });\n    renderEl.remove();\n    addNodes(data.nodes, cy);\n    addEdges(data.edges, cy);\n    cy.nodes().forEach(function(n) {\n      n.layoutDimensions = () => {\n        const nodeData = n.data();\n        return { w: nodeData.width, h: nodeData.height };\n      };\n    });\n    const layoutConfig = {\n      name: \"cose-bilkent\",\n      // @ts-ignore Types for cose-bilkent are not correct?\n      quality: \"proof\",\n      styleEnabled: false,\n      animate: false\n    };\n    cy.layout(layoutConfig).run();\n    cy.ready((e) => {\n      log.info(\"Cytoscape ready\", e);\n      resolve(cy);\n    });\n  });\n}\n__name(createCytoscapeInstance, \"createCytoscapeInstance\");\nfunction extractPositionedNodes(cy) {\n  return cy.nodes().map((node) => {\n    const data = node.data();\n    const position = node.position();\n    const positionedNode = {\n      id: data.id,\n      x: position.x,\n      y: position.y\n    };\n    Object.keys(data).forEach((key) => {\n      if (key !== \"id\") {\n        positionedNode[key] = data[key];\n      }\n    });\n    return positionedNode;\n  });\n}\n__name(extractPositionedNodes, \"extractPositionedNodes\");\nfunction extractPositionedEdges(cy) {\n  return cy.edges().map((edge) => {\n    const data = edge.data();\n    const rscratch = edge._private.rscratch;\n    const positionedEdge = {\n      id: data.id,\n      source: data.source,\n      target: data.target,\n      startX: rscratch.startX,\n      startY: rscratch.startY,\n      midX: rscratch.midX,\n      midY: rscratch.midY,\n      endX: rscratch.endX,\n      endY: rscratch.endY\n    };\n    Object.keys(data).forEach((key) => {\n      if (![\"id\", \"source\", \"target\"].includes(key)) {\n        positionedEdge[key] = data[key];\n      }\n    });\n    return positionedEdge;\n  });\n}\n__name(extractPositionedEdges, \"extractPositionedEdges\");\n\n// src/rendering-util/layout-algorithms/cose-bilkent/layout.ts\nasync function executeCoseBilkentLayout(data, _config) {\n  log.debug(\"Starting cose-bilkent layout algorithm\");\n  try {\n    validateLayoutData(data);\n    const cy = await createCytoscapeInstance(data);\n    const positionedNodes = extractPositionedNodes(cy);\n    const positionedEdges = extractPositionedEdges(cy);\n    log.debug(`Layout completed: ${positionedNodes.length} nodes, ${positionedEdges.length} edges`);\n    return {\n      nodes: positionedNodes,\n      edges: positionedEdges\n    };\n  } catch (error) {\n    log.error(\"Error in cose-bilkent layout algorithm:\", error);\n    throw error;\n  }\n}\n__name(executeCoseBilkentLayout, \"executeCoseBilkentLayout\");\nfunction validateLayoutData(data) {\n  if (!data) {\n    throw new Error(\"Layout data is required\");\n  }\n  if (!data.config) {\n    throw new Error(\"Configuration is required in layout data\");\n  }\n  if (!data.rootNode) {\n    throw new Error(\"Root node is required\");\n  }\n  if (!data.nodes || !Array.isArray(data.nodes)) {\n    throw new Error(\"No nodes found in layout data\");\n  }\n  if (!Array.isArray(data.edges)) {\n    throw new Error(\"Edges array is required in layout data\");\n  }\n  return true;\n}\n__name(validateLayoutData, \"validateLayoutData\");\n\n// src/rendering-util/layout-algorithms/cose-bilkent/render.ts\nvar render = /* @__PURE__ */ __name(async (data4Layout, svg, {\n  insertCluster,\n  insertEdge,\n  insertEdgeLabel,\n  insertMarkers,\n  insertNode,\n  log: log2,\n  positionEdgeLabel\n}, { algorithm: _algorithm }) => {\n  const nodeDb = {};\n  const clusterDb = {};\n  const element = svg.select(\"g\");\n  insertMarkers(element, data4Layout.markers, data4Layout.type, data4Layout.diagramId);\n  const subGraphsEl = element.insert(\"g\").attr(\"class\", \"subgraphs\");\n  const edgePaths = element.insert(\"g\").attr(\"class\", \"edgePaths\");\n  const edgeLabels = element.insert(\"g\").attr(\"class\", \"edgeLabels\");\n  const nodes = element.insert(\"g\").attr(\"class\", \"nodes\");\n  log2.debug(\"Inserting nodes into DOM for dimension calculation\");\n  await Promise.all(\n    data4Layout.nodes.map(async (node) => {\n      if (node.isGroup) {\n        const clusterNode = { ...node };\n        clusterDb[node.id] = clusterNode;\n        nodeDb[node.id] = clusterNode;\n        await insertCluster(subGraphsEl, node);\n      } else {\n        const nodeWithPosition = { ...node };\n        nodeDb[node.id] = nodeWithPosition;\n        const nodeEl = await insertNode(nodes, node, {\n          config: data4Layout.config,\n          dir: data4Layout.direction || \"TB\"\n        });\n        const boundingBox = nodeEl.node().getBBox();\n        nodeWithPosition.width = boundingBox.width;\n        nodeWithPosition.height = boundingBox.height;\n        nodeWithPosition.domId = nodeEl;\n        log2.debug(`Node ${node.id} dimensions: ${boundingBox.width}x${boundingBox.height}`);\n      }\n    })\n  );\n  log2.debug(\"Running cose-bilkent layout algorithm\");\n  const updatedLayoutData = {\n    ...data4Layout,\n    nodes: data4Layout.nodes.map((node) => {\n      const nodeWithDimensions = nodeDb[node.id];\n      return {\n        ...node,\n        width: nodeWithDimensions.width,\n        height: nodeWithDimensions.height\n      };\n    })\n  };\n  const layoutResult = await executeCoseBilkentLayout(updatedLayoutData, data4Layout.config);\n  log2.debug(\"Positioning nodes based on layout results\");\n  layoutResult.nodes.forEach((positionedNode) => {\n    const node = nodeDb[positionedNode.id];\n    if (node?.domId) {\n      node.domId.attr(\n        \"transform\",\n        `translate(${positionedNode.x}, ${positionedNode.y})`\n      );\n      node.x = positionedNode.x;\n      node.y = positionedNode.y;\n      log2.debug(`Positioned node ${node.id} at center (${positionedNode.x}, ${positionedNode.y})`);\n    }\n  });\n  layoutResult.edges.forEach((positionedEdge) => {\n    const edge = data4Layout.edges.find((e) => e.id === positionedEdge.id);\n    if (edge) {\n      edge.points = [\n        { x: positionedEdge.startX, y: positionedEdge.startY },\n        { x: positionedEdge.midX, y: positionedEdge.midY },\n        { x: positionedEdge.endX, y: positionedEdge.endY }\n      ];\n    }\n  });\n  log2.debug(\"Inserting and positioning edges\");\n  await Promise.all(\n    data4Layout.edges.map(async (edge) => {\n      const _edgeLabel = await insertEdgeLabel(edgeLabels, edge);\n      const startNode = nodeDb[edge.start ?? \"\"];\n      const endNode = nodeDb[edge.end ?? \"\"];\n      if (startNode && endNode) {\n        const positionedEdge = layoutResult.edges.find((e) => e.id === edge.id);\n        if (positionedEdge) {\n          log2.debug(\"APA01 positionedEdge\", positionedEdge);\n          const edgeWithPath = { ...edge };\n          const paths = insertEdge(\n            edgePaths,\n            edgeWithPath,\n            clusterDb,\n            data4Layout.type,\n            startNode,\n            endNode,\n            data4Layout.diagramId\n          );\n          positionEdgeLabel(edgeWithPath, paths);\n        } else {\n          const edgeWithPath = {\n            ...edge,\n            points: [\n              { x: startNode.x || 0, y: startNode.y || 0 },\n              { x: endNode.x || 0, y: endNode.y || 0 }\n            ]\n          };\n          const paths = insertEdge(\n            edgePaths,\n            edgeWithPath,\n            clusterDb,\n            data4Layout.type,\n            startNode,\n            endNode,\n            data4Layout.diagramId\n          );\n          positionEdgeLabel(edgeWithPath, paths);\n        }\n      }\n    })\n  );\n  log2.debug(\"Cose-bilkent rendering completed\");\n}, \"render\");\n\n// src/rendering-util/layout-algorithms/cose-bilkent/index.ts\nvar render2 = render;\nexport {\n  render2 as render\n};\n","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"layout-base\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"layout-base\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"coseBase\"] = factory(require(\"layout-base\"));\n\telse\n\t\troot[\"coseBase\"] = factory(root[\"layoutBase\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_0__) {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// identity function for calling harmony imports with the correct context\n/******/ \t__webpack_require__.i = function(value) { return value; };\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 7);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports) {\n\nmodule.exports = __WEBPACK_EXTERNAL_MODULE_0__;\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar FDLayoutConstants = __webpack_require__(0).FDLayoutConstants;\n\nfunction CoSEConstants() {}\n\n//CoSEConstants inherits static props in FDLayoutConstants\nfor (var prop in FDLayoutConstants) {\n  CoSEConstants[prop] = FDLayoutConstants[prop];\n}\n\nCoSEConstants.DEFAULT_USE_MULTI_LEVEL_SCALING = false;\nCoSEConstants.DEFAULT_RADIAL_SEPARATION = FDLayoutConstants.DEFAULT_EDGE_LENGTH;\nCoSEConstants.DEFAULT_COMPONENT_SEPERATION = 60;\nCoSEConstants.TILE = true;\nCoSEConstants.TILING_PADDING_VERTICAL = 10;\nCoSEConstants.TILING_PADDING_HORIZONTAL = 10;\nCoSEConstants.TREE_REDUCTION_ON_INCREMENTAL = false; // make this true when cose is used incrementally as a part of other non-incremental layout\n\nmodule.exports = CoSEConstants;\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar FDLayoutEdge = __webpack_require__(0).FDLayoutEdge;\n\nfunction CoSEEdge(source, target, vEdge) {\n  FDLayoutEdge.call(this, source, target, vEdge);\n}\n\nCoSEEdge.prototype = Object.create(FDLayoutEdge.prototype);\nfor (var prop in FDLayoutEdge) {\n  CoSEEdge[prop] = FDLayoutEdge[prop];\n}\n\nmodule.exports = CoSEEdge;\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar LGraph = __webpack_require__(0).LGraph;\n\nfunction CoSEGraph(parent, graphMgr, vGraph) {\n  LGraph.call(this, parent, graphMgr, vGraph);\n}\n\nCoSEGraph.prototype = Object.create(LGraph.prototype);\nfor (var prop in LGraph) {\n  CoSEGraph[prop] = LGraph[prop];\n}\n\nmodule.exports = CoSEGraph;\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar LGraphManager = __webpack_require__(0).LGraphManager;\n\nfunction CoSEGraphManager(layout) {\n  LGraphManager.call(this, layout);\n}\n\nCoSEGraphManager.prototype = Object.create(LGraphManager.prototype);\nfor (var prop in LGraphManager) {\n  CoSEGraphManager[prop] = LGraphManager[prop];\n}\n\nmodule.exports = CoSEGraphManager;\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar FDLayoutNode = __webpack_require__(0).FDLayoutNode;\nvar IMath = __webpack_require__(0).IMath;\n\nfunction CoSENode(gm, loc, size, vNode) {\n  FDLayoutNode.call(this, gm, loc, size, vNode);\n}\n\nCoSENode.prototype = Object.create(FDLayoutNode.prototype);\nfor (var prop in FDLayoutNode) {\n  CoSENode[prop] = FDLayoutNode[prop];\n}\n\nCoSENode.prototype.move = function () {\n  var layout = this.graphManager.getLayout();\n  this.displacementX = layout.coolingFactor * (this.springForceX + this.repulsionForceX + this.gravitationForceX) / this.noOfChildren;\n  this.displacementY = layout.coolingFactor * (this.springForceY + this.repulsionForceY + this.gravitationForceY) / this.noOfChildren;\n\n  if (Math.abs(this.displacementX) > layout.coolingFactor * layout.maxNodeDisplacement) {\n    this.displacementX = layout.coolingFactor * layout.maxNodeDisplacement * IMath.sign(this.displacementX);\n  }\n\n  if (Math.abs(this.displacementY) > layout.coolingFactor * layout.maxNodeDisplacement) {\n    this.displacementY = layout.coolingFactor * layout.maxNodeDisplacement * IMath.sign(this.displacementY);\n  }\n\n  // a simple node, just move it\n  if (this.child == null) {\n    this.moveBy(this.displacementX, this.displacementY);\n  }\n  // an empty compound node, again just move it\n  else if (this.child.getNodes().length == 0) {\n      this.moveBy(this.displacementX, this.displacementY);\n    }\n    // non-empty compound node, propogate movement to children as well\n    else {\n        this.propogateDisplacementToChildren(this.displacementX, this.displacementY);\n      }\n\n  layout.totalDisplacement += Math.abs(this.displacementX) + Math.abs(this.displacementY);\n\n  this.springForceX = 0;\n  this.springForceY = 0;\n  this.repulsionForceX = 0;\n  this.repulsionForceY = 0;\n  this.gravitationForceX = 0;\n  this.gravitationForceY = 0;\n  this.displacementX = 0;\n  this.displacementY = 0;\n};\n\nCoSENode.prototype.propogateDisplacementToChildren = function (dX, dY) {\n  var nodes = this.getChild().getNodes();\n  var node;\n  for (var i = 0; i < nodes.length; i++) {\n    node = nodes[i];\n    if (node.getChild() == null) {\n      node.moveBy(dX, dY);\n      node.displacementX += dX;\n      node.displacementY += dY;\n    } else {\n      node.propogateDisplacementToChildren(dX, dY);\n    }\n  }\n};\n\nCoSENode.prototype.setPred1 = function (pred1) {\n  this.pred1 = pred1;\n};\n\nCoSENode.prototype.getPred1 = function () {\n  return pred1;\n};\n\nCoSENode.prototype.getPred2 = function () {\n  return pred2;\n};\n\nCoSENode.prototype.setNext = function (next) {\n  this.next = next;\n};\n\nCoSENode.prototype.getNext = function () {\n  return next;\n};\n\nCoSENode.prototype.setProcessed = function (processed) {\n  this.processed = processed;\n};\n\nCoSENode.prototype.isProcessed = function () {\n  return processed;\n};\n\nmodule.exports = CoSENode;\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar FDLayout = __webpack_require__(0).FDLayout;\nvar CoSEGraphManager = __webpack_require__(4);\nvar CoSEGraph = __webpack_require__(3);\nvar CoSENode = __webpack_require__(5);\nvar CoSEEdge = __webpack_require__(2);\nvar CoSEConstants = __webpack_require__(1);\nvar FDLayoutConstants = __webpack_require__(0).FDLayoutConstants;\nvar LayoutConstants = __webpack_require__(0).LayoutConstants;\nvar Point = __webpack_require__(0).Point;\nvar PointD = __webpack_require__(0).PointD;\nvar Layout = __webpack_require__(0).Layout;\nvar Integer = __webpack_require__(0).Integer;\nvar IGeometry = __webpack_require__(0).IGeometry;\nvar LGraph = __webpack_require__(0).LGraph;\nvar Transform = __webpack_require__(0).Transform;\n\nfunction CoSELayout() {\n  FDLayout.call(this);\n\n  this.toBeTiled = {}; // Memorize if a node is to be tiled or is tiled\n}\n\nCoSELayout.prototype = Object.create(FDLayout.prototype);\n\nfor (var prop in FDLayout) {\n  CoSELayout[prop] = FDLayout[prop];\n}\n\nCoSELayout.prototype.newGraphManager = function () {\n  var gm = new CoSEGraphManager(this);\n  this.graphManager = gm;\n  return gm;\n};\n\nCoSELayout.prototype.newGraph = function (vGraph) {\n  return new CoSEGraph(null, this.graphManager, vGraph);\n};\n\nCoSELayout.prototype.newNode = function (vNode) {\n  return new CoSENode(this.graphManager, vNode);\n};\n\nCoSELayout.prototype.newEdge = function (vEdge) {\n  return new CoSEEdge(null, null, vEdge);\n};\n\nCoSELayout.prototype.initParameters = function () {\n  FDLayout.prototype.initParameters.call(this, arguments);\n  if (!this.isSubLayout) {\n    if (CoSEConstants.DEFAULT_EDGE_LENGTH < 10) {\n      this.idealEdgeLength = 10;\n    } else {\n      this.idealEdgeLength = CoSEConstants.DEFAULT_EDGE_LENGTH;\n    }\n\n    this.useSmartIdealEdgeLengthCalculation = CoSEConstants.DEFAULT_USE_SMART_IDEAL_EDGE_LENGTH_CALCULATION;\n    this.springConstant = FDLayoutConstants.DEFAULT_SPRING_STRENGTH;\n    this.repulsionConstant = FDLayoutConstants.DEFAULT_REPULSION_STRENGTH;\n    this.gravityConstant = FDLayoutConstants.DEFAULT_GRAVITY_STRENGTH;\n    this.compoundGravityConstant = FDLayoutConstants.DEFAULT_COMPOUND_GRAVITY_STRENGTH;\n    this.gravityRangeFactor = FDLayoutConstants.DEFAULT_GRAVITY_RANGE_FACTOR;\n    this.compoundGravityRangeFactor = FDLayoutConstants.DEFAULT_COMPOUND_GRAVITY_RANGE_FACTOR;\n\n    // variables for tree reduction support\n    this.prunedNodesAll = [];\n    this.growTreeIterations = 0;\n    this.afterGrowthIterations = 0;\n    this.isTreeGrowing = false;\n    this.isGrowthFinished = false;\n\n    // variables for cooling\n    this.coolingCycle = 0;\n    this.maxCoolingCycle = this.maxIterations / FDLayoutConstants.CONVERGENCE_CHECK_PERIOD;\n    this.finalTemperature = FDLayoutConstants.CONVERGENCE_CHECK_PERIOD / this.maxIterations;\n    this.coolingAdjuster = 1;\n  }\n};\n\nCoSELayout.prototype.layout = function () {\n  var createBendsAsNeeded = LayoutConstants.DEFAULT_CREATE_BENDS_AS_NEEDED;\n  if (createBendsAsNeeded) {\n    this.createBendpoints();\n    this.graphManager.resetAllEdges();\n  }\n\n  this.level = 0;\n  return this.classicLayout();\n};\n\nCoSELayout.prototype.classicLayout = function () {\n  this.nodesWithGravity = this.calculateNodesToApplyGravitationTo();\n  this.graphManager.setAllNodesToApplyGravitation(this.nodesWithGravity);\n  this.calcNoOfChildrenForAllNodes();\n  this.graphManager.calcLowestCommonAncestors();\n  this.graphManager.calcInclusionTreeDepths();\n  this.graphManager.getRoot().calcEstimatedSize();\n  this.calcIdealEdgeLengths();\n\n  if (!this.incremental) {\n    var forest = this.getFlatForest();\n\n    // The graph associated with this layout is flat and a forest\n    if (forest.length > 0) {\n      this.positionNodesRadially(forest);\n    }\n    // The graph associated with this layout is not flat or a forest\n    else {\n        // Reduce the trees when incremental mode is not enabled and graph is not a forest \n        this.reduceTrees();\n        // Update nodes that gravity will be applied\n        this.graphManager.resetAllNodesToApplyGravitation();\n        var allNodes = new Set(this.getAllNodes());\n        var intersection = this.nodesWithGravity.filter(function (x) {\n          return allNodes.has(x);\n        });\n        this.graphManager.setAllNodesToApplyGravitation(intersection);\n\n        this.positionNodesRandomly();\n      }\n  } else {\n    if (CoSEConstants.TREE_REDUCTION_ON_INCREMENTAL) {\n      // Reduce the trees in incremental mode if only this constant is set to true \n      this.reduceTrees();\n      // Update nodes that gravity will be applied\n      this.graphManager.resetAllNodesToApplyGravitation();\n      var allNodes = new Set(this.getAllNodes());\n      var intersection = this.nodesWithGravity.filter(function (x) {\n        return allNodes.has(x);\n      });\n      this.graphManager.setAllNodesToApplyGravitation(intersection);\n    }\n  }\n\n  this.initSpringEmbedder();\n  this.runSpringEmbedder();\n\n  return true;\n};\n\nCoSELayout.prototype.tick = function () {\n  this.totalIterations++;\n\n  if (this.totalIterations === this.maxIterations && !this.isTreeGrowing && !this.isGrowthFinished) {\n    if (this.prunedNodesAll.length > 0) {\n      this.isTreeGrowing = true;\n    } else {\n      return true;\n    }\n  }\n\n  if (this.totalIterations % FDLayoutConstants.CONVERGENCE_CHECK_PERIOD == 0 && !this.isTreeGrowing && !this.isGrowthFinished) {\n    if (this.isConverged()) {\n      if (this.prunedNodesAll.length > 0) {\n        this.isTreeGrowing = true;\n      } else {\n        return true;\n      }\n    }\n\n    this.coolingCycle++;\n\n    if (this.layoutQuality == 0) {\n      // quality - \"draft\"\n      this.coolingAdjuster = this.coolingCycle;\n    } else if (this.layoutQuality == 1) {\n      // quality - \"default\"\n      this.coolingAdjuster = this.coolingCycle / 3;\n    }\n\n    // cooling schedule is based on http://www.btluke.com/simanf1.html -> cooling schedule 3\n    this.coolingFactor = Math.max(this.initialCoolingFactor - Math.pow(this.coolingCycle, Math.log(100 * (this.initialCoolingFactor - this.finalTemperature)) / Math.log(this.maxCoolingCycle)) / 100 * this.coolingAdjuster, this.finalTemperature);\n    this.animationPeriod = Math.ceil(this.initialAnimationPeriod * Math.sqrt(this.coolingFactor));\n  }\n  // Operations while tree is growing again \n  if (this.isTreeGrowing) {\n    if (this.growTreeIterations % 10 == 0) {\n      if (this.prunedNodesAll.length > 0) {\n        this.graphManager.updateBounds();\n        this.updateGrid();\n        this.growTree(this.prunedNodesAll);\n        // Update nodes that gravity will be applied\n        this.graphManager.resetAllNodesToApplyGravitation();\n        var allNodes = new Set(this.getAllNodes());\n        var intersection = this.nodesWithGravity.filter(function (x) {\n          return allNodes.has(x);\n        });\n        this.graphManager.setAllNodesToApplyGravitation(intersection);\n\n        this.graphManager.updateBounds();\n        this.updateGrid();\n        this.coolingFactor = FDLayoutConstants.DEFAULT_COOLING_FACTOR_INCREMENTAL;\n      } else {\n        this.isTreeGrowing = false;\n        this.isGrowthFinished = true;\n      }\n    }\n    this.growTreeIterations++;\n  }\n  // Operations after growth is finished\n  if (this.isGrowthFinished) {\n    if (this.isConverged()) {\n      return true;\n    }\n    if (this.afterGrowthIterations % 10 == 0) {\n      this.graphManager.updateBounds();\n      this.updateGrid();\n    }\n    this.coolingFactor = FDLayoutConstants.DEFAULT_COOLING_FACTOR_INCREMENTAL * ((100 - this.afterGrowthIterations) / 100);\n    this.afterGrowthIterations++;\n  }\n\n  var gridUpdateAllowed = !this.isTreeGrowing && !this.isGrowthFinished;\n  var forceToNodeSurroundingUpdate = this.growTreeIterations % 10 == 1 && this.isTreeGrowing || this.afterGrowthIterations % 10 == 1 && this.isGrowthFinished;\n\n  this.totalDisplacement = 0;\n  this.graphManager.updateBounds();\n  this.calcSpringForces();\n  this.calcRepulsionForces(gridUpdateAllowed, forceToNodeSurroundingUpdate);\n  this.calcGravitationalForces();\n  this.moveNodes();\n  this.animate();\n\n  return false; // Layout is not ended yet return false\n};\n\nCoSELayout.prototype.getPositionsData = function () {\n  var allNodes = this.graphManager.getAllNodes();\n  var pData = {};\n  for (var i = 0; i < allNodes.length; i++) {\n    var rect = allNodes[i].rect;\n    var id = allNodes[i].id;\n    pData[id] = {\n      id: id,\n      x: rect.getCenterX(),\n      y: rect.getCenterY(),\n      w: rect.width,\n      h: rect.height\n    };\n  }\n\n  return pData;\n};\n\nCoSELayout.prototype.runSpringEmbedder = function () {\n  this.initialAnimationPeriod = 25;\n  this.animationPeriod = this.initialAnimationPeriod;\n  var layoutEnded = false;\n\n  // If aminate option is 'during' signal that layout is supposed to start iterating\n  if (FDLayoutConstants.ANIMATE === 'during') {\n    this.emit('layoutstarted');\n  } else {\n    // If aminate option is 'during' tick() function will be called on index.js\n    while (!layoutEnded) {\n      layoutEnded = this.tick();\n    }\n\n    this.graphManager.updateBounds();\n  }\n};\n\nCoSELayout.prototype.calculateNodesToApplyGravitationTo = function () {\n  var nodeList = [];\n  var graph;\n\n  var graphs = this.graphManager.getGraphs();\n  var size = graphs.length;\n  var i;\n  for (i = 0; i < size; i++) {\n    graph = graphs[i];\n\n    graph.updateConnected();\n\n    if (!graph.isConnected) {\n      nodeList = nodeList.concat(graph.getNodes());\n    }\n  }\n\n  return nodeList;\n};\n\nCoSELayout.prototype.createBendpoints = function () {\n  var edges = [];\n  edges = edges.concat(this.graphManager.getAllEdges());\n  var visited = new Set();\n  var i;\n  for (i = 0; i < edges.length; i++) {\n    var edge = edges[i];\n\n    if (!visited.has(edge)) {\n      var source = edge.getSource();\n      var target = edge.getTarget();\n\n      if (source == target) {\n        edge.getBendpoints().push(new PointD());\n        edge.getBendpoints().push(new PointD());\n        this.createDummyNodesForBendpoints(edge);\n        visited.add(edge);\n      } else {\n        var edgeList = [];\n\n        edgeList = edgeList.concat(source.getEdgeListToNode(target));\n        edgeList = edgeList.concat(target.getEdgeListToNode(source));\n\n        if (!visited.has(edgeList[0])) {\n          if (edgeList.length > 1) {\n            var k;\n            for (k = 0; k < edgeList.length; k++) {\n              var multiEdge = edgeList[k];\n              multiEdge.getBendpoints().push(new PointD());\n              this.createDummyNodesForBendpoints(multiEdge);\n            }\n          }\n          edgeList.forEach(function (edge) {\n            visited.add(edge);\n          });\n        }\n      }\n    }\n\n    if (visited.size == edges.length) {\n      break;\n    }\n  }\n};\n\nCoSELayout.prototype.positionNodesRadially = function (forest) {\n  // We tile the trees to a grid row by row; first tree starts at (0,0)\n  var currentStartingPoint = new Point(0, 0);\n  var numberOfColumns = Math.ceil(Math.sqrt(forest.length));\n  var height = 0;\n  var currentY = 0;\n  var currentX = 0;\n  var point = new PointD(0, 0);\n\n  for (var i = 0; i < forest.length; i++) {\n    if (i % numberOfColumns == 0) {\n      // Start of a new row, make the x coordinate 0, increment the\n      // y coordinate with the max height of the previous row\n      currentX = 0;\n      currentY = height;\n\n      if (i != 0) {\n        currentY += CoSEConstants.DEFAULT_COMPONENT_SEPERATION;\n      }\n\n      height = 0;\n    }\n\n    var tree = forest[i];\n\n    // Find the center of the tree\n    var centerNode = Layout.findCenterOfTree(tree);\n\n    // Set the staring point of the next tree\n    currentStartingPoint.x = currentX;\n    currentStartingPoint.y = currentY;\n\n    // Do a radial layout starting with the center\n    point = CoSELayout.radialLayout(tree, centerNode, currentStartingPoint);\n\n    if (point.y > height) {\n      height = Math.floor(point.y);\n    }\n\n    currentX = Math.floor(point.x + CoSEConstants.DEFAULT_COMPONENT_SEPERATION);\n  }\n\n  this.transform(new PointD(LayoutConstants.WORLD_CENTER_X - point.x / 2, LayoutConstants.WORLD_CENTER_Y - point.y / 2));\n};\n\nCoSELayout.radialLayout = function (tree, centerNode, startingPoint) {\n  var radialSep = Math.max(this.maxDiagonalInTree(tree), CoSEConstants.DEFAULT_RADIAL_SEPARATION);\n  CoSELayout.branchRadialLayout(centerNode, null, 0, 359, 0, radialSep);\n  var bounds = LGraph.calculateBounds(tree);\n\n  var transform = new Transform();\n  transform.setDeviceOrgX(bounds.getMinX());\n  transform.setDeviceOrgY(bounds.getMinY());\n  transform.setWorldOrgX(startingPoint.x);\n  transform.setWorldOrgY(startingPoint.y);\n\n  for (var i = 0; i < tree.length; i++) {\n    var node = tree[i];\n    node.transform(transform);\n  }\n\n  var bottomRight = new PointD(bounds.getMaxX(), bounds.getMaxY());\n\n  return transform.inverseTransformPoint(bottomRight);\n};\n\nCoSELayout.branchRadialLayout = function (node, parentOfNode, startAngle, endAngle, distance, radialSeparation) {\n  // First, position this node by finding its angle.\n  var halfInterval = (endAngle - startAngle + 1) / 2;\n\n  if (halfInterval < 0) {\n    halfInterval += 180;\n  }\n\n  var nodeAngle = (halfInterval + startAngle) % 360;\n  var teta = nodeAngle * IGeometry.TWO_PI / 360;\n\n  // Make polar to java cordinate conversion.\n  var cos_teta = Math.cos(teta);\n  var x_ = distance * Math.cos(teta);\n  var y_ = distance * Math.sin(teta);\n\n  node.setCenter(x_, y_);\n\n  // Traverse all neighbors of this node and recursively call this\n  // function.\n  var neighborEdges = [];\n  neighborEdges = neighborEdges.concat(node.getEdges());\n  var childCount = neighborEdges.length;\n\n  if (parentOfNode != null) {\n    childCount--;\n  }\n\n  var branchCount = 0;\n\n  var incEdgesCount = neighborEdges.length;\n  var startIndex;\n\n  var edges = node.getEdgesBetween(parentOfNode);\n\n  // If there are multiple edges, prune them until there remains only one\n  // edge.\n  while (edges.length > 1) {\n    //neighborEdges.remove(edges.remove(0));\n    var temp = edges[0];\n    edges.splice(0, 1);\n    var index = neighborEdges.indexOf(temp);\n    if (index >= 0) {\n      neighborEdges.splice(index, 1);\n    }\n    incEdgesCount--;\n    childCount--;\n  }\n\n  if (parentOfNode != null) {\n    //assert edges.length == 1;\n    startIndex = (neighborEdges.indexOf(edges[0]) + 1) % incEdgesCount;\n  } else {\n    startIndex = 0;\n  }\n\n  var stepAngle = Math.abs(endAngle - startAngle) / childCount;\n\n  for (var i = startIndex; branchCount != childCount; i = ++i % incEdgesCount) {\n    var currentNeighbor = neighborEdges[i].getOtherEnd(node);\n\n    // Don't back traverse to root node in current tree.\n    if (currentNeighbor == parentOfNode) {\n      continue;\n    }\n\n    var childStartAngle = (startAngle + branchCount * stepAngle) % 360;\n    var childEndAngle = (childStartAngle + stepAngle) % 360;\n\n    CoSELayout.branchRadialLayout(currentNeighbor, node, childStartAngle, childEndAngle, distance + radialSeparation, radialSeparation);\n\n    branchCount++;\n  }\n};\n\nCoSELayout.maxDiagonalInTree = function (tree) {\n  var maxDiagonal = Integer.MIN_VALUE;\n\n  for (var i = 0; i < tree.length; i++) {\n    var node = tree[i];\n    var diagonal = node.getDiagonal();\n\n    if (diagonal > maxDiagonal) {\n      maxDiagonal = diagonal;\n    }\n  }\n\n  return maxDiagonal;\n};\n\nCoSELayout.prototype.calcRepulsionRange = function () {\n  // formula is 2 x (level + 1) x idealEdgeLength\n  return 2 * (this.level + 1) * this.idealEdgeLength;\n};\n\n// Tiling methods\n\n// Group zero degree members whose parents are not to be tiled, create dummy parents where needed and fill memberGroups by their dummp parent id's\nCoSELayout.prototype.groupZeroDegreeMembers = function () {\n  var self = this;\n  // array of [parent_id x oneDegreeNode_id]\n  var tempMemberGroups = {}; // A temporary map of parent node and its zero degree members\n  this.memberGroups = {}; // A map of dummy parent node and its zero degree members whose parents are not to be tiled\n  this.idToDummyNode = {}; // A map of id to dummy node \n\n  var zeroDegree = []; // List of zero degree nodes whose parents are not to be tiled\n  var allNodes = this.graphManager.getAllNodes();\n\n  // Fill zero degree list\n  for (var i = 0; i < allNodes.length; i++) {\n    var node = allNodes[i];\n    var parent = node.getParent();\n    // If a node has zero degree and its parent is not to be tiled if exists add that node to zeroDegres list\n    if (this.getNodeDegreeWithChildren(node) === 0 && (parent.id == undefined || !this.getToBeTiled(parent))) {\n      zeroDegree.push(node);\n    }\n  }\n\n  // Create a map of parent node and its zero degree members\n  for (var i = 0; i < zeroDegree.length; i++) {\n    var node = zeroDegree[i]; // Zero degree node itself\n    var p_id = node.getParent().id; // Parent id\n\n    if (typeof tempMemberGroups[p_id] === \"undefined\") tempMemberGroups[p_id] = [];\n\n    tempMemberGroups[p_id] = tempMemberGroups[p_id].concat(node); // Push node to the list belongs to its parent in tempMemberGroups\n  }\n\n  // If there are at least two nodes at a level, create a dummy compound for them\n  Object.keys(tempMemberGroups).forEach(function (p_id) {\n    if (tempMemberGroups[p_id].length > 1) {\n      var dummyCompoundId = \"DummyCompound_\" + p_id; // The id of dummy compound which will be created soon\n      self.memberGroups[dummyCompoundId] = tempMemberGroups[p_id]; // Add dummy compound to memberGroups\n\n      var parent = tempMemberGroups[p_id][0].getParent(); // The parent of zero degree nodes will be the parent of new dummy compound\n\n      // Create a dummy compound with calculated id\n      var dummyCompound = new CoSENode(self.graphManager);\n      dummyCompound.id = dummyCompoundId;\n      dummyCompound.paddingLeft = parent.paddingLeft || 0;\n      dummyCompound.paddingRight = parent.paddingRight || 0;\n      dummyCompound.paddingBottom = parent.paddingBottom || 0;\n      dummyCompound.paddingTop = parent.paddingTop || 0;\n\n      self.idToDummyNode[dummyCompoundId] = dummyCompound;\n\n      var dummyParentGraph = self.getGraphManager().add(self.newGraph(), dummyCompound);\n      var parentGraph = parent.getChild();\n\n      // Add dummy compound to parent the graph\n      parentGraph.add(dummyCompound);\n\n      // For each zero degree node in this level remove it from its parent graph and add it to the graph of dummy parent\n      for (var i = 0; i < tempMemberGroups[p_id].length; i++) {\n        var node = tempMemberGroups[p_id][i];\n\n        parentGraph.remove(node);\n        dummyParentGraph.add(node);\n      }\n    }\n  });\n};\n\nCoSELayout.prototype.clearCompounds = function () {\n  var childGraphMap = {};\n  var idToNode = {};\n\n  // Get compound ordering by finding the inner one first\n  this.performDFSOnCompounds();\n\n  for (var i = 0; i < this.compoundOrder.length; i++) {\n\n    idToNode[this.compoundOrder[i].id] = this.compoundOrder[i];\n    childGraphMap[this.compoundOrder[i].id] = [].concat(this.compoundOrder[i].getChild().getNodes());\n\n    // Remove children of compounds\n    this.graphManager.remove(this.compoundOrder[i].getChild());\n    this.compoundOrder[i].child = null;\n  }\n\n  this.graphManager.resetAllNodes();\n\n  // Tile the removed children\n  this.tileCompoundMembers(childGraphMap, idToNode);\n};\n\nCoSELayout.prototype.clearZeroDegreeMembers = function () {\n  var self = this;\n  var tiledZeroDegreePack = this.tiledZeroDegreePack = [];\n\n  Object.keys(this.memberGroups).forEach(function (id) {\n    var compoundNode = self.idToDummyNode[id]; // Get the dummy compound\n\n    tiledZeroDegreePack[id] = self.tileNodes(self.memberGroups[id], compoundNode.paddingLeft + compoundNode.paddingRight);\n\n    // Set the width and height of the dummy compound as calculated\n    compoundNode.rect.width = tiledZeroDegreePack[id].width;\n    compoundNode.rect.height = tiledZeroDegreePack[id].height;\n  });\n};\n\nCoSELayout.prototype.repopulateCompounds = function () {\n  for (var i = this.compoundOrder.length - 1; i >= 0; i--) {\n    var lCompoundNode = this.compoundOrder[i];\n    var id = lCompoundNode.id;\n    var horizontalMargin = lCompoundNode.paddingLeft;\n    var verticalMargin = lCompoundNode.paddingTop;\n\n    this.adjustLocations(this.tiledMemberPack[id], lCompoundNode.rect.x, lCompoundNode.rect.y, horizontalMargin, verticalMargin);\n  }\n};\n\nCoSELayout.prototype.repopulateZeroDegreeMembers = function () {\n  var self = this;\n  var tiledPack = this.tiledZeroDegreePack;\n\n  Object.keys(tiledPack).forEach(function (id) {\n    var compoundNode = self.idToDummyNode[id]; // Get the dummy compound by its id\n    var horizontalMargin = compoundNode.paddingLeft;\n    var verticalMargin = compoundNode.paddingTop;\n\n    // Adjust the positions of nodes wrt its compound\n    self.adjustLocations(tiledPack[id], compoundNode.rect.x, compoundNode.rect.y, horizontalMargin, verticalMargin);\n  });\n};\n\nCoSELayout.prototype.getToBeTiled = function (node) {\n  var id = node.id;\n  //firstly check the previous results\n  if (this.toBeTiled[id] != null) {\n    return this.toBeTiled[id];\n  }\n\n  //only compound nodes are to be tiled\n  var childGraph = node.getChild();\n  if (childGraph == null) {\n    this.toBeTiled[id] = false;\n    return false;\n  }\n\n  var children = childGraph.getNodes(); // Get the children nodes\n\n  //a compound node is not to be tiled if all of its compound children are not to be tiled\n  for (var i = 0; i < children.length; i++) {\n    var theChild = children[i];\n\n    if (this.getNodeDegree(theChild) > 0) {\n      this.toBeTiled[id] = false;\n      return false;\n    }\n\n    //pass the children not having the compound structure\n    if (theChild.getChild() == null) {\n      this.toBeTiled[theChild.id] = false;\n      continue;\n    }\n\n    if (!this.getToBeTiled(theChild)) {\n      this.toBeTiled[id] = false;\n      return false;\n    }\n  }\n  this.toBeTiled[id] = true;\n  return true;\n};\n\n// Get degree of a node depending of its edges and independent of its children\nCoSELayout.prototype.getNodeDegree = function (node) {\n  var id = node.id;\n  var edges = node.getEdges();\n  var degree = 0;\n\n  // For the edges connected\n  for (var i = 0; i < edges.length; i++) {\n    var edge = edges[i];\n    if (edge.getSource().id !== edge.getTarget().id) {\n      degree = degree + 1;\n    }\n  }\n  return degree;\n};\n\n// Get degree of a node with its children\nCoSELayout.prototype.getNodeDegreeWithChildren = function (node) {\n  var degree = this.getNodeDegree(node);\n  if (node.getChild() == null) {\n    return degree;\n  }\n  var children = node.getChild().getNodes();\n  for (var i = 0; i < children.length; i++) {\n    var child = children[i];\n    degree += this.getNodeDegreeWithChildren(child);\n  }\n  return degree;\n};\n\nCoSELayout.prototype.performDFSOnCompounds = function () {\n  this.compoundOrder = [];\n  this.fillCompexOrderByDFS(this.graphManager.getRoot().getNodes());\n};\n\nCoSELayout.prototype.fillCompexOrderByDFS = function (children) {\n  for (var i = 0; i < children.length; i++) {\n    var child = children[i];\n    if (child.getChild() != null) {\n      this.fillCompexOrderByDFS(child.getChild().getNodes());\n    }\n    if (this.getToBeTiled(child)) {\n      this.compoundOrder.push(child);\n    }\n  }\n};\n\n/**\n* This method places each zero degree member wrt given (x,y) coordinates (top left).\n*/\nCoSELayout.prototype.adjustLocations = function (organization, x, y, compoundHorizontalMargin, compoundVerticalMargin) {\n  x += compoundHorizontalMargin;\n  y += compoundVerticalMargin;\n\n  var left = x;\n\n  for (var i = 0; i < organization.rows.length; i++) {\n    var row = organization.rows[i];\n    x = left;\n    var maxHeight = 0;\n\n    for (var j = 0; j < row.length; j++) {\n      var lnode = row[j];\n\n      lnode.rect.x = x; // + lnode.rect.width / 2;\n      lnode.rect.y = y; // + lnode.rect.height / 2;\n\n      x += lnode.rect.width + organization.horizontalPadding;\n\n      if (lnode.rect.height > maxHeight) maxHeight = lnode.rect.height;\n    }\n\n    y += maxHeight + organization.verticalPadding;\n  }\n};\n\nCoSELayout.prototype.tileCompoundMembers = function (childGraphMap, idToNode) {\n  var self = this;\n  this.tiledMemberPack = [];\n\n  Object.keys(childGraphMap).forEach(function (id) {\n    // Get the compound node\n    var compoundNode = idToNode[id];\n\n    self.tiledMemberPack[id] = self.tileNodes(childGraphMap[id], compoundNode.paddingLeft + compoundNode.paddingRight);\n\n    compoundNode.rect.width = self.tiledMemberPack[id].width;\n    compoundNode.rect.height = self.tiledMemberPack[id].height;\n  });\n};\n\nCoSELayout.prototype.tileNodes = function (nodes, minWidth) {\n  var verticalPadding = CoSEConstants.TILING_PADDING_VERTICAL;\n  var horizontalPadding = CoSEConstants.TILING_PADDING_HORIZONTAL;\n  var organization = {\n    rows: [],\n    rowWidth: [],\n    rowHeight: [],\n    width: 0,\n    height: minWidth, // assume minHeight equals to minWidth\n    verticalPadding: verticalPadding,\n    horizontalPadding: horizontalPadding\n  };\n\n  // Sort the nodes in ascending order of their areas\n  nodes.sort(function (n1, n2) {\n    if (n1.rect.width * n1.rect.height > n2.rect.width * n2.rect.height) return -1;\n    if (n1.rect.width * n1.rect.height < n2.rect.width * n2.rect.height) return 1;\n    return 0;\n  });\n\n  // Create the organization -> tile members\n  for (var i = 0; i < nodes.length; i++) {\n    var lNode = nodes[i];\n\n    if (organization.rows.length == 0) {\n      this.insertNodeToRow(organization, lNode, 0, minWidth);\n    } else if (this.canAddHorizontal(organization, lNode.rect.width, lNode.rect.height)) {\n      this.insertNodeToRow(organization, lNode, this.getShortestRowIndex(organization), minWidth);\n    } else {\n      this.insertNodeToRow(organization, lNode, organization.rows.length, minWidth);\n    }\n\n    this.shiftToLastRow(organization);\n  }\n\n  return organization;\n};\n\nCoSELayout.prototype.insertNodeToRow = function (organization, node, rowIndex, minWidth) {\n  var minCompoundSize = minWidth;\n\n  // Add new row if needed\n  if (rowIndex == organization.rows.length) {\n    var secondDimension = [];\n\n    organization.rows.push(secondDimension);\n    organization.rowWidth.push(minCompoundSize);\n    organization.rowHeight.push(0);\n  }\n\n  // Update row width\n  var w = organization.rowWidth[rowIndex] + node.rect.width;\n\n  if (organization.rows[rowIndex].length > 0) {\n    w += organization.horizontalPadding;\n  }\n\n  organization.rowWidth[rowIndex] = w;\n  // Update compound width\n  if (organization.width < w) {\n    organization.width = w;\n  }\n\n  // Update height\n  var h = node.rect.height;\n  if (rowIndex > 0) h += organization.verticalPadding;\n\n  var extraHeight = 0;\n  if (h > organization.rowHeight[rowIndex]) {\n    extraHeight = organization.rowHeight[rowIndex];\n    organization.rowHeight[rowIndex] = h;\n    extraHeight = organization.rowHeight[rowIndex] - extraHeight;\n  }\n\n  organization.height += extraHeight;\n\n  // Insert node\n  organization.rows[rowIndex].push(node);\n};\n\n//Scans the rows of an organization and returns the one with the min width\nCoSELayout.prototype.getShortestRowIndex = function (organization) {\n  var r = -1;\n  var min = Number.MAX_VALUE;\n\n  for (var i = 0; i < organization.rows.length; i++) {\n    if (organization.rowWidth[i] < min) {\n      r = i;\n      min = organization.rowWidth[i];\n    }\n  }\n  return r;\n};\n\n//Scans the rows of an organization and returns the one with the max width\nCoSELayout.prototype.getLongestRowIndex = function (organization) {\n  var r = -1;\n  var max = Number.MIN_VALUE;\n\n  for (var i = 0; i < organization.rows.length; i++) {\n\n    if (organization.rowWidth[i] > max) {\n      r = i;\n      max = organization.rowWidth[i];\n    }\n  }\n\n  return r;\n};\n\n/**\n* This method checks whether adding extra width to the organization violates\n* the aspect ratio(1) or not.\n*/\nCoSELayout.prototype.canAddHorizontal = function (organization, extraWidth, extraHeight) {\n\n  var sri = this.getShortestRowIndex(organization);\n\n  if (sri < 0) {\n    return true;\n  }\n\n  var min = organization.rowWidth[sri];\n\n  if (min + organization.horizontalPadding + extraWidth <= organization.width) return true;\n\n  var hDiff = 0;\n\n  // Adding to an existing row\n  if (organization.rowHeight[sri] < extraHeight) {\n    if (sri > 0) hDiff = extraHeight + organization.verticalPadding - organization.rowHeight[sri];\n  }\n\n  var add_to_row_ratio;\n  if (organization.width - min >= extraWidth + organization.horizontalPadding) {\n    add_to_row_ratio = (organization.height + hDiff) / (min + extraWidth + organization.horizontalPadding);\n  } else {\n    add_to_row_ratio = (organization.height + hDiff) / organization.width;\n  }\n\n  // Adding a new row for this node\n  hDiff = extraHeight + organization.verticalPadding;\n  var add_new_row_ratio;\n  if (organization.width < extraWidth) {\n    add_new_row_ratio = (organization.height + hDiff) / extraWidth;\n  } else {\n    add_new_row_ratio = (organization.height + hDiff) / organization.width;\n  }\n\n  if (add_new_row_ratio < 1) add_new_row_ratio = 1 / add_new_row_ratio;\n\n  if (add_to_row_ratio < 1) add_to_row_ratio = 1 / add_to_row_ratio;\n\n  return add_to_row_ratio < add_new_row_ratio;\n};\n\n//If moving the last node from the longest row and adding it to the last\n//row makes the bounding box smaller, do it.\nCoSELayout.prototype.shiftToLastRow = function (organization) {\n  var longest = this.getLongestRowIndex(organization);\n  var last = organization.rowWidth.length - 1;\n  var row = organization.rows[longest];\n  var node = row[row.length - 1];\n\n  var diff = node.width + organization.horizontalPadding;\n\n  // Check if there is enough space on the last row\n  if (organization.width - organization.rowWidth[last] > diff && longest != last) {\n    // Remove the last element of the longest row\n    row.splice(-1, 1);\n\n    // Push it to the last row\n    organization.rows[last].push(node);\n\n    organization.rowWidth[longest] = organization.rowWidth[longest] - diff;\n    organization.rowWidth[last] = organization.rowWidth[last] + diff;\n    organization.width = organization.rowWidth[instance.getLongestRowIndex(organization)];\n\n    // Update heights of the organization\n    var maxHeight = Number.MIN_VALUE;\n    for (var i = 0; i < row.length; i++) {\n      if (row[i].height > maxHeight) maxHeight = row[i].height;\n    }\n    if (longest > 0) maxHeight += organization.verticalPadding;\n\n    var prevTotal = organization.rowHeight[longest] + organization.rowHeight[last];\n\n    organization.rowHeight[longest] = maxHeight;\n    if (organization.rowHeight[last] < node.height + organization.verticalPadding) organization.rowHeight[last] = node.height + organization.verticalPadding;\n\n    var finalTotal = organization.rowHeight[longest] + organization.rowHeight[last];\n    organization.height += finalTotal - prevTotal;\n\n    this.shiftToLastRow(organization);\n  }\n};\n\nCoSELayout.prototype.tilingPreLayout = function () {\n  if (CoSEConstants.TILE) {\n    // Find zero degree nodes and create a compound for each level\n    this.groupZeroDegreeMembers();\n    // Tile and clear children of each compound\n    this.clearCompounds();\n    // Separately tile and clear zero degree nodes for each level\n    this.clearZeroDegreeMembers();\n  }\n};\n\nCoSELayout.prototype.tilingPostLayout = function () {\n  if (CoSEConstants.TILE) {\n    this.repopulateZeroDegreeMembers();\n    this.repopulateCompounds();\n  }\n};\n\n// -----------------------------------------------------------------------------\n// Section: Tree Reduction methods\n// -----------------------------------------------------------------------------\n// Reduce trees \nCoSELayout.prototype.reduceTrees = function () {\n  var prunedNodesAll = [];\n  var containsLeaf = true;\n  var node;\n\n  while (containsLeaf) {\n    var allNodes = this.graphManager.getAllNodes();\n    var prunedNodesInStepTemp = [];\n    containsLeaf = false;\n\n    for (var i = 0; i < allNodes.length; i++) {\n      node = allNodes[i];\n      if (node.getEdges().length == 1 && !node.getEdges()[0].isInterGraph && node.getChild() == null) {\n        prunedNodesInStepTemp.push([node, node.getEdges()[0], node.getOwner()]);\n        containsLeaf = true;\n      }\n    }\n    if (containsLeaf == true) {\n      var prunedNodesInStep = [];\n      for (var j = 0; j < prunedNodesInStepTemp.length; j++) {\n        if (prunedNodesInStepTemp[j][0].getEdges().length == 1) {\n          prunedNodesInStep.push(prunedNodesInStepTemp[j]);\n          prunedNodesInStepTemp[j][0].getOwner().remove(prunedNodesInStepTemp[j][0]);\n        }\n      }\n      prunedNodesAll.push(prunedNodesInStep);\n      this.graphManager.resetAllNodes();\n      this.graphManager.resetAllEdges();\n    }\n  }\n  this.prunedNodesAll = prunedNodesAll;\n};\n\n// Grow tree one step \nCoSELayout.prototype.growTree = function (prunedNodesAll) {\n  var lengthOfPrunedNodesInStep = prunedNodesAll.length;\n  var prunedNodesInStep = prunedNodesAll[lengthOfPrunedNodesInStep - 1];\n\n  var nodeData;\n  for (var i = 0; i < prunedNodesInStep.length; i++) {\n    nodeData = prunedNodesInStep[i];\n\n    this.findPlaceforPrunedNode(nodeData);\n\n    nodeData[2].add(nodeData[0]);\n    nodeData[2].add(nodeData[1], nodeData[1].source, nodeData[1].target);\n  }\n\n  prunedNodesAll.splice(prunedNodesAll.length - 1, 1);\n  this.graphManager.resetAllNodes();\n  this.graphManager.resetAllEdges();\n};\n\n// Find an appropriate position to replace pruned node, this method can be improved\nCoSELayout.prototype.findPlaceforPrunedNode = function (nodeData) {\n\n  var gridForPrunedNode;\n  var nodeToConnect;\n  var prunedNode = nodeData[0];\n  if (prunedNode == nodeData[1].source) {\n    nodeToConnect = nodeData[1].target;\n  } else {\n    nodeToConnect = nodeData[1].source;\n  }\n  var startGridX = nodeToConnect.startX;\n  var finishGridX = nodeToConnect.finishX;\n  var startGridY = nodeToConnect.startY;\n  var finishGridY = nodeToConnect.finishY;\n\n  var upNodeCount = 0;\n  var downNodeCount = 0;\n  var rightNodeCount = 0;\n  var leftNodeCount = 0;\n  var controlRegions = [upNodeCount, rightNodeCount, downNodeCount, leftNodeCount];\n\n  if (startGridY > 0) {\n    for (var i = startGridX; i <= finishGridX; i++) {\n      controlRegions[0] += this.grid[i][startGridY - 1].length + this.grid[i][startGridY].length - 1;\n    }\n  }\n  if (finishGridX < this.grid.length - 1) {\n    for (var i = startGridY; i <= finishGridY; i++) {\n      controlRegions[1] += this.grid[finishGridX + 1][i].length + this.grid[finishGridX][i].length - 1;\n    }\n  }\n  if (finishGridY < this.grid[0].length - 1) {\n    for (var i = startGridX; i <= finishGridX; i++) {\n      controlRegions[2] += this.grid[i][finishGridY + 1].length + this.grid[i][finishGridY].length - 1;\n    }\n  }\n  if (startGridX > 0) {\n    for (var i = startGridY; i <= finishGridY; i++) {\n      controlRegions[3] += this.grid[startGridX - 1][i].length + this.grid[startGridX][i].length - 1;\n    }\n  }\n  var min = Integer.MAX_VALUE;\n  var minCount;\n  var minIndex;\n  for (var j = 0; j < controlRegions.length; j++) {\n    if (controlRegions[j] < min) {\n      min = controlRegions[j];\n      minCount = 1;\n      minIndex = j;\n    } else if (controlRegions[j] == min) {\n      minCount++;\n    }\n  }\n\n  if (minCount == 3 && min == 0) {\n    if (controlRegions[0] == 0 && controlRegions[1] == 0 && controlRegions[2] == 0) {\n      gridForPrunedNode = 1;\n    } else if (controlRegions[0] == 0 && controlRegions[1] == 0 && controlRegions[3] == 0) {\n      gridForPrunedNode = 0;\n    } else if (controlRegions[0] == 0 && controlRegions[2] == 0 && controlRegions[3] == 0) {\n      gridForPrunedNode = 3;\n    } else if (controlRegions[1] == 0 && controlRegions[2] == 0 && controlRegions[3] == 0) {\n      gridForPrunedNode = 2;\n    }\n  } else if (minCount == 2 && min == 0) {\n    var random = Math.floor(Math.random() * 2);\n    if (controlRegions[0] == 0 && controlRegions[1] == 0) {\n      ;\n      if (random == 0) {\n        gridForPrunedNode = 0;\n      } else {\n        gridForPrunedNode = 1;\n      }\n    } else if (controlRegions[0] == 0 && controlRegions[2] == 0) {\n      if (random == 0) {\n        gridForPrunedNode = 0;\n      } else {\n        gridForPrunedNode = 2;\n      }\n    } else if (controlRegions[0] == 0 && controlRegions[3] == 0) {\n      if (random == 0) {\n        gridForPrunedNode = 0;\n      } else {\n        gridForPrunedNode = 3;\n      }\n    } else if (controlRegions[1] == 0 && controlRegions[2] == 0) {\n      if (random == 0) {\n        gridForPrunedNode = 1;\n      } else {\n        gridForPrunedNode = 2;\n      }\n    } else if (controlRegions[1] == 0 && controlRegions[3] == 0) {\n      if (random == 0) {\n        gridForPrunedNode = 1;\n      } else {\n        gridForPrunedNode = 3;\n      }\n    } else {\n      if (random == 0) {\n        gridForPrunedNode = 2;\n      } else {\n        gridForPrunedNode = 3;\n      }\n    }\n  } else if (minCount == 4 && min == 0) {\n    var random = Math.floor(Math.random() * 4);\n    gridForPrunedNode = random;\n  } else {\n    gridForPrunedNode = minIndex;\n  }\n\n  if (gridForPrunedNode == 0) {\n    prunedNode.setCenter(nodeToConnect.getCenterX(), nodeToConnect.getCenterY() - nodeToConnect.getHeight() / 2 - FDLayoutConstants.DEFAULT_EDGE_LENGTH - prunedNode.getHeight() / 2);\n  } else if (gridForPrunedNode == 1) {\n    prunedNode.setCenter(nodeToConnect.getCenterX() + nodeToConnect.getWidth() / 2 + FDLayoutConstants.DEFAULT_EDGE_LENGTH + prunedNode.getWidth() / 2, nodeToConnect.getCenterY());\n  } else if (gridForPrunedNode == 2) {\n    prunedNode.setCenter(nodeToConnect.getCenterX(), nodeToConnect.getCenterY() + nodeToConnect.getHeight() / 2 + FDLayoutConstants.DEFAULT_EDGE_LENGTH + prunedNode.getHeight() / 2);\n  } else {\n    prunedNode.setCenter(nodeToConnect.getCenterX() - nodeToConnect.getWidth() / 2 - FDLayoutConstants.DEFAULT_EDGE_LENGTH - prunedNode.getWidth() / 2, nodeToConnect.getCenterY());\n  }\n};\n\nmodule.exports = CoSELayout;\n\n/***/ }),\n/* 7 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar coseBase = {};\n\ncoseBase.layoutBase = __webpack_require__(0);\ncoseBase.CoSEConstants = __webpack_require__(1);\ncoseBase.CoSEEdge = __webpack_require__(2);\ncoseBase.CoSEGraph = __webpack_require__(3);\ncoseBase.CoSEGraphManager = __webpack_require__(4);\ncoseBase.CoSELayout = __webpack_require__(6);\ncoseBase.CoSENode = __webpack_require__(5);\n\nmodule.exports = coseBase;\n\n/***/ })\n/******/ ]);\n});","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"layoutBase\"] = factory();\n\telse\n\t\troot[\"layoutBase\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// identity function for calling harmony imports with the correct context\n/******/ \t__webpack_require__.i = function(value) { return value; };\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 26);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nfunction LayoutConstants() {}\n\n/**\r\n * Layout Quality: 0:draft, 1:default, 2:proof\r\n */\nLayoutConstants.QUALITY = 1;\n\n/**\r\n * Default parameters\r\n */\nLayoutConstants.DEFAULT_CREATE_BENDS_AS_NEEDED = false;\nLayoutConstants.DEFAULT_INCREMENTAL = false;\nLayoutConstants.DEFAULT_ANIMATION_ON_LAYOUT = true;\nLayoutConstants.DEFAULT_ANIMATION_DURING_LAYOUT = false;\nLayoutConstants.DEFAULT_ANIMATION_PERIOD = 50;\nLayoutConstants.DEFAULT_UNIFORM_LEAF_NODE_SIZES = false;\n\n// -----------------------------------------------------------------------------\n// Section: General other constants\n// -----------------------------------------------------------------------------\n/*\r\n * Margins of a graph to be applied on bouding rectangle of its contents. We\r\n * assume margins on all four sides to be uniform.\r\n */\nLayoutConstants.DEFAULT_GRAPH_MARGIN = 15;\n\n/*\r\n * Whether to consider labels in node dimensions or not\r\n */\nLayoutConstants.NODE_DIMENSIONS_INCLUDE_LABELS = false;\n\n/*\r\n * Default dimension of a non-compound node.\r\n */\nLayoutConstants.SIMPLE_NODE_SIZE = 40;\n\n/*\r\n * Default dimension of a non-compound node.\r\n */\nLayoutConstants.SIMPLE_NODE_HALF_SIZE = LayoutConstants.SIMPLE_NODE_SIZE / 2;\n\n/*\r\n * Empty compound node size. When a compound node is empty, its both\r\n * dimensions should be of this value.\r\n */\nLayoutConstants.EMPTY_COMPOUND_NODE_SIZE = 40;\n\n/*\r\n * Minimum length that an edge should take during layout\r\n */\nLayoutConstants.MIN_EDGE_LENGTH = 1;\n\n/*\r\n * World boundaries that layout operates on\r\n */\nLayoutConstants.WORLD_BOUNDARY = 1000000;\n\n/*\r\n * World boundaries that random positioning can be performed with\r\n */\nLayoutConstants.INITIAL_WORLD_BOUNDARY = LayoutConstants.WORLD_BOUNDARY / 1000;\n\n/*\r\n * Coordinates of the world center\r\n */\nLayoutConstants.WORLD_CENTER_X = 1200;\nLayoutConstants.WORLD_CENTER_Y = 900;\n\nmodule.exports = LayoutConstants;\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar LGraphObject = __webpack_require__(2);\nvar IGeometry = __webpack_require__(8);\nvar IMath = __webpack_require__(9);\n\nfunction LEdge(source, target, vEdge) {\n  LGraphObject.call(this, vEdge);\n\n  this.isOverlapingSourceAndTarget = false;\n  this.vGraphObject = vEdge;\n  this.bendpoints = [];\n  this.source = source;\n  this.target = target;\n}\n\nLEdge.prototype = Object.create(LGraphObject.prototype);\n\nfor (var prop in LGraphObject) {\n  LEdge[prop] = LGraphObject[prop];\n}\n\nLEdge.prototype.getSource = function () {\n  return this.source;\n};\n\nLEdge.prototype.getTarget = function () {\n  return this.target;\n};\n\nLEdge.prototype.isInterGraph = function () {\n  return this.isInterGraph;\n};\n\nLEdge.prototype.getLength = function () {\n  return this.length;\n};\n\nLEdge.prototype.isOverlapingSourceAndTarget = function () {\n  return this.isOverlapingSourceAndTarget;\n};\n\nLEdge.prototype.getBendpoints = function () {\n  return this.bendpoints;\n};\n\nLEdge.prototype.getLca = function () {\n  return this.lca;\n};\n\nLEdge.prototype.getSourceInLca = function () {\n  return this.sourceInLca;\n};\n\nLEdge.prototype.getTargetInLca = function () {\n  return this.targetInLca;\n};\n\nLEdge.prototype.getOtherEnd = function (node) {\n  if (this.source === node) {\n    return this.target;\n  } else if (this.target === node) {\n    return this.source;\n  } else {\n    throw \"Node is not incident with this edge\";\n  }\n};\n\nLEdge.prototype.getOtherEndInGraph = function (node, graph) {\n  var otherEnd = this.getOtherEnd(node);\n  var root = graph.getGraphManager().getRoot();\n\n  while (true) {\n    if (otherEnd.getOwner() == graph) {\n      return otherEnd;\n    }\n\n    if (otherEnd.getOwner() == root) {\n      break;\n    }\n\n    otherEnd = otherEnd.getOwner().getParent();\n  }\n\n  return null;\n};\n\nLEdge.prototype.updateLength = function () {\n  var clipPointCoordinates = new Array(4);\n\n  this.isOverlapingSourceAndTarget = IGeometry.getIntersection(this.target.getRect(), this.source.getRect(), clipPointCoordinates);\n\n  if (!this.isOverlapingSourceAndTarget) {\n    this.lengthX = clipPointCoordinates[0] - clipPointCoordinates[2];\n    this.lengthY = clipPointCoordinates[1] - clipPointCoordinates[3];\n\n    if (Math.abs(this.lengthX) < 1.0) {\n      this.lengthX = IMath.sign(this.lengthX);\n    }\n\n    if (Math.abs(this.lengthY) < 1.0) {\n      this.lengthY = IMath.sign(this.lengthY);\n    }\n\n    this.length = Math.sqrt(this.lengthX * this.lengthX + this.lengthY * this.lengthY);\n  }\n};\n\nLEdge.prototype.updateLengthSimple = function () {\n  this.lengthX = this.target.getCenterX() - this.source.getCenterX();\n  this.lengthY = this.target.getCenterY() - this.source.getCenterY();\n\n  if (Math.abs(this.lengthX) < 1.0) {\n    this.lengthX = IMath.sign(this.lengthX);\n  }\n\n  if (Math.abs(this.lengthY) < 1.0) {\n    this.lengthY = IMath.sign(this.lengthY);\n  }\n\n  this.length = Math.sqrt(this.lengthX * this.lengthX + this.lengthY * this.lengthY);\n};\n\nmodule.exports = LEdge;\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nfunction LGraphObject(vGraphObject) {\n  this.vGraphObject = vGraphObject;\n}\n\nmodule.exports = LGraphObject;\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar LGraphObject = __webpack_require__(2);\nvar Integer = __webpack_require__(10);\nvar RectangleD = __webpack_require__(13);\nvar LayoutConstants = __webpack_require__(0);\nvar RandomSeed = __webpack_require__(16);\nvar PointD = __webpack_require__(4);\n\nfunction LNode(gm, loc, size, vNode) {\n  //Alternative constructor 1 : LNode(LGraphManager gm, Point loc, Dimension size, Object vNode)\n  if (size == null && vNode == null) {\n    vNode = loc;\n  }\n\n  LGraphObject.call(this, vNode);\n\n  //Alternative constructor 2 : LNode(Layout layout, Object vNode)\n  if (gm.graphManager != null) gm = gm.graphManager;\n\n  this.estimatedSize = Integer.MIN_VALUE;\n  this.inclusionTreeDepth = Integer.MAX_VALUE;\n  this.vGraphObject = vNode;\n  this.edges = [];\n  this.graphManager = gm;\n\n  if (size != null && loc != null) this.rect = new RectangleD(loc.x, loc.y, size.width, size.height);else this.rect = new RectangleD();\n}\n\nLNode.prototype = Object.create(LGraphObject.prototype);\nfor (var prop in LGraphObject) {\n  LNode[prop] = LGraphObject[prop];\n}\n\nLNode.prototype.getEdges = function () {\n  return this.edges;\n};\n\nLNode.prototype.getChild = function () {\n  return this.child;\n};\n\nLNode.prototype.getOwner = function () {\n  //  if (this.owner != null) {\n  //    if (!(this.owner == null || this.owner.getNodes().indexOf(this) > -1)) {\n  //      throw \"assert failed\";\n  //    }\n  //  }\n\n  return this.owner;\n};\n\nLNode.prototype.getWidth = function () {\n  return this.rect.width;\n};\n\nLNode.prototype.setWidth = function (width) {\n  this.rect.width = width;\n};\n\nLNode.prototype.getHeight = function () {\n  return this.rect.height;\n};\n\nLNode.prototype.setHeight = function (height) {\n  this.rect.height = height;\n};\n\nLNode.prototype.getCenterX = function () {\n  return this.rect.x + this.rect.width / 2;\n};\n\nLNode.prototype.getCenterY = function () {\n  return this.rect.y + this.rect.height / 2;\n};\n\nLNode.prototype.getCenter = function () {\n  return new PointD(this.rect.x + this.rect.width / 2, this.rect.y + this.rect.height / 2);\n};\n\nLNode.prototype.getLocation = function () {\n  return new PointD(this.rect.x, this.rect.y);\n};\n\nLNode.prototype.getRect = function () {\n  return this.rect;\n};\n\nLNode.prototype.getDiagonal = function () {\n  return Math.sqrt(this.rect.width * this.rect.width + this.rect.height * this.rect.height);\n};\n\n/**\n * This method returns half the diagonal length of this node.\n */\nLNode.prototype.getHalfTheDiagonal = function () {\n  return Math.sqrt(this.rect.height * this.rect.height + this.rect.width * this.rect.width) / 2;\n};\n\nLNode.prototype.setRect = function (upperLeft, dimension) {\n  this.rect.x = upperLeft.x;\n  this.rect.y = upperLeft.y;\n  this.rect.width = dimension.width;\n  this.rect.height = dimension.height;\n};\n\nLNode.prototype.setCenter = function (cx, cy) {\n  this.rect.x = cx - this.rect.width / 2;\n  this.rect.y = cy - this.rect.height / 2;\n};\n\nLNode.prototype.setLocation = function (x, y) {\n  this.rect.x = x;\n  this.rect.y = y;\n};\n\nLNode.prototype.moveBy = function (dx, dy) {\n  this.rect.x += dx;\n  this.rect.y += dy;\n};\n\nLNode.prototype.getEdgeListToNode = function (to) {\n  var edgeList = [];\n  var edge;\n  var self = this;\n\n  self.edges.forEach(function (edge) {\n\n    if (edge.target == to) {\n      if (edge.source != self) throw \"Incorrect edge source!\";\n\n      edgeList.push(edge);\n    }\n  });\n\n  return edgeList;\n};\n\nLNode.prototype.getEdgesBetween = function (other) {\n  var edgeList = [];\n  var edge;\n\n  var self = this;\n  self.edges.forEach(function (edge) {\n\n    if (!(edge.source == self || edge.target == self)) throw \"Incorrect edge source and/or target\";\n\n    if (edge.target == other || edge.source == other) {\n      edgeList.push(edge);\n    }\n  });\n\n  return edgeList;\n};\n\nLNode.prototype.getNeighborsList = function () {\n  var neighbors = new Set();\n\n  var self = this;\n  self.edges.forEach(function (edge) {\n\n    if (edge.source == self) {\n      neighbors.add(edge.target);\n    } else {\n      if (edge.target != self) {\n        throw \"Incorrect incidency!\";\n      }\n\n      neighbors.add(edge.source);\n    }\n  });\n\n  return neighbors;\n};\n\nLNode.prototype.withChildren = function () {\n  var withNeighborsList = new Set();\n  var childNode;\n  var children;\n\n  withNeighborsList.add(this);\n\n  if (this.child != null) {\n    var nodes = this.child.getNodes();\n    for (var i = 0; i < nodes.length; i++) {\n      childNode = nodes[i];\n      children = childNode.withChildren();\n      children.forEach(function (node) {\n        withNeighborsList.add(node);\n      });\n    }\n  }\n\n  return withNeighborsList;\n};\n\nLNode.prototype.getNoOfChildren = function () {\n  var noOfChildren = 0;\n  var childNode;\n\n  if (this.child == null) {\n    noOfChildren = 1;\n  } else {\n    var nodes = this.child.getNodes();\n    for (var i = 0; i < nodes.length; i++) {\n      childNode = nodes[i];\n\n      noOfChildren += childNode.getNoOfChildren();\n    }\n  }\n\n  if (noOfChildren == 0) {\n    noOfChildren = 1;\n  }\n  return noOfChildren;\n};\n\nLNode.prototype.getEstimatedSize = function () {\n  if (this.estimatedSize == Integer.MIN_VALUE) {\n    throw \"assert failed\";\n  }\n  return this.estimatedSize;\n};\n\nLNode.prototype.calcEstimatedSize = function () {\n  if (this.child == null) {\n    return this.estimatedSize = (this.rect.width + this.rect.height) / 2;\n  } else {\n    this.estimatedSize = this.child.calcEstimatedSize();\n    this.rect.width = this.estimatedSize;\n    this.rect.height = this.estimatedSize;\n\n    return this.estimatedSize;\n  }\n};\n\nLNode.prototype.scatter = function () {\n  var randomCenterX;\n  var randomCenterY;\n\n  var minX = -LayoutConstants.INITIAL_WORLD_BOUNDARY;\n  var maxX = LayoutConstants.INITIAL_WORLD_BOUNDARY;\n  randomCenterX = LayoutConstants.WORLD_CENTER_X + RandomSeed.nextDouble() * (maxX - minX) + minX;\n\n  var minY = -LayoutConstants.INITIAL_WORLD_BOUNDARY;\n  var maxY = LayoutConstants.INITIAL_WORLD_BOUNDARY;\n  randomCenterY = LayoutConstants.WORLD_CENTER_Y + RandomSeed.nextDouble() * (maxY - minY) + minY;\n\n  this.rect.x = randomCenterX;\n  this.rect.y = randomCenterY;\n};\n\nLNode.prototype.updateBounds = function () {\n  if (this.getChild() == null) {\n    throw \"assert failed\";\n  }\n  if (this.getChild().getNodes().length != 0) {\n    // wrap the children nodes by re-arranging the boundaries\n    var childGraph = this.getChild();\n    childGraph.updateBounds(true);\n\n    this.rect.x = childGraph.getLeft();\n    this.rect.y = childGraph.getTop();\n\n    this.setWidth(childGraph.getRight() - childGraph.getLeft());\n    this.setHeight(childGraph.getBottom() - childGraph.getTop());\n\n    // Update compound bounds considering its label properties    \n    if (LayoutConstants.NODE_DIMENSIONS_INCLUDE_LABELS) {\n\n      var width = childGraph.getRight() - childGraph.getLeft();\n      var height = childGraph.getBottom() - childGraph.getTop();\n\n      if (this.labelWidth > width) {\n        this.rect.x -= (this.labelWidth - width) / 2;\n        this.setWidth(this.labelWidth);\n      }\n\n      if (this.labelHeight > height) {\n        if (this.labelPos == \"center\") {\n          this.rect.y -= (this.labelHeight - height) / 2;\n        } else if (this.labelPos == \"top\") {\n          this.rect.y -= this.labelHeight - height;\n        }\n        this.setHeight(this.labelHeight);\n      }\n    }\n  }\n};\n\nLNode.prototype.getInclusionTreeDepth = function () {\n  if (this.inclusionTreeDepth == Integer.MAX_VALUE) {\n    throw \"assert failed\";\n  }\n  return this.inclusionTreeDepth;\n};\n\nLNode.prototype.transform = function (trans) {\n  var left = this.rect.x;\n\n  if (left > LayoutConstants.WORLD_BOUNDARY) {\n    left = LayoutConstants.WORLD_BOUNDARY;\n  } else if (left < -LayoutConstants.WORLD_BOUNDARY) {\n    left = -LayoutConstants.WORLD_BOUNDARY;\n  }\n\n  var top = this.rect.y;\n\n  if (top > LayoutConstants.WORLD_BOUNDARY) {\n    top = LayoutConstants.WORLD_BOUNDARY;\n  } else if (top < -LayoutConstants.WORLD_BOUNDARY) {\n    top = -LayoutConstants.WORLD_BOUNDARY;\n  }\n\n  var leftTop = new PointD(left, top);\n  var vLeftTop = trans.inverseTransformPoint(leftTop);\n\n  this.setLocation(vLeftTop.x, vLeftTop.y);\n};\n\nLNode.prototype.getLeft = function () {\n  return this.rect.x;\n};\n\nLNode.prototype.getRight = function () {\n  return this.rect.x + this.rect.width;\n};\n\nLNode.prototype.getTop = function () {\n  return this.rect.y;\n};\n\nLNode.prototype.getBottom = function () {\n  return this.rect.y + this.rect.height;\n};\n\nLNode.prototype.getParent = function () {\n  if (this.owner == null) {\n    return null;\n  }\n\n  return this.owner.getParent();\n};\n\nmodule.exports = LNode;\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nfunction PointD(x, y) {\n  if (x == null && y == null) {\n    this.x = 0;\n    this.y = 0;\n  } else {\n    this.x = x;\n    this.y = y;\n  }\n}\n\nPointD.prototype.getX = function () {\n  return this.x;\n};\n\nPointD.prototype.getY = function () {\n  return this.y;\n};\n\nPointD.prototype.setX = function (x) {\n  this.x = x;\n};\n\nPointD.prototype.setY = function (y) {\n  this.y = y;\n};\n\nPointD.prototype.getDifference = function (pt) {\n  return new DimensionD(this.x - pt.x, this.y - pt.y);\n};\n\nPointD.prototype.getCopy = function () {\n  return new PointD(this.x, this.y);\n};\n\nPointD.prototype.translate = function (dim) {\n  this.x += dim.width;\n  this.y += dim.height;\n  return this;\n};\n\nmodule.exports = PointD;\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar LGraphObject = __webpack_require__(2);\nvar Integer = __webpack_require__(10);\nvar LayoutConstants = __webpack_require__(0);\nvar LGraphManager = __webpack_require__(6);\nvar LNode = __webpack_require__(3);\nvar LEdge = __webpack_require__(1);\nvar RectangleD = __webpack_require__(13);\nvar Point = __webpack_require__(12);\nvar LinkedList = __webpack_require__(11);\n\nfunction LGraph(parent, obj2, vGraph) {\n  LGraphObject.call(this, vGraph);\n  this.estimatedSize = Integer.MIN_VALUE;\n  this.margin = LayoutConstants.DEFAULT_GRAPH_MARGIN;\n  this.edges = [];\n  this.nodes = [];\n  this.isConnected = false;\n  this.parent = parent;\n\n  if (obj2 != null && obj2 instanceof LGraphManager) {\n    this.graphManager = obj2;\n  } else if (obj2 != null && obj2 instanceof Layout) {\n    this.graphManager = obj2.graphManager;\n  }\n}\n\nLGraph.prototype = Object.create(LGraphObject.prototype);\nfor (var prop in LGraphObject) {\n  LGraph[prop] = LGraphObject[prop];\n}\n\nLGraph.prototype.getNodes = function () {\n  return this.nodes;\n};\n\nLGraph.prototype.getEdges = function () {\n  return this.edges;\n};\n\nLGraph.prototype.getGraphManager = function () {\n  return this.graphManager;\n};\n\nLGraph.prototype.getParent = function () {\n  return this.parent;\n};\n\nLGraph.prototype.getLeft = function () {\n  return this.left;\n};\n\nLGraph.prototype.getRight = function () {\n  return this.right;\n};\n\nLGraph.prototype.getTop = function () {\n  return this.top;\n};\n\nLGraph.prototype.getBottom = function () {\n  return this.bottom;\n};\n\nLGraph.prototype.isConnected = function () {\n  return this.isConnected;\n};\n\nLGraph.prototype.add = function (obj1, sourceNode, targetNode) {\n  if (sourceNode == null && targetNode == null) {\n    var newNode = obj1;\n    if (this.graphManager == null) {\n      throw \"Graph has no graph mgr!\";\n    }\n    if (this.getNodes().indexOf(newNode) > -1) {\n      throw \"Node already in graph!\";\n    }\n    newNode.owner = this;\n    this.getNodes().push(newNode);\n\n    return newNode;\n  } else {\n    var newEdge = obj1;\n    if (!(this.getNodes().indexOf(sourceNode) > -1 && this.getNodes().indexOf(targetNode) > -1)) {\n      throw \"Source or target not in graph!\";\n    }\n\n    if (!(sourceNode.owner == targetNode.owner && sourceNode.owner == this)) {\n      throw \"Both owners must be this graph!\";\n    }\n\n    if (sourceNode.owner != targetNode.owner) {\n      return null;\n    }\n\n    // set source and target\n    newEdge.source = sourceNode;\n    newEdge.target = targetNode;\n\n    // set as intra-graph edge\n    newEdge.isInterGraph = false;\n\n    // add to graph edge list\n    this.getEdges().push(newEdge);\n\n    // add to incidency lists\n    sourceNode.edges.push(newEdge);\n\n    if (targetNode != sourceNode) {\n      targetNode.edges.push(newEdge);\n    }\n\n    return newEdge;\n  }\n};\n\nLGraph.prototype.remove = function (obj) {\n  var node = obj;\n  if (obj instanceof LNode) {\n    if (node == null) {\n      throw \"Node is null!\";\n    }\n    if (!(node.owner != null && node.owner == this)) {\n      throw \"Owner graph is invalid!\";\n    }\n    if (this.graphManager == null) {\n      throw \"Owner graph manager is invalid!\";\n    }\n    // remove incident edges first (make a copy to do it safely)\n    var edgesToBeRemoved = node.edges.slice();\n    var edge;\n    var s = edgesToBeRemoved.length;\n    for (var i = 0; i < s; i++) {\n      edge = edgesToBeRemoved[i];\n\n      if (edge.isInterGraph) {\n        this.graphManager.remove(edge);\n      } else {\n        edge.source.owner.remove(edge);\n      }\n    }\n\n    // now the node itself\n    var index = this.nodes.indexOf(node);\n    if (index == -1) {\n      throw \"Node not in owner node list!\";\n    }\n\n    this.nodes.splice(index, 1);\n  } else if (obj instanceof LEdge) {\n    var edge = obj;\n    if (edge == null) {\n      throw \"Edge is null!\";\n    }\n    if (!(edge.source != null && edge.target != null)) {\n      throw \"Source and/or target is null!\";\n    }\n    if (!(edge.source.owner != null && edge.target.owner != null && edge.source.owner == this && edge.target.owner == this)) {\n      throw \"Source and/or target owner is invalid!\";\n    }\n\n    var sourceIndex = edge.source.edges.indexOf(edge);\n    var targetIndex = edge.target.edges.indexOf(edge);\n    if (!(sourceIndex > -1 && targetIndex > -1)) {\n      throw \"Source and/or target doesn't know this edge!\";\n    }\n\n    edge.source.edges.splice(sourceIndex, 1);\n\n    if (edge.target != edge.source) {\n      edge.target.edges.splice(targetIndex, 1);\n    }\n\n    var index = edge.source.owner.getEdges().indexOf(edge);\n    if (index == -1) {\n      throw \"Not in owner's edge list!\";\n    }\n\n    edge.source.owner.getEdges().splice(index, 1);\n  }\n};\n\nLGraph.prototype.updateLeftTop = function () {\n  var top = Integer.MAX_VALUE;\n  var left = Integer.MAX_VALUE;\n  var nodeTop;\n  var nodeLeft;\n  var margin;\n\n  var nodes = this.getNodes();\n  var s = nodes.length;\n\n  for (var i = 0; i < s; i++) {\n    var lNode = nodes[i];\n    nodeTop = lNode.getTop();\n    nodeLeft = lNode.getLeft();\n\n    if (top > nodeTop) {\n      top = nodeTop;\n    }\n\n    if (left > nodeLeft) {\n      left = nodeLeft;\n    }\n  }\n\n  // Do we have any nodes in this graph?\n  if (top == Integer.MAX_VALUE) {\n    return null;\n  }\n\n  if (nodes[0].getParent().paddingLeft != undefined) {\n    margin = nodes[0].getParent().paddingLeft;\n  } else {\n    margin = this.margin;\n  }\n\n  this.left = left - margin;\n  this.top = top - margin;\n\n  // Apply the margins and return the result\n  return new Point(this.left, this.top);\n};\n\nLGraph.prototype.updateBounds = function (recursive) {\n  // calculate bounds\n  var left = Integer.MAX_VALUE;\n  var right = -Integer.MAX_VALUE;\n  var top = Integer.MAX_VALUE;\n  var bottom = -Integer.MAX_VALUE;\n  var nodeLeft;\n  var nodeRight;\n  var nodeTop;\n  var nodeBottom;\n  var margin;\n\n  var nodes = this.nodes;\n  var s = nodes.length;\n  for (var i = 0; i < s; i++) {\n    var lNode = nodes[i];\n\n    if (recursive && lNode.child != null) {\n      lNode.updateBounds();\n    }\n    nodeLeft = lNode.getLeft();\n    nodeRight = lNode.getRight();\n    nodeTop = lNode.getTop();\n    nodeBottom = lNode.getBottom();\n\n    if (left > nodeLeft) {\n      left = nodeLeft;\n    }\n\n    if (right < nodeRight) {\n      right = nodeRight;\n    }\n\n    if (top > nodeTop) {\n      top = nodeTop;\n    }\n\n    if (bottom < nodeBottom) {\n      bottom = nodeBottom;\n    }\n  }\n\n  var boundingRect = new RectangleD(left, top, right - left, bottom - top);\n  if (left == Integer.MAX_VALUE) {\n    this.left = this.parent.getLeft();\n    this.right = this.parent.getRight();\n    this.top = this.parent.getTop();\n    this.bottom = this.parent.getBottom();\n  }\n\n  if (nodes[0].getParent().paddingLeft != undefined) {\n    margin = nodes[0].getParent().paddingLeft;\n  } else {\n    margin = this.margin;\n  }\n\n  this.left = boundingRect.x - margin;\n  this.right = boundingRect.x + boundingRect.width + margin;\n  this.top = boundingRect.y - margin;\n  this.bottom = boundingRect.y + boundingRect.height + margin;\n};\n\nLGraph.calculateBounds = function (nodes) {\n  var left = Integer.MAX_VALUE;\n  var right = -Integer.MAX_VALUE;\n  var top = Integer.MAX_VALUE;\n  var bottom = -Integer.MAX_VALUE;\n  var nodeLeft;\n  var nodeRight;\n  var nodeTop;\n  var nodeBottom;\n\n  var s = nodes.length;\n\n  for (var i = 0; i < s; i++) {\n    var lNode = nodes[i];\n    nodeLeft = lNode.getLeft();\n    nodeRight = lNode.getRight();\n    nodeTop = lNode.getTop();\n    nodeBottom = lNode.getBottom();\n\n    if (left > nodeLeft) {\n      left = nodeLeft;\n    }\n\n    if (right < nodeRight) {\n      right = nodeRight;\n    }\n\n    if (top > nodeTop) {\n      top = nodeTop;\n    }\n\n    if (bottom < nodeBottom) {\n      bottom = nodeBottom;\n    }\n  }\n\n  var boundingRect = new RectangleD(left, top, right - left, bottom - top);\n\n  return boundingRect;\n};\n\nLGraph.prototype.getInclusionTreeDepth = function () {\n  if (this == this.graphManager.getRoot()) {\n    return 1;\n  } else {\n    return this.parent.getInclusionTreeDepth();\n  }\n};\n\nLGraph.prototype.getEstimatedSize = function () {\n  if (this.estimatedSize == Integer.MIN_VALUE) {\n    throw \"assert failed\";\n  }\n  return this.estimatedSize;\n};\n\nLGraph.prototype.calcEstimatedSize = function () {\n  var size = 0;\n  var nodes = this.nodes;\n  var s = nodes.length;\n\n  for (var i = 0; i < s; i++) {\n    var lNode = nodes[i];\n    size += lNode.calcEstimatedSize();\n  }\n\n  if (size == 0) {\n    this.estimatedSize = LayoutConstants.EMPTY_COMPOUND_NODE_SIZE;\n  } else {\n    this.estimatedSize = size / Math.sqrt(this.nodes.length);\n  }\n\n  return this.estimatedSize;\n};\n\nLGraph.prototype.updateConnected = function () {\n  var self = this;\n  if (this.nodes.length == 0) {\n    this.isConnected = true;\n    return;\n  }\n\n  var queue = new LinkedList();\n  var visited = new Set();\n  var currentNode = this.nodes[0];\n  var neighborEdges;\n  var currentNeighbor;\n  var childrenOfNode = currentNode.withChildren();\n  childrenOfNode.forEach(function (node) {\n    queue.push(node);\n    visited.add(node);\n  });\n\n  while (queue.length !== 0) {\n    currentNode = queue.shift();\n\n    // Traverse all neighbors of this node\n    neighborEdges = currentNode.getEdges();\n    var size = neighborEdges.length;\n    for (var i = 0; i < size; i++) {\n      var neighborEdge = neighborEdges[i];\n      currentNeighbor = neighborEdge.getOtherEndInGraph(currentNode, this);\n\n      // Add unvisited neighbors to the list to visit\n      if (currentNeighbor != null && !visited.has(currentNeighbor)) {\n        var childrenOfNeighbor = currentNeighbor.withChildren();\n\n        childrenOfNeighbor.forEach(function (node) {\n          queue.push(node);\n          visited.add(node);\n        });\n      }\n    }\n  }\n\n  this.isConnected = false;\n\n  if (visited.size >= this.nodes.length) {\n    var noOfVisitedInThisGraph = 0;\n\n    visited.forEach(function (visitedNode) {\n      if (visitedNode.owner == self) {\n        noOfVisitedInThisGraph++;\n      }\n    });\n\n    if (noOfVisitedInThisGraph == this.nodes.length) {\n      this.isConnected = true;\n    }\n  }\n};\n\nmodule.exports = LGraph;\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar LGraph;\nvar LEdge = __webpack_require__(1);\n\nfunction LGraphManager(layout) {\n  LGraph = __webpack_require__(5); // It may be better to initilize this out of this function but it gives an error (Right-hand side of 'instanceof' is not callable) now.\n  this.layout = layout;\n\n  this.graphs = [];\n  this.edges = [];\n}\n\nLGraphManager.prototype.addRoot = function () {\n  var ngraph = this.layout.newGraph();\n  var nnode = this.layout.newNode(null);\n  var root = this.add(ngraph, nnode);\n  this.setRootGraph(root);\n  return this.rootGraph;\n};\n\nLGraphManager.prototype.add = function (newGraph, parentNode, newEdge, sourceNode, targetNode) {\n  //there are just 2 parameters are passed then it adds an LGraph else it adds an LEdge\n  if (newEdge == null && sourceNode == null && targetNode == null) {\n    if (newGraph == null) {\n      throw \"Graph is null!\";\n    }\n    if (parentNode == null) {\n      throw \"Parent node is null!\";\n    }\n    if (this.graphs.indexOf(newGraph) > -1) {\n      throw \"Graph already in this graph mgr!\";\n    }\n\n    this.graphs.push(newGraph);\n\n    if (newGraph.parent != null) {\n      throw \"Already has a parent!\";\n    }\n    if (parentNode.child != null) {\n      throw \"Already has a child!\";\n    }\n\n    newGraph.parent = parentNode;\n    parentNode.child = newGraph;\n\n    return newGraph;\n  } else {\n    //change the order of the parameters\n    targetNode = newEdge;\n    sourceNode = parentNode;\n    newEdge = newGraph;\n    var sourceGraph = sourceNode.getOwner();\n    var targetGraph = targetNode.getOwner();\n\n    if (!(sourceGraph != null && sourceGraph.getGraphManager() == this)) {\n      throw \"Source not in this graph mgr!\";\n    }\n    if (!(targetGraph != null && targetGraph.getGraphManager() == this)) {\n      throw \"Target not in this graph mgr!\";\n    }\n\n    if (sourceGraph == targetGraph) {\n      newEdge.isInterGraph = false;\n      return sourceGraph.add(newEdge, sourceNode, targetNode);\n    } else {\n      newEdge.isInterGraph = true;\n\n      // set source and target\n      newEdge.source = sourceNode;\n      newEdge.target = targetNode;\n\n      // add edge to inter-graph edge list\n      if (this.edges.indexOf(newEdge) > -1) {\n        throw \"Edge already in inter-graph edge list!\";\n      }\n\n      this.edges.push(newEdge);\n\n      // add edge to source and target incidency lists\n      if (!(newEdge.source != null && newEdge.target != null)) {\n        throw \"Edge source and/or target is null!\";\n      }\n\n      if (!(newEdge.source.edges.indexOf(newEdge) == -1 && newEdge.target.edges.indexOf(newEdge) == -1)) {\n        throw \"Edge already in source and/or target incidency list!\";\n      }\n\n      newEdge.source.edges.push(newEdge);\n      newEdge.target.edges.push(newEdge);\n\n      return newEdge;\n    }\n  }\n};\n\nLGraphManager.prototype.remove = function (lObj) {\n  if (lObj instanceof LGraph) {\n    var graph = lObj;\n    if (graph.getGraphManager() != this) {\n      throw \"Graph not in this graph mgr\";\n    }\n    if (!(graph == this.rootGraph || graph.parent != null && graph.parent.graphManager == this)) {\n      throw \"Invalid parent node!\";\n    }\n\n    // first the edges (make a copy to do it safely)\n    var edgesToBeRemoved = [];\n\n    edgesToBeRemoved = edgesToBeRemoved.concat(graph.getEdges());\n\n    var edge;\n    var s = edgesToBeRemoved.length;\n    for (var i = 0; i < s; i++) {\n      edge = edgesToBeRemoved[i];\n      graph.remove(edge);\n    }\n\n    // then the nodes (make a copy to do it safely)\n    var nodesToBeRemoved = [];\n\n    nodesToBeRemoved = nodesToBeRemoved.concat(graph.getNodes());\n\n    var node;\n    s = nodesToBeRemoved.length;\n    for (var i = 0; i < s; i++) {\n      node = nodesToBeRemoved[i];\n      graph.remove(node);\n    }\n\n    // check if graph is the root\n    if (graph == this.rootGraph) {\n      this.setRootGraph(null);\n    }\n\n    // now remove the graph itself\n    var index = this.graphs.indexOf(graph);\n    this.graphs.splice(index, 1);\n\n    // also reset the parent of the graph\n    graph.parent = null;\n  } else if (lObj instanceof LEdge) {\n    edge = lObj;\n    if (edge == null) {\n      throw \"Edge is null!\";\n    }\n    if (!edge.isInterGraph) {\n      throw \"Not an inter-graph edge!\";\n    }\n    if (!(edge.source != null && edge.target != null)) {\n      throw \"Source and/or target is null!\";\n    }\n\n    // remove edge from source and target nodes' incidency lists\n\n    if (!(edge.source.edges.indexOf(edge) != -1 && edge.target.edges.indexOf(edge) != -1)) {\n      throw \"Source and/or target doesn't know this edge!\";\n    }\n\n    var index = edge.source.edges.indexOf(edge);\n    edge.source.edges.splice(index, 1);\n    index = edge.target.edges.indexOf(edge);\n    edge.target.edges.splice(index, 1);\n\n    // remove edge from owner graph manager's inter-graph edge list\n\n    if (!(edge.source.owner != null && edge.source.owner.getGraphManager() != null)) {\n      throw \"Edge owner graph or owner graph manager is null!\";\n    }\n    if (edge.source.owner.getGraphManager().edges.indexOf(edge) == -1) {\n      throw \"Not in owner graph manager's edge list!\";\n    }\n\n    var index = edge.source.owner.getGraphManager().edges.indexOf(edge);\n    edge.source.owner.getGraphManager().edges.splice(index, 1);\n  }\n};\n\nLGraphManager.prototype.updateBounds = function () {\n  this.rootGraph.updateBounds(true);\n};\n\nLGraphManager.prototype.getGraphs = function () {\n  return this.graphs;\n};\n\nLGraphManager.prototype.getAllNodes = function () {\n  if (this.allNodes == null) {\n    var nodeList = [];\n    var graphs = this.getGraphs();\n    var s = graphs.length;\n    for (var i = 0; i < s; i++) {\n      nodeList = nodeList.concat(graphs[i].getNodes());\n    }\n    this.allNodes = nodeList;\n  }\n  return this.allNodes;\n};\n\nLGraphManager.prototype.resetAllNodes = function () {\n  this.allNodes = null;\n};\n\nLGraphManager.prototype.resetAllEdges = function () {\n  this.allEdges = null;\n};\n\nLGraphManager.prototype.resetAllNodesToApplyGravitation = function () {\n  this.allNodesToApplyGravitation = null;\n};\n\nLGraphManager.prototype.getAllEdges = function () {\n  if (this.allEdges == null) {\n    var edgeList = [];\n    var graphs = this.getGraphs();\n    var s = graphs.length;\n    for (var i = 0; i < graphs.length; i++) {\n      edgeList = edgeList.concat(graphs[i].getEdges());\n    }\n\n    edgeList = edgeList.concat(this.edges);\n\n    this.allEdges = edgeList;\n  }\n  return this.allEdges;\n};\n\nLGraphManager.prototype.getAllNodesToApplyGravitation = function () {\n  return this.allNodesToApplyGravitation;\n};\n\nLGraphManager.prototype.setAllNodesToApplyGravitation = function (nodeList) {\n  if (this.allNodesToApplyGravitation != null) {\n    throw \"assert failed\";\n  }\n\n  this.allNodesToApplyGravitation = nodeList;\n};\n\nLGraphManager.prototype.getRoot = function () {\n  return this.rootGraph;\n};\n\nLGraphManager.prototype.setRootGraph = function (graph) {\n  if (graph.getGraphManager() != this) {\n    throw \"Root not in this graph mgr!\";\n  }\n\n  this.rootGraph = graph;\n  // root graph must have a root node associated with it for convenience\n  if (graph.parent == null) {\n    graph.parent = this.layout.newNode(\"Root node\");\n  }\n};\n\nLGraphManager.prototype.getLayout = function () {\n  return this.layout;\n};\n\nLGraphManager.prototype.isOneAncestorOfOther = function (firstNode, secondNode) {\n  if (!(firstNode != null && secondNode != null)) {\n    throw \"assert failed\";\n  }\n\n  if (firstNode == secondNode) {\n    return true;\n  }\n  // Is second node an ancestor of the first one?\n  var ownerGraph = firstNode.getOwner();\n  var parentNode;\n\n  do {\n    parentNode = ownerGraph.getParent();\n\n    if (parentNode == null) {\n      break;\n    }\n\n    if (parentNode == secondNode) {\n      return true;\n    }\n\n    ownerGraph = parentNode.getOwner();\n    if (ownerGraph == null) {\n      break;\n    }\n  } while (true);\n  // Is first node an ancestor of the second one?\n  ownerGraph = secondNode.getOwner();\n\n  do {\n    parentNode = ownerGraph.getParent();\n\n    if (parentNode == null) {\n      break;\n    }\n\n    if (parentNode == firstNode) {\n      return true;\n    }\n\n    ownerGraph = parentNode.getOwner();\n    if (ownerGraph == null) {\n      break;\n    }\n  } while (true);\n\n  return false;\n};\n\nLGraphManager.prototype.calcLowestCommonAncestors = function () {\n  var edge;\n  var sourceNode;\n  var targetNode;\n  var sourceAncestorGraph;\n  var targetAncestorGraph;\n\n  var edges = this.getAllEdges();\n  var s = edges.length;\n  for (var i = 0; i < s; i++) {\n    edge = edges[i];\n\n    sourceNode = edge.source;\n    targetNode = edge.target;\n    edge.lca = null;\n    edge.sourceInLca = sourceNode;\n    edge.targetInLca = targetNode;\n\n    if (sourceNode == targetNode) {\n      edge.lca = sourceNode.getOwner();\n      continue;\n    }\n\n    sourceAncestorGraph = sourceNode.getOwner();\n\n    while (edge.lca == null) {\n      edge.targetInLca = targetNode;\n      targetAncestorGraph = targetNode.getOwner();\n\n      while (edge.lca == null) {\n        if (targetAncestorGraph == sourceAncestorGraph) {\n          edge.lca = targetAncestorGraph;\n          break;\n        }\n\n        if (targetAncestorGraph == this.rootGraph) {\n          break;\n        }\n\n        if (edge.lca != null) {\n          throw \"assert failed\";\n        }\n        edge.targetInLca = targetAncestorGraph.getParent();\n        targetAncestorGraph = edge.targetInLca.getOwner();\n      }\n\n      if (sourceAncestorGraph == this.rootGraph) {\n        break;\n      }\n\n      if (edge.lca == null) {\n        edge.sourceInLca = sourceAncestorGraph.getParent();\n        sourceAncestorGraph = edge.sourceInLca.getOwner();\n      }\n    }\n\n    if (edge.lca == null) {\n      throw \"assert failed\";\n    }\n  }\n};\n\nLGraphManager.prototype.calcLowestCommonAncestor = function (firstNode, secondNode) {\n  if (firstNode == secondNode) {\n    return firstNode.getOwner();\n  }\n  var firstOwnerGraph = firstNode.getOwner();\n\n  do {\n    if (firstOwnerGraph == null) {\n      break;\n    }\n    var secondOwnerGraph = secondNode.getOwner();\n\n    do {\n      if (secondOwnerGraph == null) {\n        break;\n      }\n\n      if (secondOwnerGraph == firstOwnerGraph) {\n        return secondOwnerGraph;\n      }\n      secondOwnerGraph = secondOwnerGraph.getParent().getOwner();\n    } while (true);\n\n    firstOwnerGraph = firstOwnerGraph.getParent().getOwner();\n  } while (true);\n\n  return firstOwnerGraph;\n};\n\nLGraphManager.prototype.calcInclusionTreeDepths = function (graph, depth) {\n  if (graph == null && depth == null) {\n    graph = this.rootGraph;\n    depth = 1;\n  }\n  var node;\n\n  var nodes = graph.getNodes();\n  var s = nodes.length;\n  for (var i = 0; i < s; i++) {\n    node = nodes[i];\n    node.inclusionTreeDepth = depth;\n\n    if (node.child != null) {\n      this.calcInclusionTreeDepths(node.child, depth + 1);\n    }\n  }\n};\n\nLGraphManager.prototype.includesInvalidEdge = function () {\n  var edge;\n\n  var s = this.edges.length;\n  for (var i = 0; i < s; i++) {\n    edge = this.edges[i];\n\n    if (this.isOneAncestorOfOther(edge.source, edge.target)) {\n      return true;\n    }\n  }\n  return false;\n};\n\nmodule.exports = LGraphManager;\n\n/***/ }),\n/* 7 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar LayoutConstants = __webpack_require__(0);\n\nfunction FDLayoutConstants() {}\n\n//FDLayoutConstants inherits static props in LayoutConstants\nfor (var prop in LayoutConstants) {\n  FDLayoutConstants[prop] = LayoutConstants[prop];\n}\n\nFDLayoutConstants.MAX_ITERATIONS = 2500;\n\nFDLayoutConstants.DEFAULT_EDGE_LENGTH = 50;\nFDLayoutConstants.DEFAULT_SPRING_STRENGTH = 0.45;\nFDLayoutConstants.DEFAULT_REPULSION_STRENGTH = 4500.0;\nFDLayoutConstants.DEFAULT_GRAVITY_STRENGTH = 0.4;\nFDLayoutConstants.DEFAULT_COMPOUND_GRAVITY_STRENGTH = 1.0;\nFDLayoutConstants.DEFAULT_GRAVITY_RANGE_FACTOR = 3.8;\nFDLayoutConstants.DEFAULT_COMPOUND_GRAVITY_RANGE_FACTOR = 1.5;\nFDLayoutConstants.DEFAULT_USE_SMART_IDEAL_EDGE_LENGTH_CALCULATION = true;\nFDLayoutConstants.DEFAULT_USE_SMART_REPULSION_RANGE_CALCULATION = true;\nFDLayoutConstants.DEFAULT_COOLING_FACTOR_INCREMENTAL = 0.3;\nFDLayoutConstants.COOLING_ADAPTATION_FACTOR = 0.33;\nFDLayoutConstants.ADAPTATION_LOWER_NODE_LIMIT = 1000;\nFDLayoutConstants.ADAPTATION_UPPER_NODE_LIMIT = 5000;\nFDLayoutConstants.MAX_NODE_DISPLACEMENT_INCREMENTAL = 100.0;\nFDLayoutConstants.MAX_NODE_DISPLACEMENT = FDLayoutConstants.MAX_NODE_DISPLACEMENT_INCREMENTAL * 3;\nFDLayoutConstants.MIN_REPULSION_DIST = FDLayoutConstants.DEFAULT_EDGE_LENGTH / 10.0;\nFDLayoutConstants.CONVERGENCE_CHECK_PERIOD = 100;\nFDLayoutConstants.PER_LEVEL_IDEAL_EDGE_LENGTH_FACTOR = 0.1;\nFDLayoutConstants.MIN_EDGE_LENGTH = 1;\nFDLayoutConstants.GRID_CALCULATION_CHECK_PERIOD = 10;\n\nmodule.exports = FDLayoutConstants;\n\n/***/ }),\n/* 8 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n/**\n * This class maintains a list of static geometry related utility methods.\n *\n *\n * Copyright: i-Vis Research Group, Bilkent University, 2007 - present\n */\n\nvar Point = __webpack_require__(12);\n\nfunction IGeometry() {}\n\n/**\n * This method calculates *half* the amount in x and y directions of the two\n * input rectangles needed to separate them keeping their respective\n * positioning, and returns the result in the input array. An input\n * separation buffer added to the amount in both directions. We assume that\n * the two rectangles do intersect.\n */\nIGeometry.calcSeparationAmount = function (rectA, rectB, overlapAmount, separationBuffer) {\n  if (!rectA.intersects(rectB)) {\n    throw \"assert failed\";\n  }\n\n  var directions = new Array(2);\n\n  this.decideDirectionsForOverlappingNodes(rectA, rectB, directions);\n\n  overlapAmount[0] = Math.min(rectA.getRight(), rectB.getRight()) - Math.max(rectA.x, rectB.x);\n  overlapAmount[1] = Math.min(rectA.getBottom(), rectB.getBottom()) - Math.max(rectA.y, rectB.y);\n\n  // update the overlapping amounts for the following cases:\n  if (rectA.getX() <= rectB.getX() && rectA.getRight() >= rectB.getRight()) {\n    /* Case x.1:\n    *\n    * rectA\n    * \t|                       |\n    * \t|        _________      |\n    * \t|        |       |      |\n    * \t|________|_______|______|\n    * \t\t\t |       |\n    *           |       |\n    *        rectB\n    */\n    overlapAmount[0] += Math.min(rectB.getX() - rectA.getX(), rectA.getRight() - rectB.getRight());\n  } else if (rectB.getX() <= rectA.getX() && rectB.getRight() >= rectA.getRight()) {\n    /* Case x.2:\n    *\n    * rectB\n    * \t|                       |\n    * \t|        _________      |\n    * \t|        |       |      |\n    * \t|________|_______|______|\n    * \t\t\t |       |\n    *           |       |\n    *        rectA\n    */\n    overlapAmount[0] += Math.min(rectA.getX() - rectB.getX(), rectB.getRight() - rectA.getRight());\n  }\n  if (rectA.getY() <= rectB.getY() && rectA.getBottom() >= rectB.getBottom()) {\n    /* Case y.1:\n     *          ________ rectA\n     *         |\n     *         |\n     *   ______|____  rectB\n     *         |    |\n     *         |    |\n     *   ______|____|\n     *         |\n     *         |\n     *         |________\n     *\n     */\n    overlapAmount[1] += Math.min(rectB.getY() - rectA.getY(), rectA.getBottom() - rectB.getBottom());\n  } else if (rectB.getY() <= rectA.getY() && rectB.getBottom() >= rectA.getBottom()) {\n    /* Case y.2:\n    *          ________ rectB\n    *         |\n    *         |\n    *   ______|____  rectA\n    *         |    |\n    *         |    |\n    *   ______|____|\n    *         |\n    *         |\n    *         |________\n    *\n    */\n    overlapAmount[1] += Math.min(rectA.getY() - rectB.getY(), rectB.getBottom() - rectA.getBottom());\n  }\n\n  // find slope of the line passes two centers\n  var slope = Math.abs((rectB.getCenterY() - rectA.getCenterY()) / (rectB.getCenterX() - rectA.getCenterX()));\n  // if centers are overlapped\n  if (rectB.getCenterY() === rectA.getCenterY() && rectB.getCenterX() === rectA.getCenterX()) {\n    // assume the slope is 1 (45 degree)\n    slope = 1.0;\n  }\n\n  var moveByY = slope * overlapAmount[0];\n  var moveByX = overlapAmount[1] / slope;\n  if (overlapAmount[0] < moveByX) {\n    moveByX = overlapAmount[0];\n  } else {\n    moveByY = overlapAmount[1];\n  }\n  // return half the amount so that if each rectangle is moved by these\n  // amounts in opposite directions, overlap will be resolved\n  overlapAmount[0] = -1 * directions[0] * (moveByX / 2 + separationBuffer);\n  overlapAmount[1] = -1 * directions[1] * (moveByY / 2 + separationBuffer);\n};\n\n/**\n * This method decides the separation direction of overlapping nodes\n *\n * if directions[0] = -1, then rectA goes left\n * if directions[0] = 1,  then rectA goes right\n * if directions[1] = -1, then rectA goes up\n * if directions[1] = 1,  then rectA goes down\n */\nIGeometry.decideDirectionsForOverlappingNodes = function (rectA, rectB, directions) {\n  if (rectA.getCenterX() < rectB.getCenterX()) {\n    directions[0] = -1;\n  } else {\n    directions[0] = 1;\n  }\n\n  if (rectA.getCenterY() < rectB.getCenterY()) {\n    directions[1] = -1;\n  } else {\n    directions[1] = 1;\n  }\n};\n\n/**\n * This method calculates the intersection (clipping) points of the two\n * input rectangles with line segment defined by the centers of these two\n * rectangles. The clipping points are saved in the input double array and\n * whether or not the two rectangles overlap is returned.\n */\nIGeometry.getIntersection2 = function (rectA, rectB, result) {\n  //result[0-1] will contain clipPoint of rectA, result[2-3] will contain clipPoint of rectB\n  var p1x = rectA.getCenterX();\n  var p1y = rectA.getCenterY();\n  var p2x = rectB.getCenterX();\n  var p2y = rectB.getCenterY();\n\n  //if two rectangles intersect, then clipping points are centers\n  if (rectA.intersects(rectB)) {\n    result[0] = p1x;\n    result[1] = p1y;\n    result[2] = p2x;\n    result[3] = p2y;\n    return true;\n  }\n  //variables for rectA\n  var topLeftAx = rectA.getX();\n  var topLeftAy = rectA.getY();\n  var topRightAx = rectA.getRight();\n  var bottomLeftAx = rectA.getX();\n  var bottomLeftAy = rectA.getBottom();\n  var bottomRightAx = rectA.getRight();\n  var halfWidthA = rectA.getWidthHalf();\n  var halfHeightA = rectA.getHeightHalf();\n  //variables for rectB\n  var topLeftBx = rectB.getX();\n  var topLeftBy = rectB.getY();\n  var topRightBx = rectB.getRight();\n  var bottomLeftBx = rectB.getX();\n  var bottomLeftBy = rectB.getBottom();\n  var bottomRightBx = rectB.getRight();\n  var halfWidthB = rectB.getWidthHalf();\n  var halfHeightB = rectB.getHeightHalf();\n\n  //flag whether clipping points are found\n  var clipPointAFound = false;\n  var clipPointBFound = false;\n\n  // line is vertical\n  if (p1x === p2x) {\n    if (p1y > p2y) {\n      result[0] = p1x;\n      result[1] = topLeftAy;\n      result[2] = p2x;\n      result[3] = bottomLeftBy;\n      return false;\n    } else if (p1y < p2y) {\n      result[0] = p1x;\n      result[1] = bottomLeftAy;\n      result[2] = p2x;\n      result[3] = topLeftBy;\n      return false;\n    } else {\n      //not line, return null;\n    }\n  }\n  // line is horizontal\n  else if (p1y === p2y) {\n      if (p1x > p2x) {\n        result[0] = topLeftAx;\n        result[1] = p1y;\n        result[2] = topRightBx;\n        result[3] = p2y;\n        return false;\n      } else if (p1x < p2x) {\n        result[0] = topRightAx;\n        result[1] = p1y;\n        result[2] = topLeftBx;\n        result[3] = p2y;\n        return false;\n      } else {\n        //not valid line, return null;\n      }\n    } else {\n      //slopes of rectA's and rectB's diagonals\n      var slopeA = rectA.height / rectA.width;\n      var slopeB = rectB.height / rectB.width;\n\n      //slope of line between center of rectA and center of rectB\n      var slopePrime = (p2y - p1y) / (p2x - p1x);\n      var cardinalDirectionA = void 0;\n      var cardinalDirectionB = void 0;\n      var tempPointAx = void 0;\n      var tempPointAy = void 0;\n      var tempPointBx = void 0;\n      var tempPointBy = void 0;\n\n      //determine whether clipping point is the corner of nodeA\n      if (-slopeA === slopePrime) {\n        if (p1x > p2x) {\n          result[0] = bottomLeftAx;\n          result[1] = bottomLeftAy;\n          clipPointAFound = true;\n        } else {\n          result[0] = topRightAx;\n          result[1] = topLeftAy;\n          clipPointAFound = true;\n        }\n      } else if (slopeA === slopePrime) {\n        if (p1x > p2x) {\n          result[0] = topLeftAx;\n          result[1] = topLeftAy;\n          clipPointAFound = true;\n        } else {\n          result[0] = bottomRightAx;\n          result[1] = bottomLeftAy;\n          clipPointAFound = true;\n        }\n      }\n\n      //determine whether clipping point is the corner of nodeB\n      if (-slopeB === slopePrime) {\n        if (p2x > p1x) {\n          result[2] = bottomLeftBx;\n          result[3] = bottomLeftBy;\n          clipPointBFound = true;\n        } else {\n          result[2] = topRightBx;\n          result[3] = topLeftBy;\n          clipPointBFound = true;\n        }\n      } else if (slopeB === slopePrime) {\n        if (p2x > p1x) {\n          result[2] = topLeftBx;\n          result[3] = topLeftBy;\n          clipPointBFound = true;\n        } else {\n          result[2] = bottomRightBx;\n          result[3] = bottomLeftBy;\n          clipPointBFound = true;\n        }\n      }\n\n      //if both clipping points are corners\n      if (clipPointAFound && clipPointBFound) {\n        return false;\n      }\n\n      //determine Cardinal Direction of rectangles\n      if (p1x > p2x) {\n        if (p1y > p2y) {\n          cardinalDirectionA = this.getCardinalDirection(slopeA, slopePrime, 4);\n          cardinalDirectionB = this.getCardinalDirection(slopeB, slopePrime, 2);\n        } else {\n          cardinalDirectionA = this.getCardinalDirection(-slopeA, slopePrime, 3);\n          cardinalDirectionB = this.getCardinalDirection(-slopeB, slopePrime, 1);\n        }\n      } else {\n        if (p1y > p2y) {\n          cardinalDirectionA = this.getCardinalDirection(-slopeA, slopePrime, 1);\n          cardinalDirectionB = this.getCardinalDirection(-slopeB, slopePrime, 3);\n        } else {\n          cardinalDirectionA = this.getCardinalDirection(slopeA, slopePrime, 2);\n          cardinalDirectionB = this.getCardinalDirection(slopeB, slopePrime, 4);\n        }\n      }\n      //calculate clipping Point if it is not found before\n      if (!clipPointAFound) {\n        switch (cardinalDirectionA) {\n          case 1:\n            tempPointAy = topLeftAy;\n            tempPointAx = p1x + -halfHeightA / slopePrime;\n            result[0] = tempPointAx;\n            result[1] = tempPointAy;\n            break;\n          case 2:\n            tempPointAx = bottomRightAx;\n            tempPointAy = p1y + halfWidthA * slopePrime;\n            result[0] = tempPointAx;\n            result[1] = tempPointAy;\n            break;\n          case 3:\n            tempPointAy = bottomLeftAy;\n            tempPointAx = p1x + halfHeightA / slopePrime;\n            result[0] = tempPointAx;\n            result[1] = tempPointAy;\n            break;\n          case 4:\n            tempPointAx = bottomLeftAx;\n            tempPointAy = p1y + -halfWidthA * slopePrime;\n            result[0] = tempPointAx;\n            result[1] = tempPointAy;\n            break;\n        }\n      }\n      if (!clipPointBFound) {\n        switch (cardinalDirectionB) {\n          case 1:\n            tempPointBy = topLeftBy;\n            tempPointBx = p2x + -halfHeightB / slopePrime;\n            result[2] = tempPointBx;\n            result[3] = tempPointBy;\n            break;\n          case 2:\n            tempPointBx = bottomRightBx;\n            tempPointBy = p2y + halfWidthB * slopePrime;\n            result[2] = tempPointBx;\n            result[3] = tempPointBy;\n            break;\n          case 3:\n            tempPointBy = bottomLeftBy;\n            tempPointBx = p2x + halfHeightB / slopePrime;\n            result[2] = tempPointBx;\n            result[3] = tempPointBy;\n            break;\n          case 4:\n            tempPointBx = bottomLeftBx;\n            tempPointBy = p2y + -halfWidthB * slopePrime;\n            result[2] = tempPointBx;\n            result[3] = tempPointBy;\n            break;\n        }\n      }\n    }\n  return false;\n};\n\n/**\n * This method returns in which cardinal direction does input point stays\n * 1: North\n * 2: East\n * 3: South\n * 4: West\n */\nIGeometry.getCardinalDirection = function (slope, slopePrime, line) {\n  if (slope > slopePrime) {\n    return line;\n  } else {\n    return 1 + line % 4;\n  }\n};\n\n/**\n * This method calculates the intersection of the two lines defined by\n * point pairs (s1,s2) and (f1,f2).\n */\nIGeometry.getIntersection = function (s1, s2, f1, f2) {\n  if (f2 == null) {\n    return this.getIntersection2(s1, s2, f1);\n  }\n\n  var x1 = s1.x;\n  var y1 = s1.y;\n  var x2 = s2.x;\n  var y2 = s2.y;\n  var x3 = f1.x;\n  var y3 = f1.y;\n  var x4 = f2.x;\n  var y4 = f2.y;\n  var x = void 0,\n      y = void 0; // intersection point\n  var a1 = void 0,\n      a2 = void 0,\n      b1 = void 0,\n      b2 = void 0,\n      c1 = void 0,\n      c2 = void 0; // coefficients of line eqns.\n  var denom = void 0;\n\n  a1 = y2 - y1;\n  b1 = x1 - x2;\n  c1 = x2 * y1 - x1 * y2; // { a1*x + b1*y + c1 = 0 is line 1 }\n\n  a2 = y4 - y3;\n  b2 = x3 - x4;\n  c2 = x4 * y3 - x3 * y4; // { a2*x + b2*y + c2 = 0 is line 2 }\n\n  denom = a1 * b2 - a2 * b1;\n\n  if (denom === 0) {\n    return null;\n  }\n\n  x = (b1 * c2 - b2 * c1) / denom;\n  y = (a2 * c1 - a1 * c2) / denom;\n\n  return new Point(x, y);\n};\n\n/**\n * This method finds and returns the angle of the vector from the + x-axis\n * in clockwise direction (compatible w/ Java coordinate system!).\n */\nIGeometry.angleOfVector = function (Cx, Cy, Nx, Ny) {\n  var C_angle = void 0;\n\n  if (Cx !== Nx) {\n    C_angle = Math.atan((Ny - Cy) / (Nx - Cx));\n\n    if (Nx < Cx) {\n      C_angle += Math.PI;\n    } else if (Ny < Cy) {\n      C_angle += this.TWO_PI;\n    }\n  } else if (Ny < Cy) {\n    C_angle = this.ONE_AND_HALF_PI; // 270 degrees\n  } else {\n    C_angle = this.HALF_PI; // 90 degrees\n  }\n\n  return C_angle;\n};\n\n/**\n * This method checks whether the given two line segments (one with point\n * p1 and p2, the other with point p3 and p4) intersect at a point other\n * than these points.\n */\nIGeometry.doIntersect = function (p1, p2, p3, p4) {\n  var a = p1.x;\n  var b = p1.y;\n  var c = p2.x;\n  var d = p2.y;\n  var p = p3.x;\n  var q = p3.y;\n  var r = p4.x;\n  var s = p4.y;\n  var det = (c - a) * (s - q) - (r - p) * (d - b);\n\n  if (det === 0) {\n    return false;\n  } else {\n    var lambda = ((s - q) * (r - a) + (p - r) * (s - b)) / det;\n    var gamma = ((b - d) * (r - a) + (c - a) * (s - b)) / det;\n    return 0 < lambda && lambda < 1 && 0 < gamma && gamma < 1;\n  }\n};\n\n// -----------------------------------------------------------------------------\n// Section: Class Constants\n// -----------------------------------------------------------------------------\n/**\n * Some useful pre-calculated constants\n */\nIGeometry.HALF_PI = 0.5 * Math.PI;\nIGeometry.ONE_AND_HALF_PI = 1.5 * Math.PI;\nIGeometry.TWO_PI = 2.0 * Math.PI;\nIGeometry.THREE_PI = 3.0 * Math.PI;\n\nmodule.exports = IGeometry;\n\n/***/ }),\n/* 9 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nfunction IMath() {}\n\n/**\n * This method returns the sign of the input value.\n */\nIMath.sign = function (value) {\n  if (value > 0) {\n    return 1;\n  } else if (value < 0) {\n    return -1;\n  } else {\n    return 0;\n  }\n};\n\nIMath.floor = function (value) {\n  return value < 0 ? Math.ceil(value) : Math.floor(value);\n};\n\nIMath.ceil = function (value) {\n  return value < 0 ? Math.floor(value) : Math.ceil(value);\n};\n\nmodule.exports = IMath;\n\n/***/ }),\n/* 10 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nfunction Integer() {}\n\nInteger.MAX_VALUE = 2147483647;\nInteger.MIN_VALUE = -2147483648;\n\nmodule.exports = Integer;\n\n/***/ }),\n/* 11 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar nodeFrom = function nodeFrom(value) {\n  return { value: value, next: null, prev: null };\n};\n\nvar add = function add(prev, node, next, list) {\n  if (prev !== null) {\n    prev.next = node;\n  } else {\n    list.head = node;\n  }\n\n  if (next !== null) {\n    next.prev = node;\n  } else {\n    list.tail = node;\n  }\n\n  node.prev = prev;\n  node.next = next;\n\n  list.length++;\n\n  return node;\n};\n\nvar _remove = function _remove(node, list) {\n  var prev = node.prev,\n      next = node.next;\n\n\n  if (prev !== null) {\n    prev.next = next;\n  } else {\n    list.head = next;\n  }\n\n  if (next !== null) {\n    next.prev = prev;\n  } else {\n    list.tail = prev;\n  }\n\n  node.prev = node.next = null;\n\n  list.length--;\n\n  return node;\n};\n\nvar LinkedList = function () {\n  function LinkedList(vals) {\n    var _this = this;\n\n    _classCallCheck(this, LinkedList);\n\n    this.length = 0;\n    this.head = null;\n    this.tail = null;\n\n    if (vals != null) {\n      vals.forEach(function (v) {\n        return _this.push(v);\n      });\n    }\n  }\n\n  _createClass(LinkedList, [{\n    key: \"size\",\n    value: function size() {\n      return this.length;\n    }\n  }, {\n    key: \"insertBefore\",\n    value: function insertBefore(val, otherNode) {\n      return add(otherNode.prev, nodeFrom(val), otherNode, this);\n    }\n  }, {\n    key: \"insertAfter\",\n    value: function insertAfter(val, otherNode) {\n      return add(otherNode, nodeFrom(val), otherNode.next, this);\n    }\n  }, {\n    key: \"insertNodeBefore\",\n    value: function insertNodeBefore(newNode, otherNode) {\n      return add(otherNode.prev, newNode, otherNode, this);\n    }\n  }, {\n    key: \"insertNodeAfter\",\n    value: function insertNodeAfter(newNode, otherNode) {\n      return add(otherNode, newNode, otherNode.next, this);\n    }\n  }, {\n    key: \"push\",\n    value: function push(val) {\n      return add(this.tail, nodeFrom(val), null, this);\n    }\n  }, {\n    key: \"unshift\",\n    value: function unshift(val) {\n      return add(null, nodeFrom(val), this.head, this);\n    }\n  }, {\n    key: \"remove\",\n    value: function remove(node) {\n      return _remove(node, this);\n    }\n  }, {\n    key: \"pop\",\n    value: function pop() {\n      return _remove(this.tail, this).value;\n    }\n  }, {\n    key: \"popNode\",\n    value: function popNode() {\n      return _remove(this.tail, this);\n    }\n  }, {\n    key: \"shift\",\n    value: function shift() {\n      return _remove(this.head, this).value;\n    }\n  }, {\n    key: \"shiftNode\",\n    value: function shiftNode() {\n      return _remove(this.head, this);\n    }\n  }, {\n    key: \"get_object_at\",\n    value: function get_object_at(index) {\n      if (index <= this.length()) {\n        var i = 1;\n        var current = this.head;\n        while (i < index) {\n          current = current.next;\n          i++;\n        }\n        return current.value;\n      }\n    }\n  }, {\n    key: \"set_object_at\",\n    value: function set_object_at(index, value) {\n      if (index <= this.length()) {\n        var i = 1;\n        var current = this.head;\n        while (i < index) {\n          current = current.next;\n          i++;\n        }\n        current.value = value;\n      }\n    }\n  }]);\n\n  return LinkedList;\n}();\n\nmodule.exports = LinkedList;\n\n/***/ }),\n/* 12 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n/*\r\n *This class is the javascript implementation of the Point.java class in jdk\r\n */\nfunction Point(x, y, p) {\n  this.x = null;\n  this.y = null;\n  if (x == null && y == null && p == null) {\n    this.x = 0;\n    this.y = 0;\n  } else if (typeof x == 'number' && typeof y == 'number' && p == null) {\n    this.x = x;\n    this.y = y;\n  } else if (x.constructor.name == 'Point' && y == null && p == null) {\n    p = x;\n    this.x = p.x;\n    this.y = p.y;\n  }\n}\n\nPoint.prototype.getX = function () {\n  return this.x;\n};\n\nPoint.prototype.getY = function () {\n  return this.y;\n};\n\nPoint.prototype.getLocation = function () {\n  return new Point(this.x, this.y);\n};\n\nPoint.prototype.setLocation = function (x, y, p) {\n  if (x.constructor.name == 'Point' && y == null && p == null) {\n    p = x;\n    this.setLocation(p.x, p.y);\n  } else if (typeof x == 'number' && typeof y == 'number' && p == null) {\n    //if both parameters are integer just move (x,y) location\n    if (parseInt(x) == x && parseInt(y) == y) {\n      this.move(x, y);\n    } else {\n      this.x = Math.floor(x + 0.5);\n      this.y = Math.floor(y + 0.5);\n    }\n  }\n};\n\nPoint.prototype.move = function (x, y) {\n  this.x = x;\n  this.y = y;\n};\n\nPoint.prototype.translate = function (dx, dy) {\n  this.x += dx;\n  this.y += dy;\n};\n\nPoint.prototype.equals = function (obj) {\n  if (obj.constructor.name == \"Point\") {\n    var pt = obj;\n    return this.x == pt.x && this.y == pt.y;\n  }\n  return this == obj;\n};\n\nPoint.prototype.toString = function () {\n  return new Point().constructor.name + \"[x=\" + this.x + \",y=\" + this.y + \"]\";\n};\n\nmodule.exports = Point;\n\n/***/ }),\n/* 13 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nfunction RectangleD(x, y, width, height) {\n  this.x = 0;\n  this.y = 0;\n  this.width = 0;\n  this.height = 0;\n\n  if (x != null && y != null && width != null && height != null) {\n    this.x = x;\n    this.y = y;\n    this.width = width;\n    this.height = height;\n  }\n}\n\nRectangleD.prototype.getX = function () {\n  return this.x;\n};\n\nRectangleD.prototype.setX = function (x) {\n  this.x = x;\n};\n\nRectangleD.prototype.getY = function () {\n  return this.y;\n};\n\nRectangleD.prototype.setY = function (y) {\n  this.y = y;\n};\n\nRectangleD.prototype.getWidth = function () {\n  return this.width;\n};\n\nRectangleD.prototype.setWidth = function (width) {\n  this.width = width;\n};\n\nRectangleD.prototype.getHeight = function () {\n  return this.height;\n};\n\nRectangleD.prototype.setHeight = function (height) {\n  this.height = height;\n};\n\nRectangleD.prototype.getRight = function () {\n  return this.x + this.width;\n};\n\nRectangleD.prototype.getBottom = function () {\n  return this.y + this.height;\n};\n\nRectangleD.prototype.intersects = function (a) {\n  if (this.getRight() < a.x) {\n    return false;\n  }\n\n  if (this.getBottom() < a.y) {\n    return false;\n  }\n\n  if (a.getRight() < this.x) {\n    return false;\n  }\n\n  if (a.getBottom() < this.y) {\n    return false;\n  }\n\n  return true;\n};\n\nRectangleD.prototype.getCenterX = function () {\n  return this.x + this.width / 2;\n};\n\nRectangleD.prototype.getMinX = function () {\n  return this.getX();\n};\n\nRectangleD.prototype.getMaxX = function () {\n  return this.getX() + this.width;\n};\n\nRectangleD.prototype.getCenterY = function () {\n  return this.y + this.height / 2;\n};\n\nRectangleD.prototype.getMinY = function () {\n  return this.getY();\n};\n\nRectangleD.prototype.getMaxY = function () {\n  return this.getY() + this.height;\n};\n\nRectangleD.prototype.getWidthHalf = function () {\n  return this.width / 2;\n};\n\nRectangleD.prototype.getHeightHalf = function () {\n  return this.height / 2;\n};\n\nmodule.exports = RectangleD;\n\n/***/ }),\n/* 14 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nfunction UniqueIDGeneretor() {}\n\nUniqueIDGeneretor.lastID = 0;\n\nUniqueIDGeneretor.createID = function (obj) {\n  if (UniqueIDGeneretor.isPrimitive(obj)) {\n    return obj;\n  }\n  if (obj.uniqueID != null) {\n    return obj.uniqueID;\n  }\n  obj.uniqueID = UniqueIDGeneretor.getString();\n  UniqueIDGeneretor.lastID++;\n  return obj.uniqueID;\n};\n\nUniqueIDGeneretor.getString = function (id) {\n  if (id == null) id = UniqueIDGeneretor.lastID;\n  return \"Object#\" + id + \"\";\n};\n\nUniqueIDGeneretor.isPrimitive = function (arg) {\n  var type = typeof arg === \"undefined\" ? \"undefined\" : _typeof(arg);\n  return arg == null || type != \"object\" && type != \"function\";\n};\n\nmodule.exports = UniqueIDGeneretor;\n\n/***/ }),\n/* 15 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\nvar LayoutConstants = __webpack_require__(0);\nvar LGraphManager = __webpack_require__(6);\nvar LNode = __webpack_require__(3);\nvar LEdge = __webpack_require__(1);\nvar LGraph = __webpack_require__(5);\nvar PointD = __webpack_require__(4);\nvar Transform = __webpack_require__(17);\nvar Emitter = __webpack_require__(27);\n\nfunction Layout(isRemoteUse) {\n  Emitter.call(this);\n\n  //Layout Quality: 0:draft, 1:default, 2:proof\n  this.layoutQuality = LayoutConstants.QUALITY;\n  //Whether layout should create bendpoints as needed or not\n  this.createBendsAsNeeded = LayoutConstants.DEFAULT_CREATE_BENDS_AS_NEEDED;\n  //Whether layout should be incremental or not\n  this.incremental = LayoutConstants.DEFAULT_INCREMENTAL;\n  //Whether we animate from before to after layout node positions\n  this.animationOnLayout = LayoutConstants.DEFAULT_ANIMATION_ON_LAYOUT;\n  //Whether we animate the layout process or not\n  this.animationDuringLayout = LayoutConstants.DEFAULT_ANIMATION_DURING_LAYOUT;\n  //Number iterations that should be done between two successive animations\n  this.animationPeriod = LayoutConstants.DEFAULT_ANIMATION_PERIOD;\n  /**\r\n   * Whether or not leaf nodes (non-compound nodes) are of uniform sizes. When\r\n   * they are, both spring and repulsion forces between two leaf nodes can be\r\n   * calculated without the expensive clipping point calculations, resulting\r\n   * in major speed-up.\r\n   */\n  this.uniformLeafNodeSizes = LayoutConstants.DEFAULT_UNIFORM_LEAF_NODE_SIZES;\n  /**\r\n   * This is used for creation of bendpoints by using dummy nodes and edges.\r\n   * Maps an LEdge to its dummy bendpoint path.\r\n   */\n  this.edgeToDummyNodes = new Map();\n  this.graphManager = new LGraphManager(this);\n  this.isLayoutFinished = false;\n  this.isSubLayout = false;\n  this.isRemoteUse = false;\n\n  if (isRemoteUse != null) {\n    this.isRemoteUse = isRemoteUse;\n  }\n}\n\nLayout.RANDOM_SEED = 1;\n\nLayout.prototype = Object.create(Emitter.prototype);\n\nLayout.prototype.getGraphManager = function () {\n  return this.graphManager;\n};\n\nLayout.prototype.getAllNodes = function () {\n  return this.graphManager.getAllNodes();\n};\n\nLayout.prototype.getAllEdges = function () {\n  return this.graphManager.getAllEdges();\n};\n\nLayout.prototype.getAllNodesToApplyGravitation = function () {\n  return this.graphManager.getAllNodesToApplyGravitation();\n};\n\nLayout.prototype.newGraphManager = function () {\n  var gm = new LGraphManager(this);\n  this.graphManager = gm;\n  return gm;\n};\n\nLayout.prototype.newGraph = function (vGraph) {\n  return new LGraph(null, this.graphManager, vGraph);\n};\n\nLayout.prototype.newNode = function (vNode) {\n  return new LNode(this.graphManager, vNode);\n};\n\nLayout.prototype.newEdge = function (vEdge) {\n  return new LEdge(null, null, vEdge);\n};\n\nLayout.prototype.checkLayoutSuccess = function () {\n  return this.graphManager.getRoot() == null || this.graphManager.getRoot().getNodes().length == 0 || this.graphManager.includesInvalidEdge();\n};\n\nLayout.prototype.runLayout = function () {\n  this.isLayoutFinished = false;\n\n  if (this.tilingPreLayout) {\n    this.tilingPreLayout();\n  }\n\n  this.initParameters();\n  var isLayoutSuccessfull;\n\n  if (this.checkLayoutSuccess()) {\n    isLayoutSuccessfull = false;\n  } else {\n    isLayoutSuccessfull = this.layout();\n  }\n\n  if (LayoutConstants.ANIMATE === 'during') {\n    // If this is a 'during' layout animation. Layout is not finished yet. \n    // We need to perform these in index.js when layout is really finished.\n    return false;\n  }\n\n  if (isLayoutSuccessfull) {\n    if (!this.isSubLayout) {\n      this.doPostLayout();\n    }\n  }\n\n  if (this.tilingPostLayout) {\n    this.tilingPostLayout();\n  }\n\n  this.isLayoutFinished = true;\n\n  return isLayoutSuccessfull;\n};\n\n/**\r\n * This method performs the operations required after layout.\r\n */\nLayout.prototype.doPostLayout = function () {\n  //assert !isSubLayout : \"Should not be called on sub-layout!\";\n  // Propagate geometric changes to v-level objects\n  if (!this.incremental) {\n    this.transform();\n  }\n  this.update();\n};\n\n/**\r\n * This method updates the geometry of the target graph according to\r\n * calculated layout.\r\n */\nLayout.prototype.update2 = function () {\n  // update bend points\n  if (this.createBendsAsNeeded) {\n    this.createBendpointsFromDummyNodes();\n\n    // reset all edges, since the topology has changed\n    this.graphManager.resetAllEdges();\n  }\n\n  // perform edge, node and root updates if layout is not called\n  // remotely\n  if (!this.isRemoteUse) {\n    // update all edges\n    var edge;\n    var allEdges = this.graphManager.getAllEdges();\n    for (var i = 0; i < allEdges.length; i++) {\n      edge = allEdges[i];\n      //      this.update(edge);\n    }\n\n    // recursively update nodes\n    var node;\n    var nodes = this.graphManager.getRoot().getNodes();\n    for (var i = 0; i < nodes.length; i++) {\n      node = nodes[i];\n      //      this.update(node);\n    }\n\n    // update root graph\n    this.update(this.graphManager.getRoot());\n  }\n};\n\nLayout.prototype.update = function (obj) {\n  if (obj == null) {\n    this.update2();\n  } else if (obj instanceof LNode) {\n    var node = obj;\n    if (node.getChild() != null) {\n      // since node is compound, recursively update child nodes\n      var nodes = node.getChild().getNodes();\n      for (var i = 0; i < nodes.length; i++) {\n        update(nodes[i]);\n      }\n    }\n\n    // if the l-level node is associated with a v-level graph object,\n    // then it is assumed that the v-level node implements the\n    // interface Updatable.\n    if (node.vGraphObject != null) {\n      // cast to Updatable without any type check\n      var vNode = node.vGraphObject;\n\n      // call the update method of the interface\n      vNode.update(node);\n    }\n  } else if (obj instanceof LEdge) {\n    var edge = obj;\n    // if the l-level edge is associated with a v-level graph object,\n    // then it is assumed that the v-level edge implements the\n    // interface Updatable.\n\n    if (edge.vGraphObject != null) {\n      // cast to Updatable without any type check\n      var vEdge = edge.vGraphObject;\n\n      // call the update method of the interface\n      vEdge.update(edge);\n    }\n  } else if (obj instanceof LGraph) {\n    var graph = obj;\n    // if the l-level graph is associated with a v-level graph object,\n    // then it is assumed that the v-level object implements the\n    // interface Updatable.\n\n    if (graph.vGraphObject != null) {\n      // cast to Updatable without any type check\n      var vGraph = graph.vGraphObject;\n\n      // call the update method of the interface\n      vGraph.update(graph);\n    }\n  }\n};\n\n/**\r\n * This method is used to set all layout parameters to default values\r\n * determined at compile time.\r\n */\nLayout.prototype.initParameters = function () {\n  if (!this.isSubLayout) {\n    this.layoutQuality = LayoutConstants.QUALITY;\n    this.animationDuringLayout = LayoutConstants.DEFAULT_ANIMATION_DURING_LAYOUT;\n    this.animationPeriod = LayoutConstants.DEFAULT_ANIMATION_PERIOD;\n    this.animationOnLayout = LayoutConstants.DEFAULT_ANIMATION_ON_LAYOUT;\n    this.incremental = LayoutConstants.DEFAULT_INCREMENTAL;\n    this.createBendsAsNeeded = LayoutConstants.DEFAULT_CREATE_BENDS_AS_NEEDED;\n    this.uniformLeafNodeSizes = LayoutConstants.DEFAULT_UNIFORM_LEAF_NODE_SIZES;\n  }\n\n  if (this.animationDuringLayout) {\n    this.animationOnLayout = false;\n  }\n};\n\nLayout.prototype.transform = function (newLeftTop) {\n  if (newLeftTop == undefined) {\n    this.transform(new PointD(0, 0));\n  } else {\n    // create a transformation object (from Eclipse to layout). When an\n    // inverse transform is applied, we get upper-left coordinate of the\n    // drawing or the root graph at given input coordinate (some margins\n    // already included in calculation of left-top).\n\n    var trans = new Transform();\n    var leftTop = this.graphManager.getRoot().updateLeftTop();\n\n    if (leftTop != null) {\n      trans.setWorldOrgX(newLeftTop.x);\n      trans.setWorldOrgY(newLeftTop.y);\n\n      trans.setDeviceOrgX(leftTop.x);\n      trans.setDeviceOrgY(leftTop.y);\n\n      var nodes = this.getAllNodes();\n      var node;\n\n      for (var i = 0; i < nodes.length; i++) {\n        node = nodes[i];\n        node.transform(trans);\n      }\n    }\n  }\n};\n\nLayout.prototype.positionNodesRandomly = function (graph) {\n\n  if (graph == undefined) {\n    //assert !this.incremental;\n    this.positionNodesRandomly(this.getGraphManager().getRoot());\n    this.getGraphManager().getRoot().updateBounds(true);\n  } else {\n    var lNode;\n    var childGraph;\n\n    var nodes = graph.getNodes();\n    for (var i = 0; i < nodes.length; i++) {\n      lNode = nodes[i];\n      childGraph = lNode.getChild();\n\n      if (childGraph == null) {\n        lNode.scatter();\n      } else if (childGraph.getNodes().length == 0) {\n        lNode.scatter();\n      } else {\n        this.positionNodesRandomly(childGraph);\n        lNode.updateBounds();\n      }\n    }\n  }\n};\n\n/**\r\n * This method returns a list of trees where each tree is represented as a\r\n * list of l-nodes. The method returns a list of size 0 when:\r\n * - The graph is not flat or\r\n * - One of the component(s) of the graph is not a tree.\r\n */\nLayout.prototype.getFlatForest = function () {\n  var flatForest = [];\n  var isForest = true;\n\n  // Quick reference for all nodes in the graph manager associated with\n  // this layout. The list should not be changed.\n  var allNodes = this.graphManager.getRoot().getNodes();\n\n  // First be sure that the graph is flat\n  var isFlat = true;\n\n  for (var i = 0; i < allNodes.length; i++) {\n    if (allNodes[i].getChild() != null) {\n      isFlat = false;\n    }\n  }\n\n  // Return empty forest if the graph is not flat.\n  if (!isFlat) {\n    return flatForest;\n  }\n\n  // Run BFS for each component of the graph.\n\n  var visited = new Set();\n  var toBeVisited = [];\n  var parents = new Map();\n  var unProcessedNodes = [];\n\n  unProcessedNodes = unProcessedNodes.concat(allNodes);\n\n  // Each iteration of this loop finds a component of the graph and\n  // decides whether it is a tree or not. If it is a tree, adds it to the\n  // forest and continued with the next component.\n\n  while (unProcessedNodes.length > 0 && isForest) {\n    toBeVisited.push(unProcessedNodes[0]);\n\n    // Start the BFS. Each iteration of this loop visits a node in a\n    // BFS manner.\n    while (toBeVisited.length > 0 && isForest) {\n      //pool operation\n      var currentNode = toBeVisited[0];\n      toBeVisited.splice(0, 1);\n      visited.add(currentNode);\n\n      // Traverse all neighbors of this node\n      var neighborEdges = currentNode.getEdges();\n\n      for (var i = 0; i < neighborEdges.length; i++) {\n        var currentNeighbor = neighborEdges[i].getOtherEnd(currentNode);\n\n        // If BFS is not growing from this neighbor.\n        if (parents.get(currentNode) != currentNeighbor) {\n          // We haven't previously visited this neighbor.\n          if (!visited.has(currentNeighbor)) {\n            toBeVisited.push(currentNeighbor);\n            parents.set(currentNeighbor, currentNode);\n          }\n          // Since we have previously visited this neighbor and\n          // this neighbor is not parent of currentNode, given\n          // graph contains a component that is not tree, hence\n          // it is not a forest.\n          else {\n              isForest = false;\n              break;\n            }\n        }\n      }\n    }\n\n    // The graph contains a component that is not a tree. Empty\n    // previously found trees. The method will end.\n    if (!isForest) {\n      flatForest = [];\n    }\n    // Save currently visited nodes as a tree in our forest. Reset\n    // visited and parents lists. Continue with the next component of\n    // the graph, if any.\n    else {\n        var temp = [].concat(_toConsumableArray(visited));\n        flatForest.push(temp);\n        //flatForest = flatForest.concat(temp);\n        //unProcessedNodes.removeAll(visited);\n        for (var i = 0; i < temp.length; i++) {\n          var value = temp[i];\n          var index = unProcessedNodes.indexOf(value);\n          if (index > -1) {\n            unProcessedNodes.splice(index, 1);\n          }\n        }\n        visited = new Set();\n        parents = new Map();\n      }\n  }\n\n  return flatForest;\n};\n\n/**\r\n * This method creates dummy nodes (an l-level node with minimal dimensions)\r\n * for the given edge (one per bendpoint). The existing l-level structure\r\n * is updated accordingly.\r\n */\nLayout.prototype.createDummyNodesForBendpoints = function (edge) {\n  var dummyNodes = [];\n  var prev = edge.source;\n\n  var graph = this.graphManager.calcLowestCommonAncestor(edge.source, edge.target);\n\n  for (var i = 0; i < edge.bendpoints.length; i++) {\n    // create new dummy node\n    var dummyNode = this.newNode(null);\n    dummyNode.setRect(new Point(0, 0), new Dimension(1, 1));\n\n    graph.add(dummyNode);\n\n    // create new dummy edge between prev and dummy node\n    var dummyEdge = this.newEdge(null);\n    this.graphManager.add(dummyEdge, prev, dummyNode);\n\n    dummyNodes.add(dummyNode);\n    prev = dummyNode;\n  }\n\n  var dummyEdge = this.newEdge(null);\n  this.graphManager.add(dummyEdge, prev, edge.target);\n\n  this.edgeToDummyNodes.set(edge, dummyNodes);\n\n  // remove real edge from graph manager if it is inter-graph\n  if (edge.isInterGraph()) {\n    this.graphManager.remove(edge);\n  }\n  // else, remove the edge from the current graph\n  else {\n      graph.remove(edge);\n    }\n\n  return dummyNodes;\n};\n\n/**\r\n * This method creates bendpoints for edges from the dummy nodes\r\n * at l-level.\r\n */\nLayout.prototype.createBendpointsFromDummyNodes = function () {\n  var edges = [];\n  edges = edges.concat(this.graphManager.getAllEdges());\n  edges = [].concat(_toConsumableArray(this.edgeToDummyNodes.keys())).concat(edges);\n\n  for (var k = 0; k < edges.length; k++) {\n    var lEdge = edges[k];\n\n    if (lEdge.bendpoints.length > 0) {\n      var path = this.edgeToDummyNodes.get(lEdge);\n\n      for (var i = 0; i < path.length; i++) {\n        var dummyNode = path[i];\n        var p = new PointD(dummyNode.getCenterX(), dummyNode.getCenterY());\n\n        // update bendpoint's location according to dummy node\n        var ebp = lEdge.bendpoints.get(i);\n        ebp.x = p.x;\n        ebp.y = p.y;\n\n        // remove the dummy node, dummy edges incident with this\n        // dummy node is also removed (within the remove method)\n        dummyNode.getOwner().remove(dummyNode);\n      }\n\n      // add the real edge to graph\n      this.graphManager.add(lEdge, lEdge.source, lEdge.target);\n    }\n  }\n};\n\nLayout.transform = function (sliderValue, defaultValue, minDiv, maxMul) {\n  if (minDiv != undefined && maxMul != undefined) {\n    var value = defaultValue;\n\n    if (sliderValue <= 50) {\n      var minValue = defaultValue / minDiv;\n      value -= (defaultValue - minValue) / 50 * (50 - sliderValue);\n    } else {\n      var maxValue = defaultValue * maxMul;\n      value += (maxValue - defaultValue) / 50 * (sliderValue - 50);\n    }\n\n    return value;\n  } else {\n    var a, b;\n\n    if (sliderValue <= 50) {\n      a = 9.0 * defaultValue / 500.0;\n      b = defaultValue / 10.0;\n    } else {\n      a = 9.0 * defaultValue / 50.0;\n      b = -8 * defaultValue;\n    }\n\n    return a * sliderValue + b;\n  }\n};\n\n/**\r\n * This method finds and returns the center of the given nodes, assuming\r\n * that the given nodes form a tree in themselves.\r\n */\nLayout.findCenterOfTree = function (nodes) {\n  var list = [];\n  list = list.concat(nodes);\n\n  var removedNodes = [];\n  var remainingDegrees = new Map();\n  var foundCenter = false;\n  var centerNode = null;\n\n  if (list.length == 1 || list.length == 2) {\n    foundCenter = true;\n    centerNode = list[0];\n  }\n\n  for (var i = 0; i < list.length; i++) {\n    var node = list[i];\n    var degree = node.getNeighborsList().size;\n    remainingDegrees.set(node, node.getNeighborsList().size);\n\n    if (degree == 1) {\n      removedNodes.push(node);\n    }\n  }\n\n  var tempList = [];\n  tempList = tempList.concat(removedNodes);\n\n  while (!foundCenter) {\n    var tempList2 = [];\n    tempList2 = tempList2.concat(tempList);\n    tempList = [];\n\n    for (var i = 0; i < list.length; i++) {\n      var node = list[i];\n\n      var index = list.indexOf(node);\n      if (index >= 0) {\n        list.splice(index, 1);\n      }\n\n      var neighbours = node.getNeighborsList();\n\n      neighbours.forEach(function (neighbour) {\n        if (removedNodes.indexOf(neighbour) < 0) {\n          var otherDegree = remainingDegrees.get(neighbour);\n          var newDegree = otherDegree - 1;\n\n          if (newDegree == 1) {\n            tempList.push(neighbour);\n          }\n\n          remainingDegrees.set(neighbour, newDegree);\n        }\n      });\n    }\n\n    removedNodes = removedNodes.concat(tempList);\n\n    if (list.length == 1 || list.length == 2) {\n      foundCenter = true;\n      centerNode = list[0];\n    }\n  }\n\n  return centerNode;\n};\n\n/**\r\n * During the coarsening process, this layout may be referenced by two graph managers\r\n * this setter function grants access to change the currently being used graph manager\r\n */\nLayout.prototype.setGraphManager = function (gm) {\n  this.graphManager = gm;\n};\n\nmodule.exports = Layout;\n\n/***/ }),\n/* 16 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nfunction RandomSeed() {}\n// adapted from: https://stackoverflow.com/a/19303725\nRandomSeed.seed = 1;\nRandomSeed.x = 0;\n\nRandomSeed.nextDouble = function () {\n  RandomSeed.x = Math.sin(RandomSeed.seed++) * 10000;\n  return RandomSeed.x - Math.floor(RandomSeed.x);\n};\n\nmodule.exports = RandomSeed;\n\n/***/ }),\n/* 17 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar PointD = __webpack_require__(4);\n\nfunction Transform(x, y) {\n  this.lworldOrgX = 0.0;\n  this.lworldOrgY = 0.0;\n  this.ldeviceOrgX = 0.0;\n  this.ldeviceOrgY = 0.0;\n  this.lworldExtX = 1.0;\n  this.lworldExtY = 1.0;\n  this.ldeviceExtX = 1.0;\n  this.ldeviceExtY = 1.0;\n}\n\nTransform.prototype.getWorldOrgX = function () {\n  return this.lworldOrgX;\n};\n\nTransform.prototype.setWorldOrgX = function (wox) {\n  this.lworldOrgX = wox;\n};\n\nTransform.prototype.getWorldOrgY = function () {\n  return this.lworldOrgY;\n};\n\nTransform.prototype.setWorldOrgY = function (woy) {\n  this.lworldOrgY = woy;\n};\n\nTransform.prototype.getWorldExtX = function () {\n  return this.lworldExtX;\n};\n\nTransform.prototype.setWorldExtX = function (wex) {\n  this.lworldExtX = wex;\n};\n\nTransform.prototype.getWorldExtY = function () {\n  return this.lworldExtY;\n};\n\nTransform.prototype.setWorldExtY = function (wey) {\n  this.lworldExtY = wey;\n};\n\n/* Device related */\n\nTransform.prototype.getDeviceOrgX = function () {\n  return this.ldeviceOrgX;\n};\n\nTransform.prototype.setDeviceOrgX = function (dox) {\n  this.ldeviceOrgX = dox;\n};\n\nTransform.prototype.getDeviceOrgY = function () {\n  return this.ldeviceOrgY;\n};\n\nTransform.prototype.setDeviceOrgY = function (doy) {\n  this.ldeviceOrgY = doy;\n};\n\nTransform.prototype.getDeviceExtX = function () {\n  return this.ldeviceExtX;\n};\n\nTransform.prototype.setDeviceExtX = function (dex) {\n  this.ldeviceExtX = dex;\n};\n\nTransform.prototype.getDeviceExtY = function () {\n  return this.ldeviceExtY;\n};\n\nTransform.prototype.setDeviceExtY = function (dey) {\n  this.ldeviceExtY = dey;\n};\n\nTransform.prototype.transformX = function (x) {\n  var xDevice = 0.0;\n  var worldExtX = this.lworldExtX;\n  if (worldExtX != 0.0) {\n    xDevice = this.ldeviceOrgX + (x - this.lworldOrgX) * this.ldeviceExtX / worldExtX;\n  }\n\n  return xDevice;\n};\n\nTransform.prototype.transformY = function (y) {\n  var yDevice = 0.0;\n  var worldExtY = this.lworldExtY;\n  if (worldExtY != 0.0) {\n    yDevice = this.ldeviceOrgY + (y - this.lworldOrgY) * this.ldeviceExtY / worldExtY;\n  }\n\n  return yDevice;\n};\n\nTransform.prototype.inverseTransformX = function (x) {\n  var xWorld = 0.0;\n  var deviceExtX = this.ldeviceExtX;\n  if (deviceExtX != 0.0) {\n    xWorld = this.lworldOrgX + (x - this.ldeviceOrgX) * this.lworldExtX / deviceExtX;\n  }\n\n  return xWorld;\n};\n\nTransform.prototype.inverseTransformY = function (y) {\n  var yWorld = 0.0;\n  var deviceExtY = this.ldeviceExtY;\n  if (deviceExtY != 0.0) {\n    yWorld = this.lworldOrgY + (y - this.ldeviceOrgY) * this.lworldExtY / deviceExtY;\n  }\n  return yWorld;\n};\n\nTransform.prototype.inverseTransformPoint = function (inPoint) {\n  var outPoint = new PointD(this.inverseTransformX(inPoint.x), this.inverseTransformY(inPoint.y));\n  return outPoint;\n};\n\nmodule.exports = Transform;\n\n/***/ }),\n/* 18 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\nvar Layout = __webpack_require__(15);\nvar FDLayoutConstants = __webpack_require__(7);\nvar LayoutConstants = __webpack_require__(0);\nvar IGeometry = __webpack_require__(8);\nvar IMath = __webpack_require__(9);\n\nfunction FDLayout() {\n  Layout.call(this);\n\n  this.useSmartIdealEdgeLengthCalculation = FDLayoutConstants.DEFAULT_USE_SMART_IDEAL_EDGE_LENGTH_CALCULATION;\n  this.idealEdgeLength = FDLayoutConstants.DEFAULT_EDGE_LENGTH;\n  this.springConstant = FDLayoutConstants.DEFAULT_SPRING_STRENGTH;\n  this.repulsionConstant = FDLayoutConstants.DEFAULT_REPULSION_STRENGTH;\n  this.gravityConstant = FDLayoutConstants.DEFAULT_GRAVITY_STRENGTH;\n  this.compoundGravityConstant = FDLayoutConstants.DEFAULT_COMPOUND_GRAVITY_STRENGTH;\n  this.gravityRangeFactor = FDLayoutConstants.DEFAULT_GRAVITY_RANGE_FACTOR;\n  this.compoundGravityRangeFactor = FDLayoutConstants.DEFAULT_COMPOUND_GRAVITY_RANGE_FACTOR;\n  this.displacementThresholdPerNode = 3.0 * FDLayoutConstants.DEFAULT_EDGE_LENGTH / 100;\n  this.coolingFactor = FDLayoutConstants.DEFAULT_COOLING_FACTOR_INCREMENTAL;\n  this.initialCoolingFactor = FDLayoutConstants.DEFAULT_COOLING_FACTOR_INCREMENTAL;\n  this.totalDisplacement = 0.0;\n  this.oldTotalDisplacement = 0.0;\n  this.maxIterations = FDLayoutConstants.MAX_ITERATIONS;\n}\n\nFDLayout.prototype = Object.create(Layout.prototype);\n\nfor (var prop in Layout) {\n  FDLayout[prop] = Layout[prop];\n}\n\nFDLayout.prototype.initParameters = function () {\n  Layout.prototype.initParameters.call(this, arguments);\n\n  this.totalIterations = 0;\n  this.notAnimatedIterations = 0;\n\n  this.useFRGridVariant = FDLayoutConstants.DEFAULT_USE_SMART_REPULSION_RANGE_CALCULATION;\n\n  this.grid = [];\n};\n\nFDLayout.prototype.calcIdealEdgeLengths = function () {\n  var edge;\n  var lcaDepth;\n  var source;\n  var target;\n  var sizeOfSourceInLca;\n  var sizeOfTargetInLca;\n\n  var allEdges = this.getGraphManager().getAllEdges();\n  for (var i = 0; i < allEdges.length; i++) {\n    edge = allEdges[i];\n\n    edge.idealLength = this.idealEdgeLength;\n\n    if (edge.isInterGraph) {\n      source = edge.getSource();\n      target = edge.getTarget();\n\n      sizeOfSourceInLca = edge.getSourceInLca().getEstimatedSize();\n      sizeOfTargetInLca = edge.getTargetInLca().getEstimatedSize();\n\n      if (this.useSmartIdealEdgeLengthCalculation) {\n        edge.idealLength += sizeOfSourceInLca + sizeOfTargetInLca - 2 * LayoutConstants.SIMPLE_NODE_SIZE;\n      }\n\n      lcaDepth = edge.getLca().getInclusionTreeDepth();\n\n      edge.idealLength += FDLayoutConstants.DEFAULT_EDGE_LENGTH * FDLayoutConstants.PER_LEVEL_IDEAL_EDGE_LENGTH_FACTOR * (source.getInclusionTreeDepth() + target.getInclusionTreeDepth() - 2 * lcaDepth);\n    }\n  }\n};\n\nFDLayout.prototype.initSpringEmbedder = function () {\n\n  var s = this.getAllNodes().length;\n  if (this.incremental) {\n    if (s > FDLayoutConstants.ADAPTATION_LOWER_NODE_LIMIT) {\n      this.coolingFactor = Math.max(this.coolingFactor * FDLayoutConstants.COOLING_ADAPTATION_FACTOR, this.coolingFactor - (s - FDLayoutConstants.ADAPTATION_LOWER_NODE_LIMIT) / (FDLayoutConstants.ADAPTATION_UPPER_NODE_LIMIT - FDLayoutConstants.ADAPTATION_LOWER_NODE_LIMIT) * this.coolingFactor * (1 - FDLayoutConstants.COOLING_ADAPTATION_FACTOR));\n    }\n    this.maxNodeDisplacement = FDLayoutConstants.MAX_NODE_DISPLACEMENT_INCREMENTAL;\n  } else {\n    if (s > FDLayoutConstants.ADAPTATION_LOWER_NODE_LIMIT) {\n      this.coolingFactor = Math.max(FDLayoutConstants.COOLING_ADAPTATION_FACTOR, 1.0 - (s - FDLayoutConstants.ADAPTATION_LOWER_NODE_LIMIT) / (FDLayoutConstants.ADAPTATION_UPPER_NODE_LIMIT - FDLayoutConstants.ADAPTATION_LOWER_NODE_LIMIT) * (1 - FDLayoutConstants.COOLING_ADAPTATION_FACTOR));\n    } else {\n      this.coolingFactor = 1.0;\n    }\n    this.initialCoolingFactor = this.coolingFactor;\n    this.maxNodeDisplacement = FDLayoutConstants.MAX_NODE_DISPLACEMENT;\n  }\n\n  this.maxIterations = Math.max(this.getAllNodes().length * 5, this.maxIterations);\n\n  this.totalDisplacementThreshold = this.displacementThresholdPerNode * this.getAllNodes().length;\n\n  this.repulsionRange = this.calcRepulsionRange();\n};\n\nFDLayout.prototype.calcSpringForces = function () {\n  var lEdges = this.getAllEdges();\n  var edge;\n\n  for (var i = 0; i < lEdges.length; i++) {\n    edge = lEdges[i];\n\n    this.calcSpringForce(edge, edge.idealLength);\n  }\n};\n\nFDLayout.prototype.calcRepulsionForces = function () {\n  var gridUpdateAllowed = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n  var forceToNodeSurroundingUpdate = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n  var i, j;\n  var nodeA, nodeB;\n  var lNodes = this.getAllNodes();\n  var processedNodeSet;\n\n  if (this.useFRGridVariant) {\n    if (this.totalIterations % FDLayoutConstants.GRID_CALCULATION_CHECK_PERIOD == 1 && gridUpdateAllowed) {\n      this.updateGrid();\n    }\n\n    processedNodeSet = new Set();\n\n    // calculate repulsion forces between each nodes and its surrounding\n    for (i = 0; i < lNodes.length; i++) {\n      nodeA = lNodes[i];\n      this.calculateRepulsionForceOfANode(nodeA, processedNodeSet, gridUpdateAllowed, forceToNodeSurroundingUpdate);\n      processedNodeSet.add(nodeA);\n    }\n  } else {\n    for (i = 0; i < lNodes.length; i++) {\n      nodeA = lNodes[i];\n\n      for (j = i + 1; j < lNodes.length; j++) {\n        nodeB = lNodes[j];\n\n        // If both nodes are not members of the same graph, skip.\n        if (nodeA.getOwner() != nodeB.getOwner()) {\n          continue;\n        }\n\n        this.calcRepulsionForce(nodeA, nodeB);\n      }\n    }\n  }\n};\n\nFDLayout.prototype.calcGravitationalForces = function () {\n  var node;\n  var lNodes = this.getAllNodesToApplyGravitation();\n\n  for (var i = 0; i < lNodes.length; i++) {\n    node = lNodes[i];\n    this.calcGravitationalForce(node);\n  }\n};\n\nFDLayout.prototype.moveNodes = function () {\n  var lNodes = this.getAllNodes();\n  var node;\n\n  for (var i = 0; i < lNodes.length; i++) {\n    node = lNodes[i];\n    node.move();\n  }\n};\n\nFDLayout.prototype.calcSpringForce = function (edge, idealLength) {\n  var sourceNode = edge.getSource();\n  var targetNode = edge.getTarget();\n\n  var length;\n  var springForce;\n  var springForceX;\n  var springForceY;\n\n  // Update edge length\n  if (this.uniformLeafNodeSizes && sourceNode.getChild() == null && targetNode.getChild() == null) {\n    edge.updateLengthSimple();\n  } else {\n    edge.updateLength();\n\n    if (edge.isOverlapingSourceAndTarget) {\n      return;\n    }\n  }\n\n  length = edge.getLength();\n\n  if (length == 0) return;\n\n  // Calculate spring forces\n  springForce = this.springConstant * (length - idealLength);\n\n  // Project force onto x and y axes\n  springForceX = springForce * (edge.lengthX / length);\n  springForceY = springForce * (edge.lengthY / length);\n\n  // Apply forces on the end nodes\n  sourceNode.springForceX += springForceX;\n  sourceNode.springForceY += springForceY;\n  targetNode.springForceX -= springForceX;\n  targetNode.springForceY -= springForceY;\n};\n\nFDLayout.prototype.calcRepulsionForce = function (nodeA, nodeB) {\n  var rectA = nodeA.getRect();\n  var rectB = nodeB.getRect();\n  var overlapAmount = new Array(2);\n  var clipPoints = new Array(4);\n  var distanceX;\n  var distanceY;\n  var distanceSquared;\n  var distance;\n  var repulsionForce;\n  var repulsionForceX;\n  var repulsionForceY;\n\n  if (rectA.intersects(rectB)) // two nodes overlap\n    {\n      // calculate separation amount in x and y directions\n      IGeometry.calcSeparationAmount(rectA, rectB, overlapAmount, FDLayoutConstants.DEFAULT_EDGE_LENGTH / 2.0);\n\n      repulsionForceX = 2 * overlapAmount[0];\n      repulsionForceY = 2 * overlapAmount[1];\n\n      var childrenConstant = nodeA.noOfChildren * nodeB.noOfChildren / (nodeA.noOfChildren + nodeB.noOfChildren);\n\n      // Apply forces on the two nodes\n      nodeA.repulsionForceX -= childrenConstant * repulsionForceX;\n      nodeA.repulsionForceY -= childrenConstant * repulsionForceY;\n      nodeB.repulsionForceX += childrenConstant * repulsionForceX;\n      nodeB.repulsionForceY += childrenConstant * repulsionForceY;\n    } else // no overlap\n    {\n      // calculate distance\n\n      if (this.uniformLeafNodeSizes && nodeA.getChild() == null && nodeB.getChild() == null) // simply base repulsion on distance of node centers\n        {\n          distanceX = rectB.getCenterX() - rectA.getCenterX();\n          distanceY = rectB.getCenterY() - rectA.getCenterY();\n        } else // use clipping points\n        {\n          IGeometry.getIntersection(rectA, rectB, clipPoints);\n\n          distanceX = clipPoints[2] - clipPoints[0];\n          distanceY = clipPoints[3] - clipPoints[1];\n        }\n\n      // No repulsion range. FR grid variant should take care of this.\n      if (Math.abs(distanceX) < FDLayoutConstants.MIN_REPULSION_DIST) {\n        distanceX = IMath.sign(distanceX) * FDLayoutConstants.MIN_REPULSION_DIST;\n      }\n\n      if (Math.abs(distanceY) < FDLayoutConstants.MIN_REPULSION_DIST) {\n        distanceY = IMath.sign(distanceY) * FDLayoutConstants.MIN_REPULSION_DIST;\n      }\n\n      distanceSquared = distanceX * distanceX + distanceY * distanceY;\n      distance = Math.sqrt(distanceSquared);\n\n      repulsionForce = this.repulsionConstant * nodeA.noOfChildren * nodeB.noOfChildren / distanceSquared;\n\n      // Project force onto x and y axes\n      repulsionForceX = repulsionForce * distanceX / distance;\n      repulsionForceY = repulsionForce * distanceY / distance;\n\n      // Apply forces on the two nodes    \n      nodeA.repulsionForceX -= repulsionForceX;\n      nodeA.repulsionForceY -= repulsionForceY;\n      nodeB.repulsionForceX += repulsionForceX;\n      nodeB.repulsionForceY += repulsionForceY;\n    }\n};\n\nFDLayout.prototype.calcGravitationalForce = function (node) {\n  var ownerGraph;\n  var ownerCenterX;\n  var ownerCenterY;\n  var distanceX;\n  var distanceY;\n  var absDistanceX;\n  var absDistanceY;\n  var estimatedSize;\n  ownerGraph = node.getOwner();\n\n  ownerCenterX = (ownerGraph.getRight() + ownerGraph.getLeft()) / 2;\n  ownerCenterY = (ownerGraph.getTop() + ownerGraph.getBottom()) / 2;\n  distanceX = node.getCenterX() - ownerCenterX;\n  distanceY = node.getCenterY() - ownerCenterY;\n  absDistanceX = Math.abs(distanceX) + node.getWidth() / 2;\n  absDistanceY = Math.abs(distanceY) + node.getHeight() / 2;\n\n  if (node.getOwner() == this.graphManager.getRoot()) // in the root graph\n    {\n      estimatedSize = ownerGraph.getEstimatedSize() * this.gravityRangeFactor;\n\n      if (absDistanceX > estimatedSize || absDistanceY > estimatedSize) {\n        node.gravitationForceX = -this.gravityConstant * distanceX;\n        node.gravitationForceY = -this.gravityConstant * distanceY;\n      }\n    } else // inside a compound\n    {\n      estimatedSize = ownerGraph.getEstimatedSize() * this.compoundGravityRangeFactor;\n\n      if (absDistanceX > estimatedSize || absDistanceY > estimatedSize) {\n        node.gravitationForceX = -this.gravityConstant * distanceX * this.compoundGravityConstant;\n        node.gravitationForceY = -this.gravityConstant * distanceY * this.compoundGravityConstant;\n      }\n    }\n};\n\nFDLayout.prototype.isConverged = function () {\n  var converged;\n  var oscilating = false;\n\n  if (this.totalIterations > this.maxIterations / 3) {\n    oscilating = Math.abs(this.totalDisplacement - this.oldTotalDisplacement) < 2;\n  }\n\n  converged = this.totalDisplacement < this.totalDisplacementThreshold;\n\n  this.oldTotalDisplacement = this.totalDisplacement;\n\n  return converged || oscilating;\n};\n\nFDLayout.prototype.animate = function () {\n  if (this.animationDuringLayout && !this.isSubLayout) {\n    if (this.notAnimatedIterations == this.animationPeriod) {\n      this.update();\n      this.notAnimatedIterations = 0;\n    } else {\n      this.notAnimatedIterations++;\n    }\n  }\n};\n\n//This method calculates the number of children (weight) for all nodes\nFDLayout.prototype.calcNoOfChildrenForAllNodes = function () {\n  var node;\n  var allNodes = this.graphManager.getAllNodes();\n\n  for (var i = 0; i < allNodes.length; i++) {\n    node = allNodes[i];\n    node.noOfChildren = node.getNoOfChildren();\n  }\n};\n\n// -----------------------------------------------------------------------------\n// Section: FR-Grid Variant Repulsion Force Calculation\n// -----------------------------------------------------------------------------\n\nFDLayout.prototype.calcGrid = function (graph) {\n\n  var sizeX = 0;\n  var sizeY = 0;\n\n  sizeX = parseInt(Math.ceil((graph.getRight() - graph.getLeft()) / this.repulsionRange));\n  sizeY = parseInt(Math.ceil((graph.getBottom() - graph.getTop()) / this.repulsionRange));\n\n  var grid = new Array(sizeX);\n\n  for (var i = 0; i < sizeX; i++) {\n    grid[i] = new Array(sizeY);\n  }\n\n  for (var i = 0; i < sizeX; i++) {\n    for (var j = 0; j < sizeY; j++) {\n      grid[i][j] = new Array();\n    }\n  }\n\n  return grid;\n};\n\nFDLayout.prototype.addNodeToGrid = function (v, left, top) {\n\n  var startX = 0;\n  var finishX = 0;\n  var startY = 0;\n  var finishY = 0;\n\n  startX = parseInt(Math.floor((v.getRect().x - left) / this.repulsionRange));\n  finishX = parseInt(Math.floor((v.getRect().width + v.getRect().x - left) / this.repulsionRange));\n  startY = parseInt(Math.floor((v.getRect().y - top) / this.repulsionRange));\n  finishY = parseInt(Math.floor((v.getRect().height + v.getRect().y - top) / this.repulsionRange));\n\n  for (var i = startX; i <= finishX; i++) {\n    for (var j = startY; j <= finishY; j++) {\n      this.grid[i][j].push(v);\n      v.setGridCoordinates(startX, finishX, startY, finishY);\n    }\n  }\n};\n\nFDLayout.prototype.updateGrid = function () {\n  var i;\n  var nodeA;\n  var lNodes = this.getAllNodes();\n\n  this.grid = this.calcGrid(this.graphManager.getRoot());\n\n  // put all nodes to proper grid cells\n  for (i = 0; i < lNodes.length; i++) {\n    nodeA = lNodes[i];\n    this.addNodeToGrid(nodeA, this.graphManager.getRoot().getLeft(), this.graphManager.getRoot().getTop());\n  }\n};\n\nFDLayout.prototype.calculateRepulsionForceOfANode = function (nodeA, processedNodeSet, gridUpdateAllowed, forceToNodeSurroundingUpdate) {\n\n  if (this.totalIterations % FDLayoutConstants.GRID_CALCULATION_CHECK_PERIOD == 1 && gridUpdateAllowed || forceToNodeSurroundingUpdate) {\n    var surrounding = new Set();\n    nodeA.surrounding = new Array();\n    var nodeB;\n    var grid = this.grid;\n\n    for (var i = nodeA.startX - 1; i < nodeA.finishX + 2; i++) {\n      for (var j = nodeA.startY - 1; j < nodeA.finishY + 2; j++) {\n        if (!(i < 0 || j < 0 || i >= grid.length || j >= grid[0].length)) {\n          for (var k = 0; k < grid[i][j].length; k++) {\n            nodeB = grid[i][j][k];\n\n            // If both nodes are not members of the same graph, \n            // or both nodes are the same, skip.\n            if (nodeA.getOwner() != nodeB.getOwner() || nodeA == nodeB) {\n              continue;\n            }\n\n            // check if the repulsion force between\n            // nodeA and nodeB has already been calculated\n            if (!processedNodeSet.has(nodeB) && !surrounding.has(nodeB)) {\n              var distanceX = Math.abs(nodeA.getCenterX() - nodeB.getCenterX()) - (nodeA.getWidth() / 2 + nodeB.getWidth() / 2);\n              var distanceY = Math.abs(nodeA.getCenterY() - nodeB.getCenterY()) - (nodeA.getHeight() / 2 + nodeB.getHeight() / 2);\n\n              // if the distance between nodeA and nodeB \n              // is less then calculation range\n              if (distanceX <= this.repulsionRange && distanceY <= this.repulsionRange) {\n                //then add nodeB to surrounding of nodeA\n                surrounding.add(nodeB);\n              }\n            }\n          }\n        }\n      }\n    }\n\n    nodeA.surrounding = [].concat(_toConsumableArray(surrounding));\n  }\n  for (i = 0; i < nodeA.surrounding.length; i++) {\n    this.calcRepulsionForce(nodeA, nodeA.surrounding[i]);\n  }\n};\n\nFDLayout.prototype.calcRepulsionRange = function () {\n  return 0.0;\n};\n\nmodule.exports = FDLayout;\n\n/***/ }),\n/* 19 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar LEdge = __webpack_require__(1);\nvar FDLayoutConstants = __webpack_require__(7);\n\nfunction FDLayoutEdge(source, target, vEdge) {\n  LEdge.call(this, source, target, vEdge);\n  this.idealLength = FDLayoutConstants.DEFAULT_EDGE_LENGTH;\n}\n\nFDLayoutEdge.prototype = Object.create(LEdge.prototype);\n\nfor (var prop in LEdge) {\n  FDLayoutEdge[prop] = LEdge[prop];\n}\n\nmodule.exports = FDLayoutEdge;\n\n/***/ }),\n/* 20 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar LNode = __webpack_require__(3);\n\nfunction FDLayoutNode(gm, loc, size, vNode) {\n  // alternative constructor is handled inside LNode\n  LNode.call(this, gm, loc, size, vNode);\n  //Spring, repulsion and gravitational forces acting on this node\n  this.springForceX = 0;\n  this.springForceY = 0;\n  this.repulsionForceX = 0;\n  this.repulsionForceY = 0;\n  this.gravitationForceX = 0;\n  this.gravitationForceY = 0;\n  //Amount by which this node is to be moved in this iteration\n  this.displacementX = 0;\n  this.displacementY = 0;\n\n  //Start and finish grid coordinates that this node is fallen into\n  this.startX = 0;\n  this.finishX = 0;\n  this.startY = 0;\n  this.finishY = 0;\n\n  //Geometric neighbors of this node\n  this.surrounding = [];\n}\n\nFDLayoutNode.prototype = Object.create(LNode.prototype);\n\nfor (var prop in LNode) {\n  FDLayoutNode[prop] = LNode[prop];\n}\n\nFDLayoutNode.prototype.setGridCoordinates = function (_startX, _finishX, _startY, _finishY) {\n  this.startX = _startX;\n  this.finishX = _finishX;\n  this.startY = _startY;\n  this.finishY = _finishY;\n};\n\nmodule.exports = FDLayoutNode;\n\n/***/ }),\n/* 21 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nfunction DimensionD(width, height) {\n  this.width = 0;\n  this.height = 0;\n  if (width !== null && height !== null) {\n    this.height = height;\n    this.width = width;\n  }\n}\n\nDimensionD.prototype.getWidth = function () {\n  return this.width;\n};\n\nDimensionD.prototype.setWidth = function (width) {\n  this.width = width;\n};\n\nDimensionD.prototype.getHeight = function () {\n  return this.height;\n};\n\nDimensionD.prototype.setHeight = function (height) {\n  this.height = height;\n};\n\nmodule.exports = DimensionD;\n\n/***/ }),\n/* 22 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar UniqueIDGeneretor = __webpack_require__(14);\n\nfunction HashMap() {\n  this.map = {};\n  this.keys = [];\n}\n\nHashMap.prototype.put = function (key, value) {\n  var theId = UniqueIDGeneretor.createID(key);\n  if (!this.contains(theId)) {\n    this.map[theId] = value;\n    this.keys.push(key);\n  }\n};\n\nHashMap.prototype.contains = function (key) {\n  var theId = UniqueIDGeneretor.createID(key);\n  return this.map[key] != null;\n};\n\nHashMap.prototype.get = function (key) {\n  var theId = UniqueIDGeneretor.createID(key);\n  return this.map[theId];\n};\n\nHashMap.prototype.keySet = function () {\n  return this.keys;\n};\n\nmodule.exports = HashMap;\n\n/***/ }),\n/* 23 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar UniqueIDGeneretor = __webpack_require__(14);\n\nfunction HashSet() {\n  this.set = {};\n}\n;\n\nHashSet.prototype.add = function (obj) {\n  var theId = UniqueIDGeneretor.createID(obj);\n  if (!this.contains(theId)) this.set[theId] = obj;\n};\n\nHashSet.prototype.remove = function (obj) {\n  delete this.set[UniqueIDGeneretor.createID(obj)];\n};\n\nHashSet.prototype.clear = function () {\n  this.set = {};\n};\n\nHashSet.prototype.contains = function (obj) {\n  return this.set[UniqueIDGeneretor.createID(obj)] == obj;\n};\n\nHashSet.prototype.isEmpty = function () {\n  return this.size() === 0;\n};\n\nHashSet.prototype.size = function () {\n  return Object.keys(this.set).length;\n};\n\n//concats this.set to the given list\nHashSet.prototype.addAllTo = function (list) {\n  var keys = Object.keys(this.set);\n  var length = keys.length;\n  for (var i = 0; i < length; i++) {\n    list.push(this.set[keys[i]]);\n  }\n};\n\nHashSet.prototype.size = function () {\n  return Object.keys(this.set).length;\n};\n\nHashSet.prototype.addAll = function (list) {\n  var s = list.length;\n  for (var i = 0; i < s; i++) {\n    var v = list[i];\n    this.add(v);\n  }\n};\n\nmodule.exports = HashSet;\n\n/***/ }),\n/* 24 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * A classic Quicksort algorithm with Hoare's partition\n * - Works also on LinkedList objects\n *\n * Copyright: i-Vis Research Group, Bilkent University, 2007 - present\n */\n\nvar LinkedList = __webpack_require__(11);\n\nvar Quicksort = function () {\n    function Quicksort(A, compareFunction) {\n        _classCallCheck(this, Quicksort);\n\n        if (compareFunction !== null || compareFunction !== undefined) this.compareFunction = this._defaultCompareFunction;\n\n        var length = void 0;\n        if (A instanceof LinkedList) length = A.size();else length = A.length;\n\n        this._quicksort(A, 0, length - 1);\n    }\n\n    _createClass(Quicksort, [{\n        key: '_quicksort',\n        value: function _quicksort(A, p, r) {\n            if (p < r) {\n                var q = this._partition(A, p, r);\n                this._quicksort(A, p, q);\n                this._quicksort(A, q + 1, r);\n            }\n        }\n    }, {\n        key: '_partition',\n        value: function _partition(A, p, r) {\n            var x = this._get(A, p);\n            var i = p;\n            var j = r;\n            while (true) {\n                while (this.compareFunction(x, this._get(A, j))) {\n                    j--;\n                }while (this.compareFunction(this._get(A, i), x)) {\n                    i++;\n                }if (i < j) {\n                    this._swap(A, i, j);\n                    i++;\n                    j--;\n                } else return j;\n            }\n        }\n    }, {\n        key: '_get',\n        value: function _get(object, index) {\n            if (object instanceof LinkedList) return object.get_object_at(index);else return object[index];\n        }\n    }, {\n        key: '_set',\n        value: function _set(object, index, value) {\n            if (object instanceof LinkedList) object.set_object_at(index, value);else object[index] = value;\n        }\n    }, {\n        key: '_swap',\n        value: function _swap(A, i, j) {\n            var temp = this._get(A, i);\n            this._set(A, i, this._get(A, j));\n            this._set(A, j, temp);\n        }\n    }, {\n        key: '_defaultCompareFunction',\n        value: function _defaultCompareFunction(a, b) {\n            return b > a;\n        }\n    }]);\n\n    return Quicksort;\n}();\n\nmodule.exports = Quicksort;\n\n/***/ }),\n/* 25 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n *   Needleman-Wunsch algorithm is an procedure to compute the optimal global alignment of two string\n *   sequences by S.B.Needleman and C.D.Wunsch (1970).\n *\n *   Aside from the inputs, you can assign the scores for,\n *   - Match: The two characters at the current index are same.\n *   - Mismatch: The two characters at the current index are different.\n *   - Insertion/Deletion(gaps): The best alignment involves one letter aligning to a gap in the other string.\n */\n\nvar NeedlemanWunsch = function () {\n    function NeedlemanWunsch(sequence1, sequence2) {\n        var match_score = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n        var mismatch_penalty = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : -1;\n        var gap_penalty = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : -1;\n\n        _classCallCheck(this, NeedlemanWunsch);\n\n        this.sequence1 = sequence1;\n        this.sequence2 = sequence2;\n        this.match_score = match_score;\n        this.mismatch_penalty = mismatch_penalty;\n        this.gap_penalty = gap_penalty;\n\n        // Just the remove redundancy\n        this.iMax = sequence1.length + 1;\n        this.jMax = sequence2.length + 1;\n\n        // Grid matrix of scores\n        this.grid = new Array(this.iMax);\n        for (var i = 0; i < this.iMax; i++) {\n            this.grid[i] = new Array(this.jMax);\n\n            for (var j = 0; j < this.jMax; j++) {\n                this.grid[i][j] = 0;\n            }\n        }\n\n        // Traceback matrix (2D array, each cell is an array of boolean values for [`Diag`, `Up`, `Left`] positions)\n        this.tracebackGrid = new Array(this.iMax);\n        for (var _i = 0; _i < this.iMax; _i++) {\n            this.tracebackGrid[_i] = new Array(this.jMax);\n\n            for (var _j = 0; _j < this.jMax; _j++) {\n                this.tracebackGrid[_i][_j] = [null, null, null];\n            }\n        }\n\n        // The aligned sequences (return multiple possibilities)\n        this.alignments = [];\n\n        // Final alignment score\n        this.score = -1;\n\n        // Calculate scores and tracebacks\n        this.computeGrids();\n    }\n\n    _createClass(NeedlemanWunsch, [{\n        key: \"getScore\",\n        value: function getScore() {\n            return this.score;\n        }\n    }, {\n        key: \"getAlignments\",\n        value: function getAlignments() {\n            return this.alignments;\n        }\n\n        // Main dynamic programming procedure\n\n    }, {\n        key: \"computeGrids\",\n        value: function computeGrids() {\n            // Fill in the first row\n            for (var j = 1; j < this.jMax; j++) {\n                this.grid[0][j] = this.grid[0][j - 1] + this.gap_penalty;\n                this.tracebackGrid[0][j] = [false, false, true];\n            }\n\n            // Fill in the first column\n            for (var i = 1; i < this.iMax; i++) {\n                this.grid[i][0] = this.grid[i - 1][0] + this.gap_penalty;\n                this.tracebackGrid[i][0] = [false, true, false];\n            }\n\n            // Fill the rest of the grid\n            for (var _i2 = 1; _i2 < this.iMax; _i2++) {\n                for (var _j2 = 1; _j2 < this.jMax; _j2++) {\n                    // Find the max score(s) among [`Diag`, `Up`, `Left`]\n                    var diag = void 0;\n                    if (this.sequence1[_i2 - 1] === this.sequence2[_j2 - 1]) diag = this.grid[_i2 - 1][_j2 - 1] + this.match_score;else diag = this.grid[_i2 - 1][_j2 - 1] + this.mismatch_penalty;\n\n                    var up = this.grid[_i2 - 1][_j2] + this.gap_penalty;\n                    var left = this.grid[_i2][_j2 - 1] + this.gap_penalty;\n\n                    // If there exists multiple max values, capture them for multiple paths\n                    var maxOf = [diag, up, left];\n                    var indices = this.arrayAllMaxIndexes(maxOf);\n\n                    // Update Grids\n                    this.grid[_i2][_j2] = maxOf[indices[0]];\n                    this.tracebackGrid[_i2][_j2] = [indices.includes(0), indices.includes(1), indices.includes(2)];\n                }\n            }\n\n            // Update alignment score\n            this.score = this.grid[this.iMax - 1][this.jMax - 1];\n        }\n\n        // Gets all possible valid sequence combinations\n\n    }, {\n        key: \"alignmentTraceback\",\n        value: function alignmentTraceback() {\n            var inProcessAlignments = [];\n\n            inProcessAlignments.push({ pos: [this.sequence1.length, this.sequence2.length],\n                seq1: \"\",\n                seq2: \"\"\n            });\n\n            while (inProcessAlignments[0]) {\n                var current = inProcessAlignments[0];\n                var directions = this.tracebackGrid[current.pos[0]][current.pos[1]];\n\n                if (directions[0]) {\n                    inProcessAlignments.push({ pos: [current.pos[0] - 1, current.pos[1] - 1],\n                        seq1: this.sequence1[current.pos[0] - 1] + current.seq1,\n                        seq2: this.sequence2[current.pos[1] - 1] + current.seq2\n                    });\n                }\n                if (directions[1]) {\n                    inProcessAlignments.push({ pos: [current.pos[0] - 1, current.pos[1]],\n                        seq1: this.sequence1[current.pos[0] - 1] + current.seq1,\n                        seq2: '-' + current.seq2\n                    });\n                }\n                if (directions[2]) {\n                    inProcessAlignments.push({ pos: [current.pos[0], current.pos[1] - 1],\n                        seq1: '-' + current.seq1,\n                        seq2: this.sequence2[current.pos[1] - 1] + current.seq2\n                    });\n                }\n\n                if (current.pos[0] === 0 && current.pos[1] === 0) this.alignments.push({ sequence1: current.seq1,\n                    sequence2: current.seq2\n                });\n\n                inProcessAlignments.shift();\n            }\n\n            return this.alignments;\n        }\n\n        // Helper Functions\n\n    }, {\n        key: \"getAllIndexes\",\n        value: function getAllIndexes(arr, val) {\n            var indexes = [],\n                i = -1;\n            while ((i = arr.indexOf(val, i + 1)) !== -1) {\n                indexes.push(i);\n            }\n            return indexes;\n        }\n    }, {\n        key: \"arrayAllMaxIndexes\",\n        value: function arrayAllMaxIndexes(array) {\n            return this.getAllIndexes(array, Math.max.apply(null, array));\n        }\n    }]);\n\n    return NeedlemanWunsch;\n}();\n\nmodule.exports = NeedlemanWunsch;\n\n/***/ }),\n/* 26 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar layoutBase = function layoutBase() {\n  return;\n};\n\nlayoutBase.FDLayout = __webpack_require__(18);\nlayoutBase.FDLayoutConstants = __webpack_require__(7);\nlayoutBase.FDLayoutEdge = __webpack_require__(19);\nlayoutBase.FDLayoutNode = __webpack_require__(20);\nlayoutBase.DimensionD = __webpack_require__(21);\nlayoutBase.HashMap = __webpack_require__(22);\nlayoutBase.HashSet = __webpack_require__(23);\nlayoutBase.IGeometry = __webpack_require__(8);\nlayoutBase.IMath = __webpack_require__(9);\nlayoutBase.Integer = __webpack_require__(10);\nlayoutBase.Point = __webpack_require__(12);\nlayoutBase.PointD = __webpack_require__(4);\nlayoutBase.RandomSeed = __webpack_require__(16);\nlayoutBase.RectangleD = __webpack_require__(13);\nlayoutBase.Transform = __webpack_require__(17);\nlayoutBase.UniqueIDGeneretor = __webpack_require__(14);\nlayoutBase.Quicksort = __webpack_require__(24);\nlayoutBase.LinkedList = __webpack_require__(11);\nlayoutBase.LGraphObject = __webpack_require__(2);\nlayoutBase.LGraph = __webpack_require__(5);\nlayoutBase.LEdge = __webpack_require__(1);\nlayoutBase.LGraphManager = __webpack_require__(6);\nlayoutBase.LNode = __webpack_require__(3);\nlayoutBase.Layout = __webpack_require__(15);\nlayoutBase.LayoutConstants = __webpack_require__(0);\nlayoutBase.NeedlemanWunsch = __webpack_require__(25);\n\nmodule.exports = layoutBase;\n\n/***/ }),\n/* 27 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nfunction Emitter() {\n  this.listeners = [];\n}\n\nvar p = Emitter.prototype;\n\np.addListener = function (event, callback) {\n  this.listeners.push({\n    event: event,\n    callback: callback\n  });\n};\n\np.removeListener = function (event, callback) {\n  for (var i = this.listeners.length; i >= 0; i--) {\n    var l = this.listeners[i];\n\n    if (l.event === event && l.callback === callback) {\n      this.listeners.splice(i, 1);\n    }\n  }\n};\n\np.emit = function (event, data) {\n  for (var i = 0; i < this.listeners.length; i++) {\n    var l = this.listeners[i];\n\n    if (event === l.event) {\n      l.callback(data);\n    }\n  }\n};\n\nmodule.exports = Emitter;\n\n/***/ })\n/******/ ]);\n});"],"names":["factory","__WEBPACK_EXTERNAL_MODULE_0__","modules","installedModules","__webpack_require__","moduleId","exports","module","i","l","call","m","c","value","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","LayoutConstants","layoutBase","FDLayoutConstants","CoSEConstants","CoSELayout","CoSENode","PointD","DimensionD","defaults","ready","stop","quality","nodeDimensionsIncludeLabels","refresh","fit","padding","randomize","nodeRepulsion","idealEdgeLength","edgeElasticity","nestingFactor","gravity","numIter","tile","animate","animationDuration","tilingPaddingVertical","tilingPaddingHorizontal","gravityRangeCompound","gravityCompound","gravityRange","initialEnergyOnIncremental","_CoSELayout","_options","this","options","obj","extend","getUserOptions","DEFAULT_REPULSION_STRENGTH","DEFAULT_EDGE_LENGTH","DEFAULT_SPRING_STRENGTH","PER_LEVEL_IDEAL_EDGE_LENGTH_FACTOR","DEFAULT_GRAVITY_STRENGTH","MAX_ITERATIONS","DEFAULT_GRAVITY_RANGE_FACTOR","DEFAULT_COMPOUND_GRAVITY_STRENGTH","DEFAULT_COMPOUND_GRAVITY_RANGE_FACTOR","DEFAULT_COOLING_FACTOR_INCREMENTAL","QUALITY","NODE_DIMENSIONS_INCLUDE_LABELS","DEFAULT_INCREMENTAL","ANIMATE","TILE","TILING_PADDING_VERTICAL","TILING_PADDING_HORIZONTAL","run","frameId","layout","idToLNode","self","stopped","cy","trigger","type","gm","newGraphManager","nodes","eles","edges","root","addRoot","processChildrenList","getTopMostNodes","length","edge","sourceNode","data","targetNode","getEdgesBetween","add","newEdge","id","getPositions","ele","theId","lNode","x","getRect","getCenterX","y","getCenterY","iterateAnimated","isDone","afterReposition","one","ticksPerFrame","tick","checkLayoutSuccess","isSubLayout","doPostLayout","tilingPostLayout","isLayoutFinished","positions","cancelAnimationFrame","animationData","getPositionsData","isParent","pNode","temp","undefined","parent","position","requestAnimationFrame","addListener","runLayout","not","layoutPositions","nodesMap","roots","filter","children","size","theNode","theNewGraph","theChild","children_of_children","dimensions","layoutDimensions","outerWidth","outerHeight","graphManager","w","h","parseFloat","paddingLeft","parseInt","css","paddingTop","paddingRight","paddingBottom","labelWidth","boundingBox","includeLabels","includeNodes","labelHeight","labelPos","isNaN","rect","getGraphManager","newGraph","register","cytoscape","require","addNodes","forEach","node","_node$padding","_node$x","_node$y","nodeData","labelText","label","height","width","keys","key","includes","group","addEdges","edgeData","source","start","target","end","createCytoscapeInstance","Promise","resolve","renderEl","select","append","attr","container","document","getElementById","style","selector","remove","styleEnabled","e","log","info","extractPositionedNodes","map","positionedNode","extractPositionedEdges","rscratch","_private","positionedEdge","startX","startY","midX","midY","endX","endY","async","executeCoseBilkentLayout","_config","debug","validateLayoutData","positionedNodes","positionedEdges","concat","error","Error","config","rootNode","Array","isArray","use","coseBilkent","__name","render2","data4Layout","svg","_ref","_ref2","insertCluster","insertEdge","insertEdgeLabel","insertMarkers","insertNode","log2","positionEdgeLabel","algorithm","_algorithm","nodeDb","clusterDb","element","markers","diagramId","subGraphsEl","insert","edgePaths","edgeLabels","all","isGroup","clusterNode","_objectSpread","nodeWithPosition","nodeEl","dir","direction","getBBox","domId","updatedLayoutData","nodeWithDimensions","layoutResult","find","points","_edge$start","_edge$end","startNode","endNode","edgeWithPath","paths","prop","DEFAULT_USE_MULTI_LEVEL_SCALING","DEFAULT_RADIAL_SEPARATION","DEFAULT_COMPONENT_SEPERATION","TREE_REDUCTION_ON_INCREMENTAL","FDLayoutEdge","CoSEEdge","vEdge","create","LGraph","CoSEGraph","graphMgr","vGraph","LGraphManager","CoSEGraphManager","FDLayoutNode","IMath","loc","vNode","move","getLayout","displacementX","coolingFactor","springForceX","repulsionForceX","gravitationForceX","noOfChildren","displacementY","springForceY","repulsionForceY","gravitationForceY","Math","abs","maxNodeDisplacement","sign","child","getNodes","moveBy","propogateDisplacementToChildren","totalDisplacement","dX","dY","getChild","setPred1","pred1","getPred1","getPred2","pred2","setNext","next","getNext","setProcessed","processed","isProcessed","FDLayout","Point","Layout","Integer","IGeometry","Transform","toBeTiled","newNode","initParameters","arguments","useSmartIdealEdgeLengthCalculation","DEFAULT_USE_SMART_IDEAL_EDGE_LENGTH_CALCULATION","springConstant","repulsionConstant","gravityConstant","compoundGravityConstant","gravityRangeFactor","compoundGravityRangeFactor","prunedNodesAll","growTreeIterations","afterGrowthIterations","isTreeGrowing","isGrowthFinished","coolingCycle","maxCoolingCycle","maxIterations","CONVERGENCE_CHECK_PERIOD","finalTemperature","coolingAdjuster","DEFAULT_CREATE_BENDS_AS_NEEDED","createBendpoints","resetAllEdges","level","classicLayout","nodesWithGravity","calculateNodesToApplyGravitationTo","setAllNodesToApplyGravitation","calcNoOfChildrenForAllNodes","calcLowestCommonAncestors","calcInclusionTreeDepths","getRoot","calcEstimatedSize","calcIdealEdgeLengths","incremental","reduceTrees","resetAllNodesToApplyGravitation","allNodes","Set","getAllNodes","intersection","has","forest","getFlatForest","positionNodesRadially","positionNodesRandomly","initSpringEmbedder","runSpringEmbedder","totalIterations","isConverged","layoutQuality","max","initialCoolingFactor","pow","animationPeriod","ceil","initialAnimationPeriod","sqrt","updateBounds","updateGrid","growTree","gridUpdateAllowed","forceToNodeSurroundingUpdate","calcSpringForces","calcRepulsionForces","calcGravitationalForces","moveNodes","pData","layoutEnded","emit","graph","nodeList","graphs","getGraphs","updateConnected","isConnected","getAllEdges","visited","getSource","getTarget","getBendpoints","push","createDummyNodesForBendpoints","edgeList","getEdgeListToNode","k","multiEdge","currentStartingPoint","numberOfColumns","currentY","currentX","point","tree","centerNode","findCenterOfTree","radialLayout","floor","transform","WORLD_CENTER_X","WORLD_CENTER_Y","startingPoint","radialSep","maxDiagonalInTree","branchRadialLayout","bounds","calculateBounds","setDeviceOrgX","getMinX","setDeviceOrgY","getMinY","setWorldOrgX","setWorldOrgY","bottomRight","getMaxX","getMaxY","inverseTransformPoint","parentOfNode","startAngle","endAngle","distance","radialSeparation","halfInterval","teta","TWO_PI","x_","cos","y_","sin","setCenter","neighborEdges","childCount","getEdges","startIndex","branchCount","incEdgesCount","splice","index","indexOf","stepAngle","currentNeighbor","getOtherEnd","childStartAngle","childEndAngle","maxDiagonal","MIN_VALUE","diagonal","getDiagonal","calcRepulsionRange","groupZeroDegreeMembers","tempMemberGroups","memberGroups","idToDummyNode","zeroDegree","getParent","getNodeDegreeWithChildren","getToBeTiled","p_id","dummyCompoundId","dummyCompound","dummyParentGraph","parentGraph","clearCompounds","childGraphMap","idToNode","performDFSOnCompounds","compoundOrder","resetAllNodes","tileCompoundMembers","clearZeroDegreeMembers","tiledZeroDegreePack","compoundNode","tileNodes","repopulateCompounds","lCompoundNode","horizontalMargin","verticalMargin","adjustLocations","tiledMemberPack","repopulateZeroDegreeMembers","tiledPack","childGraph","getNodeDegree","degree","fillCompexOrderByDFS","organization","compoundHorizontalMargin","compoundVerticalMargin","left","rows","row","maxHeight","j","lnode","horizontalPadding","verticalPadding","minWidth","rowWidth","rowHeight","sort","n1","n2","insertNodeToRow","canAddHorizontal","getShortestRowIndex","shiftToLastRow","rowIndex","minCompoundSize","extraHeight","r","min","Number","MAX_VALUE","getLongestRowIndex","extraWidth","sri","add_to_row_ratio","add_new_row_ratio","hDiff","longest","last","diff","instance","prevTotal","finalTotal","tilingPreLayout","containsLeaf","prunedNodesInStepTemp","isInterGraph","getOwner","prunedNodesInStep","findPlaceforPrunedNode","gridForPrunedNode","nodeToConnect","prunedNode","startGridX","finishGridX","finishX","startGridY","finishGridY","finishY","controlRegions","grid","minCount","minIndex","random","getHeight","getWidth","coseBase","DEFAULT_ANIMATION_ON_LAYOUT","DEFAULT_ANIMATION_DURING_LAYOUT","DEFAULT_ANIMATION_PERIOD","DEFAULT_UNIFORM_LEAF_NODE_SIZES","DEFAULT_GRAPH_MARGIN","SIMPLE_NODE_SIZE","SIMPLE_NODE_HALF_SIZE","EMPTY_COMPOUND_NODE_SIZE","MIN_EDGE_LENGTH","WORLD_BOUNDARY","INITIAL_WORLD_BOUNDARY","LGraphObject","LEdge","isOverlapingSourceAndTarget","vGraphObject","bendpoints","getLength","getLca","lca","getSourceInLca","sourceInLca","getTargetInLca","targetInLca","getOtherEndInGraph","otherEnd","updateLength","clipPointCoordinates","getIntersection","lengthX","lengthY","updateLengthSimple","RectangleD","RandomSeed","LNode","estimatedSize","inclusionTreeDepth","owner","setWidth","setHeight","getCenter","getLocation","getHalfTheDiagonal","setRect","upperLeft","dimension","cx","setLocation","dx","dy","to","other","getNeighborsList","neighbors","withChildren","withNeighborsList","getNoOfChildren","getEstimatedSize","scatter","randomCenterX","randomCenterY","minX","maxX","nextDouble","minY","maxY","getLeft","getTop","getRight","getBottom","getInclusionTreeDepth","trans","top","leftTop","vLeftTop","getX","getY","setX","setY","getDifference","pt","getCopy","translate","dim","LinkedList","obj2","margin","right","bottom","obj1","edgesToBeRemoved","slice","sourceIndex","targetIndex","updateLeftTop","nodeTop","nodeLeft","recursive","nodeRight","nodeBottom","boundingRect","queue","currentNode","shift","noOfVisitedInThisGraph","visitedNode","ngraph","nnode","setRootGraph","rootGraph","parentNode","sourceGraph","targetGraph","lObj","nodesToBeRemoved","allEdges","allNodesToApplyGravitation","getAllNodesToApplyGravitation","isOneAncestorOfOther","firstNode","secondNode","ownerGraph","sourceAncestorGraph","targetAncestorGraph","calcLowestCommonAncestor","firstOwnerGraph","secondOwnerGraph","depth","includesInvalidEdge","DEFAULT_USE_SMART_REPULSION_RANGE_CALCULATION","COOLING_ADAPTATION_FACTOR","ADAPTATION_LOWER_NODE_LIMIT","ADAPTATION_UPPER_NODE_LIMIT","MAX_NODE_DISPLACEMENT_INCREMENTAL","MAX_NODE_DISPLACEMENT","MIN_REPULSION_DIST","GRID_CALCULATION_CHECK_PERIOD","calcSeparationAmount","rectA","rectB","overlapAmount","separationBuffer","intersects","directions","decideDirectionsForOverlappingNodes","slope","moveByY","moveByX","getIntersection2","result","p1x","p1y","p2x","p2y","topLeftAx","topLeftAy","topRightAx","bottomLeftAx","bottomLeftAy","bottomRightAx","halfWidthA","getWidthHalf","halfHeightA","getHeightHalf","topLeftBx","topLeftBy","topRightBx","bottomLeftBx","bottomLeftBy","bottomRightBx","halfWidthB","halfHeightB","clipPointAFound","clipPointBFound","slopeA","slopeB","slopePrime","cardinalDirectionA","cardinalDirectionB","tempPointAx","tempPointAy","tempPointBx","tempPointBy","getCardinalDirection","line","s1","s2","f1","f2","a1","a2","b1","b2","c1","c2","denom","x1","y1","x2","y2","x3","y3","x4","y4","angleOfVector","Cx","Cy","Nx","Ny","C_angle","atan","PI","ONE_AND_HALF_PI","HALF_PI","doIntersect","p1","p2","p3","p4","a","b","q","det","lambda","gamma","THREE_PI","_createClass","defineProperties","props","descriptor","writable","Constructor","protoProps","staticProps","nodeFrom","prev","list","head","tail","_remove","vals","_this","TypeError","_classCallCheck","v","val","otherNode","current","constructor","equals","toString","_typeof","Symbol","iterator","UniqueIDGeneretor","lastID","createID","isPrimitive","uniqueID","getString","arg","_toConsumableArray","arr","arr2","from","Emitter","isRemoteUse","createBendsAsNeeded","animationOnLayout","animationDuringLayout","uniformLeafNodeSizes","edgeToDummyNodes","Map","RANDOM_SEED","isLayoutSuccessfull","update","update2","createBendpointsFromDummyNodes","newLeftTop","flatForest","isForest","isFlat","toBeVisited","parents","unProcessedNodes","set","dummyNodes","dummyNode","Dimension","dummyEdge","lEdge","path","ebp","sliderValue","defaultValue","minDiv","maxMul","removedNodes","remainingDegrees","foundCenter","tempList","tempList2","neighbour","newDegree","setGraphManager","seed","lworldOrgX","lworldOrgY","ldeviceOrgX","ldeviceOrgY","lworldExtX","lworldExtY","ldeviceExtX","ldeviceExtY","getWorldOrgX","wox","getWorldOrgY","woy","getWorldExtX","setWorldExtX","wex","getWorldExtY","setWorldExtY","wey","getDeviceOrgX","dox","getDeviceOrgY","doy","getDeviceExtX","setDeviceExtX","dex","getDeviceExtY","setDeviceExtY","dey","transformX","xDevice","worldExtX","transformY","yDevice","worldExtY","inverseTransformX","xWorld","deviceExtX","inverseTransformY","yWorld","deviceExtY","inPoint","displacementThresholdPerNode","oldTotalDisplacement","notAnimatedIterations","useFRGridVariant","lcaDepth","sizeOfSourceInLca","sizeOfTargetInLca","idealLength","totalDisplacementThreshold","repulsionRange","lEdges","calcSpringForce","nodeA","nodeB","processedNodeSet","lNodes","calculateRepulsionForceOfANode","calcRepulsionForce","calcGravitationalForce","springForce","distanceX","distanceY","distanceSquared","repulsionForce","clipPoints","childrenConstant","ownerCenterX","ownerCenterY","absDistanceX","absDistanceY","converged","oscilating","calcGrid","sizeX","sizeY","addNodeToGrid","setGridCoordinates","surrounding","_startX","_finishX","_startY","_finishY","HashMap","put","contains","keySet","HashSet","clear","isEmpty","addAllTo","addAll","Quicksort","A","compareFunction","_defaultCompareFunction","_quicksort","_partition","_get","_swap","get_object_at","set_object_at","_set","NeedlemanWunsch","sequence1","sequence2","match_score","mismatch_penalty","gap_penalty","iMax","jMax","tracebackGrid","_i","_j","alignments","score","computeGrids","_i2","_j2","maxOf","indices","arrayAllMaxIndexes","inProcessAlignments","pos","seq1","seq2","indexes","array","getAllIndexes","apply","listeners","event","callback","removeListener"],"sourceRoot":""}