"use strict";(self.webpackChunkfoerderfunke_react_app=self.webpackChunkfoerderfunke_react_app||[]).push([[516],{7274:(e,t,a)=>{function l(e,t){var a,l,n;e.accDescr&&(null===(a=t.setAccDescription)||void 0===a||a.call(t,e.accDescr));e.accTitle&&(null===(l=t.setAccTitle)||void 0===l||l.call(t,e.accTitle));e.title&&(null===(n=t.setDiagramTitle)||void 0===n||n.call(t,e.title))}a.d(t,{S:()=>l}),(0,a(32748).K2)(l,"populateCommonDb")},84273:(e,t,a)=>{a.d(t,{P:()=>s});var l=a(19263),n=a(32748),s=(0,n.K2)((e,t,a,s)=>{e.attr("class",a);const{width:c,height:i,x:d,y:p}=r(e,t);(0,l.a$)(e,i,c,s);const h=o(d,p,c,i,t);e.attr("viewBox",h),n.Rm.debug("viewBox configured: ".concat(h," with padding: ").concat(t))},"setupViewPortForSVG"),r=(0,n.K2)((e,t)=>{var a;const l=(null===(a=e.node())||void 0===a?void 0:a.getBBox())||{width:0,height:0,x:0,y:0};return{width:l.width+2*t,height:l.height+2*t,x:l.x,y:l.y}},"calculateDimensionsWithPadding"),o=(0,n.K2)((e,t,a,l,n)=>"".concat(e-n," ").concat(t-n," ").concat(a," ").concat(l),"createViewBox")},86516:(e,t,a)=>{a.d(t,{diagram:()=>w});var l,n=a(89379),s=a(65099),r=a(84273),o=a(42274),c=a(7274),i=a(88887),d=a(19263),p=a(32748),h=a(55502),u=a(86287),m=(l=class{constructor(){this.nodes=[],this.levels=new Map,this.outerNodes=[],this.classes=new Map,this.setAccTitle=d.SV,this.getAccTitle=d.iN,this.setDiagramTitle=d.ke,this.getDiagramTitle=d.ab,this.getAccDescription=d.m7,this.setAccDescription=d.EI}getNodes(){return this.nodes}getConfig(){var e;const t=d.UI,a=(0,d.zj)();return(0,i.$t)((0,n.A)((0,n.A)({},t.treemap),null!==(e=a.treemap)&&void 0!==e?e:{}))}addNode(e,t){var a;(this.nodes.push(e),this.levels.set(e,t),0===t)&&(this.outerNodes.push(e),null!==(a=this.root)&&void 0!==a||(this.root=e))}getRoot(){return{name:"",children:this.outerNodes}}addClass(e,t){var a;const l=null!==(a=this.classes.get(e))&&void 0!==a?a:{id:e,styles:[],textStyles:[]},n=t.replace(/\\,/g,"\xa7\xa7\xa7").replace(/,/g,";").replace(/\xa7\xa7\xa7/g,",").split(";");n&&n.forEach(e=>{(0,o.KX)(e)&&(null!==l&&void 0!==l&&l.textStyles?l.textStyles.push(e):l.textStyles=[e]),null!==l&&void 0!==l&&l.styles?l.styles.push(e):l.styles=[e]}),this.classes.set(e,l)}getClasses(){return this.classes}getStylesForClass(e){var t,a;return null!==(t=null===(a=this.classes.get(e))||void 0===a?void 0:a.styles)&&void 0!==t?t:[]}clear(){(0,d.IU)(),this.nodes=[],this.levels=new Map,this.outerNodes=[],this.classes=new Map,this.root=void 0}},(0,p.K2)(l,"TreeMapDB"),l);function y(e){if(!e.length)return[];const t=[],a=[];return e.forEach(e=>{const l={name:e.name,children:"Leaf"===e.type?void 0:[]};for(l.classSelector=null===e||void 0===e?void 0:e.classSelector,null!==e&&void 0!==e&&e.cssCompiledStyles&&(l.cssCompiledStyles=[e.cssCompiledStyles]),"Leaf"===e.type&&void 0!==e.value&&(l.value=e.value);a.length>0&&a[a.length-1].level>=e.level;)a.pop();if(0===a.length)t.push(l);else{const e=a[a.length-1].node;e.children?e.children.push(l):e.children=[l]}"Leaf"!==e.type&&a.push({node:l,level:e.level})}),t}(0,p.K2)(y,"buildHierarchy");var f=(0,p.K2)((e,t)=>{(0,c.S)(e,t);const a=[];for(const c of null!==(l=e.TreemapRows)&&void 0!==l?l:[]){var l,n,s;if("ClassDefStatement"===c.$type)t.addClass(null!==(n=c.className)&&void 0!==n?n:"",null!==(s=c.styleText)&&void 0!==s?s:"")}for(const c of null!==(r=e.TreemapRows)&&void 0!==r?r:[]){var r;const e=c.item;if(!e)continue;const l=c.indent?parseInt(c.indent):0,n=S(e),s=e.classSelector?t.getStylesForClass(e.classSelector):[],o=s.length>0?s.join(";"):void 0,i={level:l,name:n,type:e.$type,value:e.value,classSelector:e.classSelector,cssCompiledStyles:o};a.push(i)}const o=y(a),i=(0,p.K2)((e,a)=>{for(const l of e)t.addNode(l,a),l.children&&l.children.length>0&&i(l.children,a+1)},"addNodesRecursively");i(o,0)},"populate"),S=(0,p.K2)(e=>e.name?String(e.name):"","getItemName"),g={parser:{yy:void 0},parse:(0,p.K2)(async e=>{try{var t;const a=h.qg,l=await a("treemap",e);p.Rm.debug("Treemap AST:",l);const n=null===(t=g.parser)||void 0===t?void 0:t.yy;if(!(n instanceof m))throw new Error("parser.parser?.yy was not a TreemapDB. This is due to a bug within Mermaid, please report this issue at https://github.com/mermaid-js/mermaid/issues.");f(l,n)}catch(a){throw p.Rm.error("Error parsing treemap:",a),a}},"parse")},v=10,x={draw:(0,p.K2)((e,t,a,l)=>{var n,c;const i=l.db,h=i.getConfig(),m=null!==(n=h.padding)&&void 0!==n?n:10,y=i.getDiagramTitle(),f=i.getRoot(),{themeVariables:S}=(0,d.zj)();if(!f)return;const g=y?30:0,x=(0,s.D)(t),b=h.nodeWidth?h.nodeWidth*v:960,C=h.nodeHeight?h.nodeHeight*v:500,w=b,k=C+g;let L;x.attr("viewBox","0 0 ".concat(w," ").concat(k)),(0,d.a$)(x,k,w,h.useMaxWidth);try{const e=h.valueFormat||",";if("$0,0"===e)L=(0,p.K2)(e=>"$"+(0,u.GPZ)(",")(e),"valueFormat");else if(e.startsWith("$")&&e.includes(",")){const t=/\.\d+/.exec(e),a=t?t[0]:"";L=(0,p.K2)(e=>"$"+(0,u.GPZ)(","+a)(e),"valueFormat")}else if(e.startsWith("$")){const t=e.substring(1);L=(0,p.K2)(e=>"$"+(0,u.GPZ)(t||"")(e),"valueFormat")}else L=(0,u.GPZ)(e)}catch(V){p.Rm.error("Error creating format function:",V),L=(0,u.GPZ)(",")}const T=(0,u.UMr)().range(["transparent",S.cScale0,S.cScale1,S.cScale2,S.cScale3,S.cScale4,S.cScale5,S.cScale6,S.cScale7,S.cScale8,S.cScale9,S.cScale10,S.cScale11]),M=(0,u.UMr)().range(["transparent",S.cScalePeer0,S.cScalePeer1,S.cScalePeer2,S.cScalePeer3,S.cScalePeer4,S.cScalePeer5,S.cScalePeer6,S.cScalePeer7,S.cScalePeer8,S.cScalePeer9,S.cScalePeer10,S.cScalePeer11]),P=(0,u.UMr)().range([S.cScaleLabel0,S.cScaleLabel1,S.cScaleLabel2,S.cScaleLabel3,S.cScaleLabel4,S.cScaleLabel5,S.cScaleLabel6,S.cScaleLabel7,S.cScaleLabel8,S.cScaleLabel9,S.cScaleLabel10,S.cScaleLabel11]);y&&x.append("text").attr("x",w/2).attr("y",g/2).attr("class","treemapTitle").attr("text-anchor","middle").attr("dominant-baseline","middle").text(y);const z=x.append("g").attr("transform","translate(0, ".concat(g,")")).attr("class","treemapContainer"),F=(0,u.Sk5)(f).sum(e=>{var t;return null!==(t=e.value)&&void 0!==t?t:0}).sort((e,t)=>{var a,l;return(null!==(a=t.value)&&void 0!==a?a:0)-(null!==(l=e.value)&&void 0!==l?l:0)}),K=(0,u.hkb)().size([b,C]).paddingTop(e=>e.children&&e.children.length>0?35:0).paddingInner(m).paddingLeft(e=>e.children&&e.children.length>0?v:0).paddingRight(e=>e.children&&e.children.length>0?v:0).paddingBottom(e=>e.children&&e.children.length>0?v:0).round(!0)(F),D=K.descendants().filter(e=>e.children&&e.children.length>0),N=z.selectAll(".treemapSection").data(D).enter().append("g").attr("class","treemapSection").attr("transform",e=>"translate(".concat(e.x0,",").concat(e.y0,")"));N.append("rect").attr("width",e=>e.x1-e.x0).attr("height",25).attr("class","treemapSectionHeader").attr("fill","none").attr("fill-opacity",.6).attr("stroke-width",.6).attr("style",e=>0===e.depth?"display: none;":""),N.append("clipPath").attr("id",(e,a)=>"clip-section-".concat(t,"-").concat(a)).append("rect").attr("width",e=>Math.max(0,e.x1-e.x0-12)).attr("height",25),N.append("rect").attr("width",e=>e.x1-e.x0).attr("height",e=>e.y1-e.y0).attr("class",(e,t)=>"treemapSection section".concat(t)).attr("fill",e=>T(e.data.name)).attr("fill-opacity",.6).attr("stroke",e=>M(e.data.name)).attr("stroke-width",2).attr("stroke-opacity",.4).attr("style",e=>{if(0===e.depth)return"display: none;";const t=(0,o.GX)({cssCompiledStyles:e.data.cssCompiledStyles});return t.nodeStyles+";"+t.borderStyles.join(";")}),N.append("text").attr("class","treemapSectionLabel").attr("x",6).attr("y",12.5).attr("dominant-baseline","middle").text(e=>0===e.depth?"":e.data.name).attr("font-weight","bold").attr("style",e=>{if(0===e.depth)return"display: none;";return"dominant-baseline: middle; font-size: 12px; fill:"+P(e.data.name)+"; white-space: nowrap; overflow: hidden; text-overflow: ellipsis;"+(0,o.GX)({cssCompiledStyles:e.data.cssCompiledStyles}).labelStyles.replace("color:","fill:")}).each(function(e){if(0===e.depth)return;const t=(0,u.Ltv)(this),a=e.data.name;t.text(a);const l=e.x1-e.x0;let n;if(!1!==h.showValues&&e.value){n=l-10-30-10-6}else{n=l-6-6}const s=Math.max(15,n),r=t.node();if(r.getComputedTextLength()>s){const e="...";let l=a;for(;l.length>0;){if(l=a.substring(0,l.length-1),0===l.length){t.text(e),r.getComputedTextLength()>s&&t.text("");break}if(t.text(l+e),r.getComputedTextLength()<=s)break}}}),!1!==h.showValues&&N.append("text").attr("class","treemapSectionValue").attr("x",e=>e.x1-e.x0-10).attr("y",12.5).attr("text-anchor","end").attr("dominant-baseline","middle").text(e=>e.value?L(e.value):"").attr("font-style","italic").attr("style",e=>{if(0===e.depth)return"display: none;";return"text-anchor: end; dominant-baseline: middle; font-size: 10px; fill:"+P(e.data.name)+"; white-space: nowrap; overflow: hidden; text-overflow: ellipsis;"+(0,o.GX)({cssCompiledStyles:e.data.cssCompiledStyles}).labelStyles.replace("color:","fill:")});const G=K.leaves(),$=z.selectAll(".treemapLeafGroup").data(G).enter().append("g").attr("class",(e,t)=>"treemapNode treemapLeafGroup leaf".concat(t).concat(e.data.classSelector?" ".concat(e.data.classSelector):"","x")).attr("transform",e=>"translate(".concat(e.x0,",").concat(e.y0,")"));$.append("rect").attr("width",e=>e.x1-e.x0).attr("height",e=>e.y1-e.y0).attr("class","treemapLeaf").attr("fill",e=>e.parent?T(e.parent.data.name):T(e.data.name)).attr("style",e=>(0,o.GX)({cssCompiledStyles:e.data.cssCompiledStyles}).nodeStyles).attr("fill-opacity",.3).attr("stroke",e=>e.parent?T(e.parent.data.name):T(e.data.name)).attr("stroke-width",3),$.append("clipPath").attr("id",(e,a)=>"clip-".concat(t,"-").concat(a)).append("rect").attr("width",e=>Math.max(0,e.x1-e.x0-4)).attr("height",e=>Math.max(0,e.y1-e.y0-4));if($.append("text").attr("class","treemapLabel").attr("x",e=>(e.x1-e.x0)/2).attr("y",e=>(e.y1-e.y0)/2).attr("style",e=>"text-anchor: middle; dominant-baseline: middle; font-size: 38px;fill:"+P(e.data.name)+";"+(0,o.GX)({cssCompiledStyles:e.data.cssCompiledStyles}).labelStyles.replace("color:","fill:")).attr("clip-path",(e,a)=>"url(#clip-".concat(t,"-").concat(a,")")).text(e=>e.data.name).each(function(e){const t=(0,u.Ltv)(this),a=e.x1-e.x0,l=e.y1-e.y0,n=t.node(),s=a-8,r=l-8;if(s<10||r<10)return void t.style("display","none");let o=parseInt(t.style("font-size"),10);for(;n.getComputedTextLength()>s&&o>8;)o--,t.style("font-size","".concat(o,"px"));let c=Math.max(6,Math.min(28,Math.round(.6*o))),i=o+2+c;for(;i>r&&o>8&&(o--,c=Math.max(6,Math.min(28,Math.round(.6*o))),!(c<6&&8===o));)t.style("font-size","".concat(o,"px")),i=o+2+c;t.style("font-size","".concat(o,"px")),(n.getComputedTextLength()>s||o<8||r<o)&&t.style("display","none")}),!1!==h.showValues){$.append("text").attr("class","treemapValue").attr("x",e=>(e.x1-e.x0)/2).attr("y",function(e){return(e.y1-e.y0)/2}).attr("style",e=>"text-anchor: middle; dominant-baseline: hanging; font-size: 28px;fill:"+P(e.data.name)+";"+(0,o.GX)({cssCompiledStyles:e.data.cssCompiledStyles}).labelStyles.replace("color:","fill:")).attr("clip-path",(e,a)=>"url(#clip-".concat(t,"-").concat(a,")")).text(e=>e.value?L(e.value):"").each(function(e){const t=(0,u.Ltv)(this),a=this.parentNode;if(!a)return void t.style("display","none");const l=(0,u.Ltv)(a).select(".treemapLabel");if(l.empty()||"none"===l.style("display"))return void t.style("display","none");const n=parseFloat(l.style("font-size")),s=Math.max(6,Math.min(28,Math.round(.6*n)));t.style("font-size","".concat(s,"px"));const r=(e.y1-e.y0)/2+n/2+2;t.attr("y",r);const o=e.x1-e.x0,c=e.y1-e.y0-4,i=o-8;t.node().getComputedTextLength()>i||r+s>c||s<6?t.style("display","none"):t.style("display",null)})}const A=null!==(c=h.diagramPadding)&&void 0!==c?c:8;(0,r.P)(x,A,"flowchart",(null===h||void 0===h?void 0:h.useMaxWidth)||!1)},"draw"),getClasses:(0,p.K2)(function(e,t){return t.db.getClasses()},"getClasses")},b={sectionStrokeColor:"black",sectionStrokeWidth:"1",sectionFillColor:"#efefef",leafStrokeColor:"black",leafStrokeWidth:"1",leafFillColor:"#efefef",labelColor:"black",labelFontSize:"12px",valueFontSize:"10px",valueColor:"black",titleColor:"black",titleFontSize:"14px"},C=(0,p.K2)(function(){let{treemap:e}=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};const t=(0,i.$t)(b,e);return"\n  .treemapNode.section {\n    stroke: ".concat(t.sectionStrokeColor,";\n    stroke-width: ").concat(t.sectionStrokeWidth,";\n    fill: ").concat(t.sectionFillColor,";\n  }\n  .treemapNode.leaf {\n    stroke: ").concat(t.leafStrokeColor,";\n    stroke-width: ").concat(t.leafStrokeWidth,";\n    fill: ").concat(t.leafFillColor,";\n  }\n  .treemapLabel {\n    fill: ").concat(t.labelColor,";\n    font-size: ").concat(t.labelFontSize,";\n  }\n  .treemapValue {\n    fill: ").concat(t.valueColor,";\n    font-size: ").concat(t.valueFontSize,";\n  }\n  .treemapTitle {\n    fill: ").concat(t.titleColor,";\n    font-size: ").concat(t.titleFontSize,";\n  }\n  ")},"getStyles"),w={parser:g,get db(){return new m},renderer:x,styles:C}}}]);
//# sourceMappingURL=516.53beacb8.chunk.js.map