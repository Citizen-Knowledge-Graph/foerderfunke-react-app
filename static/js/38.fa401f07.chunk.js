"use strict";(self.webpackChunkfoerderfunke_react_app=self.webpackChunkfoerderfunke_react_app||[]).push([[38],{7274:(t,c,o)=>{function r(t,c){var o,r,n;t.accDescr&&(null===(o=c.setAccDescription)||void 0===o||o.call(c,t.accDescr));t.accTitle&&(null===(r=c.setAccTitle)||void 0===r||r.call(c,t.accTitle));t.title&&(null===(n=c.setDiagramTitle)||void 0===n||n.call(c,t.title))}o.d(c,{S:()=>r}),(0,o(32748).K2)(r,"populateCommonDb")},82038:(t,c,o)=>{o.d(c,{diagram:()=>bt});var r=o(89379),n=o(7274),e=o(94787),a=o(88887),i=o(19263),s=o(32748),d=o(55502),l=o(86287),h={NORMAL:0,REVERSE:1,HIGHLIGHT:2,MERGE:3,CHERRY_PICK:4},m=i.UI.gitGraph,y=(0,s.K2)(()=>(0,a.$t)((0,r.A)((0,r.A)({},m),(0,i.zj)().gitGraph)),"getConfig"),g=new e.m(()=>{const t=y(),c=t.mainBranchName,o=t.mainBranchOrder;return{mainBranchName:c,commits:new Map,head:null,branchConfig:new Map([[c,{name:c,order:o}]]),branches:new Map([[c,null]]),currBranch:c,direction:"LR",seq:0,options:{}}});function u(){return(0,a.yT)({length:7})}function p(t,c){const o=Object.create(null);return t.reduce((t,r)=>{const n=c(r);return o[n]||(o[n]=!0,t.push(r)),t},[])}(0,s.K2)(u,"getID"),(0,s.K2)(p,"uniqBy");var f=(0,s.K2)(function(t){g.records.direction=t},"setDirection"),x=(0,s.K2)(function(t){var c;s.Rm.debug("options str",t),t=(t=null===(c=t)||void 0===c?void 0:c.trim())||"{}";try{g.records.options=JSON.parse(t)}catch(o){s.Rm.error("error while parsing gitGraph options",o.message)}},"setOptions"),v=(0,s.K2)(function(){return g.records.options},"getOptions"),b=(0,s.K2)(function(t){var c;let o=t.msg,r=t.id;const n=t.type;let e=t.tags;s.Rm.info("commit",o,r,n,e),s.Rm.debug("Entering commit:",o,r,n,e);const a=y();r=i.Y2.sanitizeText(r,a),o=i.Y2.sanitizeText(o,a),e=null===(c=e)||void 0===c?void 0:c.map(t=>i.Y2.sanitizeText(t,a));const d={id:r||g.records.seq+"-"+u(),message:o,seq:g.records.seq++,type:null!==n&&void 0!==n?n:h.NORMAL,tags:null!==e&&void 0!==e?e:[],parents:null==g.records.head?[]:[g.records.head.id],branch:g.records.currBranch};g.records.head=d,s.Rm.info("main branch",a.mainBranchName),g.records.commits.has(d.id)&&s.Rm.warn("Commit ID ".concat(d.id," already exists")),g.records.commits.set(d.id,d),g.records.branches.set(g.records.currBranch,d.id),s.Rm.debug("in pushCommit "+d.id)},"commit"),w=(0,s.K2)(function(t){let c=t.name;const o=t.order;if(c=i.Y2.sanitizeText(c,y()),g.records.branches.has(c))throw new Error('Trying to create an existing branch. (Help: Either use a new name if you want create a new branch or try using "checkout '.concat(c,'")'));g.records.branches.set(c,null!=g.records.head?g.records.head.id:null),g.records.branchConfig.set(c,{name:c,order:o}),k(c),s.Rm.debug("in createBranch")},"branch"),B=(0,s.K2)(t=>{let c=t.branch,o=t.id;const r=t.type,n=t.tags,e=y();c=i.Y2.sanitizeText(c,e),o&&(o=i.Y2.sanitizeText(o,e));const a=g.records.branches.get(g.records.currBranch),d=g.records.branches.get(c),l=a?g.records.commits.get(a):void 0,m=d?g.records.commits.get(d):void 0;if(l&&m&&l.branch===c)throw new Error("Cannot merge branch '".concat(c,"' into itself."));if(g.records.currBranch===c){const t=new Error('Incorrect usage of "merge". Cannot merge a branch to itself');throw t.hash={text:"merge ".concat(c),token:"merge ".concat(c),expected:["branch abc"]},t}if(void 0===l||!l){const t=new Error('Incorrect usage of "merge". Current branch ('.concat(g.records.currBranch,")has no commits"));throw t.hash={text:"merge ".concat(c),token:"merge ".concat(c),expected:["commit"]},t}if(!g.records.branches.has(c)){const t=new Error('Incorrect usage of "merge". Branch to be merged ('+c+") does not exist");throw t.hash={text:"merge ".concat(c),token:"merge ".concat(c),expected:["branch ".concat(c)]},t}if(void 0===m||!m){const t=new Error('Incorrect usage of "merge". Branch to be merged ('+c+") has no commits");throw t.hash={text:"merge ".concat(c),token:"merge ".concat(c),expected:['"commit"']},t}if(l===m){const t=new Error('Incorrect usage of "merge". Both branches have same head');throw t.hash={text:"merge ".concat(c),token:"merge ".concat(c),expected:["branch abc"]},t}if(o&&g.records.commits.has(o)){const t=new Error('Incorrect usage of "merge". Commit with id:'+o+" already exists, use different custom id");throw t.hash={text:"merge ".concat(c," ").concat(o," ").concat(r," ").concat(null===n||void 0===n?void 0:n.join(" ")),token:"merge ".concat(c," ").concat(o," ").concat(r," ").concat(null===n||void 0===n?void 0:n.join(" ")),expected:["merge ".concat(c," ").concat(o,"_UNIQUE ").concat(r," ").concat(null===n||void 0===n?void 0:n.join(" "))]},t}const p=d||"",f={id:o||"".concat(g.records.seq,"-").concat(u()),message:"merged branch ".concat(c," into ").concat(g.records.currBranch),seq:g.records.seq++,parents:null==g.records.head?[]:[g.records.head.id,p],branch:g.records.currBranch,type:h.MERGE,customType:r,customId:!!o,tags:null!==n&&void 0!==n?n:[]};g.records.head=f,g.records.commits.set(f.id,f),g.records.branches.set(g.records.currBranch,f.id),s.Rm.debug(g.records.branches),s.Rm.debug("in mergeBranch")},"merge"),E=(0,s.K2)(function(t){var c;let o=t.id,r=t.targetId,n=t.tags,e=t.parent;s.Rm.debug("Entering cherryPick:",o,r,n);const a=y();if(o=i.Y2.sanitizeText(o,a),r=i.Y2.sanitizeText(r,a),n=null===(c=n)||void 0===c?void 0:c.map(t=>i.Y2.sanitizeText(t,a)),e=i.Y2.sanitizeText(e,a),!o||!g.records.commits.has(o)){const t=new Error('Incorrect usage of "cherryPick". Source commit id should exist and provided');throw t.hash={text:"cherryPick ".concat(o," ").concat(r),token:"cherryPick ".concat(o," ").concat(r),expected:["cherry-pick abc"]},t}const d=g.records.commits.get(o);if(void 0===d||!d)throw new Error('Incorrect usage of "cherryPick". Source commit id should exist and provided');if(e&&(!Array.isArray(d.parents)||!d.parents.includes(e))){throw new Error("Invalid operation: The specified parent commit is not an immediate parent of the cherry-picked commit.")}const l=d.branch;if(d.type===h.MERGE&&!e){throw new Error("Incorrect usage of cherry-pick: If the source commit is a merge commit, an immediate parent commit must be specified.")}if(!r||!g.records.commits.has(r)){if(l===g.records.currBranch){const t=new Error('Incorrect usage of "cherryPick". Source commit is already on current branch');throw t.hash={text:"cherryPick ".concat(o," ").concat(r),token:"cherryPick ".concat(o," ").concat(r),expected:["cherry-pick abc"]},t}const t=g.records.branches.get(g.records.currBranch);if(void 0===t||!t){const t=new Error('Incorrect usage of "cherry-pick". Current branch ('.concat(g.records.currBranch,")has no commits"));throw t.hash={text:"cherryPick ".concat(o," ").concat(r),token:"cherryPick ".concat(o," ").concat(r),expected:["cherry-pick abc"]},t}const c=g.records.commits.get(t);if(void 0===c||!c){const t=new Error('Incorrect usage of "cherry-pick". Current branch ('.concat(g.records.currBranch,")has no commits"));throw t.hash={text:"cherryPick ".concat(o," ").concat(r),token:"cherryPick ".concat(o," ").concat(r),expected:["cherry-pick abc"]},t}const a={id:g.records.seq+"-"+u(),message:"cherry-picked ".concat(null===d||void 0===d?void 0:d.message," into ").concat(g.records.currBranch),seq:g.records.seq++,parents:null==g.records.head?[]:[g.records.head.id,d.id],branch:g.records.currBranch,type:h.CHERRY_PICK,tags:n?n.filter(Boolean):["cherry-pick:".concat(d.id).concat(d.type===h.MERGE?"|parent:".concat(e):"")]};g.records.head=a,g.records.commits.set(a.id,a),g.records.branches.set(g.records.currBranch,a.id),s.Rm.debug(g.records.branches),s.Rm.debug("in cherryPick")}},"cherryPick"),k=(0,s.K2)(function(t){if(t=i.Y2.sanitizeText(t,y()),!g.records.branches.has(t)){const c=new Error('Trying to checkout branch which is not yet created. (Help try using "branch '.concat(t,'")'));throw c.hash={text:"checkout ".concat(t),token:"checkout ".concat(t),expected:["branch ".concat(t)]},c}{g.records.currBranch=t;const o=g.records.branches.get(g.records.currBranch);var c;if(void 0!==o&&o)g.records.head=null!==(c=g.records.commits.get(o))&&void 0!==c?c:null;else g.records.head=null}},"checkout");function C(t,c,o){const r=t.indexOf(c);-1===r?t.push(o):t.splice(r,1,o)}function T(t){const c=t.reduce((t,c)=>t.seq>c.seq?t:c,t[0]);let o="";t.forEach(function(t){o+=t===c?"\t*":"\t|"});const r=[o,c.id,c.seq];for(const n in g.records.branches)g.records.branches.get(n)===c.id&&r.push(n);if(s.Rm.debug(r.join(" ")),c.parents&&2==c.parents.length&&c.parents[0]&&c.parents[1]){const o=g.records.commits.get(c.parents[0]);C(t,c,o),c.parents[1]&&t.push(g.records.commits.get(c.parents[1]))}else{if(0==c.parents.length)return;if(c.parents[0]){const o=g.records.commits.get(c.parents[0]);C(t,c,o)}}T(t=p(t,t=>t.id))}(0,s.K2)(C,"upsert"),(0,s.K2)(T,"prettyPrintCommitHistory");var L=(0,s.K2)(function(){s.Rm.debug(g.records.commits);T([A()[0]])},"prettyPrint"),K=(0,s.K2)(function(){g.reset(),(0,i.IU)()},"clear"),M=(0,s.K2)(function(){return[...g.records.branchConfig.values()].map((t,c)=>null!==t.order&&void 0!==t.order?t:(0,r.A)((0,r.A)({},t),{},{order:parseFloat("0.".concat(c))})).sort((t,c)=>{var o,r;return(null!==(o=t.order)&&void 0!==o?o:0)-(null!==(r=c.order)&&void 0!==r?r:0)}).map(t=>{let{name:c}=t;return{name:c}})},"getBranchesAsObjArray"),R=(0,s.K2)(function(){return g.records.branches},"getBranches"),P=(0,s.K2)(function(){return g.records.commits},"getCommits"),A=(0,s.K2)(function(){const t=[...g.records.commits.values()];return t.forEach(function(t){s.Rm.debug(t.id)}),t.sort((t,c)=>t.seq-c.seq),t},"getCommitsArray"),I={commitType:h,getConfig:y,setDirection:f,setOptions:x,getOptions:v,commit:b,branch:w,merge:B,cherryPick:E,checkout:k,prettyPrint:L,clear:K,getBranchesAsObjArray:M,getBranches:R,getCommits:P,getCommitsArray:A,getCurrentBranch:(0,s.K2)(function(){return g.records.currBranch},"getCurrentBranch"),getDirection:(0,s.K2)(function(){return g.records.direction},"getDirection"),getHead:(0,s.K2)(function(){return g.records.head},"getHead"),setAccTitle:i.SV,getAccTitle:i.iN,getAccDescription:i.m7,setAccDescription:i.EI,setDiagramTitle:i.ke,getDiagramTitle:i.ab},G=(0,s.K2)((t,c)=>{(0,n.S)(t,c),t.dir&&c.setDirection(t.dir);for(const o of t.statements)O(o,c)},"populate"),O=(0,s.K2)((t,c)=>{const o={Commit:(0,s.K2)(t=>c.commit(q(t)),"Commit"),Branch:(0,s.K2)(t=>c.branch(z(t)),"Branch"),Merge:(0,s.K2)(t=>c.merge(D(t)),"Merge"),Checkout:(0,s.K2)(t=>c.checkout(H(t)),"Checkout"),CherryPicking:(0,s.K2)(t=>c.cherryPick(S(t)),"CherryPicking")}[t.$type];o?o(t):s.Rm.error("Unknown statement type: ".concat(t.$type))},"parseStatement"),q=(0,s.K2)(t=>{var c,o;return{id:t.id,msg:null!==(c=t.message)&&void 0!==c?c:"",type:void 0!==t.type?h[t.type]:h.NORMAL,tags:null!==(o=t.tags)&&void 0!==o?o:void 0}},"parseCommit"),z=(0,s.K2)(t=>{var c;return{name:t.name,order:null!==(c=t.order)&&void 0!==c?c:0}},"parseBranch"),D=(0,s.K2)(t=>{var c,o;return{branch:t.branch,id:null!==(c=t.id)&&void 0!==c?c:"",type:void 0!==t.type?h[t.type]:void 0,tags:null!==(o=t.tags)&&void 0!==o?o:void 0}},"parseMerge"),H=(0,s.K2)(t=>t.branch,"parseCheckout"),S=(0,s.K2)(t=>{var c;return{id:t.id,targetId:"",tags:0===(null===(c=t.tags)||void 0===c?void 0:c.length)?void 0:t.tags,parent:t.parent}},"parseCherryPicking"),Y={parse:(0,s.K2)(async t=>{const c=await(0,d.qg)("gitGraph",t);s.Rm.debug(c),G(c,I)},"parse")};var N=(0,i.D7)(),j=null===N||void 0===N?void 0:N.gitGraph,W=10,_=40,F=new Map,U=new Map,V=new Map,$=[],J=0,Q="LR",X=(0,s.K2)(()=>{F.clear(),U.clear(),V.clear(),J=0,$=[],Q="LR"},"clear"),Z=(0,s.K2)(t=>{const c=document.createElementNS("http://www.w3.org/2000/svg","text");return("string"===typeof t?t.split(/\\n|\n|<br\s*\/?>/gi):t).forEach(t=>{const o=document.createElementNS("http://www.w3.org/2000/svg","tspan");o.setAttributeNS("http://www.w3.org/XML/1998/namespace","xml:space","preserve"),o.setAttribute("dy","1em"),o.setAttribute("x","0"),o.setAttribute("class","row"),o.textContent=t.trim(),c.appendChild(o)}),c},"drawText"),tt=(0,s.K2)(t=>{let c,o,r;return"BT"===Q?(o=(0,s.K2)((t,c)=>t<=c,"comparisonFunc"),r=1/0):(o=(0,s.K2)((t,c)=>t>=c,"comparisonFunc"),r=0),t.forEach(t=>{var n,e;const a="TB"===Q||"BT"==Q?null===(n=U.get(t))||void 0===n?void 0:n.y:null===(e=U.get(t))||void 0===e?void 0:e.x;void 0!==a&&o(a,r)&&(c=t,r=a)}),c},"findClosestParent"),ct=(0,s.K2)(t=>{let c="",o=1/0;return t.forEach(t=>{const r=U.get(t).y;r<=o&&(c=t,o=r)}),c||void 0},"findClosestParentBT"),ot=(0,s.K2)((t,c,o)=>{let r=o,n=o;const e=[];t.forEach(t=>{const o=c.get(t);if(!o)throw new Error("Commit not found for key ".concat(t));o.parents.length?(r=nt(o),n=Math.max(r,n)):e.push(o),et(o,r)}),r=n,e.forEach(t=>{at(t,r,o)}),t.forEach(t=>{const o=c.get(t);if(null!==o&&void 0!==o&&o.parents.length){const t=ct(o.parents);r=U.get(t).y-_,r<=n&&(n=r);const c=F.get(o.branch).pos,e=r-W;U.set(o.id,{x:c,y:e})}})},"setParallelBTPos"),rt=(0,s.K2)(t=>{var c;const o=tt(t.parents.filter(t=>null!==t));if(!o)throw new Error("Closest parent not found for commit ".concat(t.id));const r=null===(c=U.get(o))||void 0===c?void 0:c.y;if(void 0===r)throw new Error("Closest parent position not found for commit ".concat(t.id));return r},"findClosestParentPos"),nt=(0,s.K2)(t=>rt(t)+_,"calculateCommitPosition"),et=(0,s.K2)((t,c)=>{const o=F.get(t.branch);if(!o)throw new Error("Branch not found for commit ".concat(t.id));const r=o.pos,n=c+W;return U.set(t.id,{x:r,y:n}),{x:r,y:n}},"setCommitPosition"),at=(0,s.K2)((t,c,o)=>{const r=F.get(t.branch);if(!r)throw new Error("Branch not found for commit ".concat(t.id));const n=c+o,e=r.pos;U.set(t.id,{x:e,y:n})},"setRootPosition"),it=(0,s.K2)((t,c,o,r,n,e)=>{if(e===h.HIGHLIGHT)t.append("rect").attr("x",o.x-10).attr("y",o.y-10).attr("width",20).attr("height",20).attr("class","commit ".concat(c.id," commit-highlight").concat(n%8," ").concat(r,"-outer")),t.append("rect").attr("x",o.x-6).attr("y",o.y-6).attr("width",12).attr("height",12).attr("class","commit ".concat(c.id," commit").concat(n%8," ").concat(r,"-inner"));else if(e===h.CHERRY_PICK)t.append("circle").attr("cx",o.x).attr("cy",o.y).attr("r",10).attr("class","commit ".concat(c.id," ").concat(r)),t.append("circle").attr("cx",o.x-3).attr("cy",o.y+2).attr("r",2.75).attr("fill","#fff").attr("class","commit ".concat(c.id," ").concat(r)),t.append("circle").attr("cx",o.x+3).attr("cy",o.y+2).attr("r",2.75).attr("fill","#fff").attr("class","commit ".concat(c.id," ").concat(r)),t.append("line").attr("x1",o.x+3).attr("y1",o.y+1).attr("x2",o.x).attr("y2",o.y-5).attr("stroke","#fff").attr("class","commit ".concat(c.id," ").concat(r)),t.append("line").attr("x1",o.x-3).attr("y1",o.y+1).attr("x2",o.x).attr("y2",o.y-5).attr("stroke","#fff").attr("class","commit ".concat(c.id," ").concat(r));else{const a=t.append("circle");if(a.attr("cx",o.x),a.attr("cy",o.y),a.attr("r",c.type===h.MERGE?9:10),a.attr("class","commit ".concat(c.id," commit").concat(n%8)),e===h.MERGE){const e=t.append("circle");e.attr("cx",o.x),e.attr("cy",o.y),e.attr("r",6),e.attr("class","commit ".concat(r," ").concat(c.id," commit").concat(n%8))}if(e===h.REVERSE){t.append("path").attr("d","M ".concat(o.x-5,",").concat(o.y-5,"L").concat(o.x+5,",").concat(o.y+5,"M").concat(o.x-5,",").concat(o.y+5,"L").concat(o.x+5,",").concat(o.y-5)).attr("class","commit ".concat(r," ").concat(c.id," commit").concat(n%8))}}},"drawCommitBullet"),st=(0,s.K2)((t,c,o,r)=>{if(c.type!==h.CHERRY_PICK&&(c.customId&&c.type===h.MERGE||c.type!==h.MERGE)&&null!==j&&void 0!==j&&j.showCommitLabel){var n;const e=t.append("g"),a=e.insert("rect").attr("class","commit-label-bkg"),i=e.append("text").attr("x",r).attr("y",o.y+25).attr("class","commit-label").text(c.id),s=null===(n=i.node())||void 0===n?void 0:n.getBBox();if(s&&(a.attr("x",o.posWithOffset-s.width/2-2).attr("y",o.y+13.5).attr("width",s.width+4).attr("height",s.height+4),"TB"===Q||"BT"===Q?(a.attr("x",o.x-(s.width+16+5)).attr("y",o.y-12),i.attr("x",o.x-(s.width+16)).attr("y",o.y+s.height-12)):i.attr("x",o.posWithOffset-s.width/2),j.rotateCommitLabel))if("TB"===Q||"BT"===Q)i.attr("transform","rotate(-45, "+o.x+", "+o.y+")"),a.attr("transform","rotate(-45, "+o.x+", "+o.y+")");else{const t=-7.5-(s.width+10)/25*9.5,c=10+s.width/25*8.5;e.attr("transform","translate("+t+", "+c+") rotate(-45, "+r+", "+o.y+")")}}},"drawCommitLabel"),dt=(0,s.K2)((t,c,o,r)=>{if(c.tags.length>0){let e=0,a=0,i=0;const s=[];for(const r of c.tags.reverse()){var n;const c=t.insert("polygon"),d=t.append("circle"),l=t.append("text").attr("y",o.y-16-e).attr("class","tag-label").text(r),h=null===(n=l.node())||void 0===n?void 0:n.getBBox();if(!h)throw new Error("Tag bbox not found");a=Math.max(a,h.width),i=Math.max(i,h.height),l.attr("x",o.posWithOffset-h.width/2),s.push({tag:l,hole:d,rect:c,yOffset:e}),e+=20}for(const{tag:t,hole:c,rect:n,yOffset:d}of s){const e=i/2,s=o.y-19.2-d;if(n.attr("class","tag-label-bkg").attr("points","\n      ".concat(r-a/2-2,",").concat(s+2,"  \n      ").concat(r-a/2-2,",").concat(s-2,"\n      ").concat(o.posWithOffset-a/2-4,",").concat(s-e-2,"\n      ").concat(o.posWithOffset+a/2+4,",").concat(s-e-2,"\n      ").concat(o.posWithOffset+a/2+4,",").concat(s+e+2,"\n      ").concat(o.posWithOffset-a/2-4,",").concat(s+e+2)),c.attr("cy",s).attr("cx",r-a/2+2).attr("r",1.5).attr("class","tag-hole"),"TB"===Q||"BT"===Q){const i=r+d;n.attr("class","tag-label-bkg").attr("points","\n        ".concat(o.x,",").concat(i+2,"\n        ").concat(o.x,",").concat(i-2,"\n        ").concat(o.x+W,",").concat(i-e-2,"\n        ").concat(o.x+W+a+4,",").concat(i-e-2,"\n        ").concat(o.x+W+a+4,",").concat(i+e+2,"\n        ").concat(o.x+W,",").concat(i+e+2)).attr("transform","translate(12,12) rotate(45, "+o.x+","+r+")"),c.attr("cx",o.x+2).attr("cy",i).attr("transform","translate(12,12) rotate(45, "+o.x+","+r+")"),t.attr("x",o.x+5).attr("y",i+3).attr("transform","translate(14,14) rotate(45, "+o.x+","+r+")")}}}},"drawCommitTags"),lt=(0,s.K2)(t=>{var c;switch(null!==(c=t.customType)&&void 0!==c?c:t.type){case h.NORMAL:return"commit-normal";case h.REVERSE:return"commit-reverse";case h.HIGHLIGHT:return"commit-highlight";case h.MERGE:return"commit-merge";case h.CHERRY_PICK:return"commit-cherry-pick";default:return"commit-normal"}},"getCommitClassType"),ht=(0,s.K2)((t,c,o,r)=>{const n={x:0,y:0};if(!(t.parents.length>0)){if("TB"===c)return 30;if("BT"===c){var e;return(null!==(e=r.get(t.id))&&void 0!==e?e:n).y-_}return 0}{const o=tt(t.parents);if(o){var a;const e=null!==(a=r.get(o))&&void 0!==a?a:n;if("TB"===c)return e.y+_;if("BT"===c){var i;return(null!==(i=r.get(t.id))&&void 0!==i?i:n).y-_}return e.x+_}}return 0},"calculatePosition"),mt=(0,s.K2)((t,c,o)=>{var r,n;const e="BT"===Q&&o?c:c+W,a="TB"===Q||"BT"===Q?e:null===(r=F.get(t.branch))||void 0===r?void 0:r.pos,i="TB"===Q||"BT"===Q?null===(n=F.get(t.branch))||void 0===n?void 0:n.pos:e;if(void 0===i||void 0===a)throw new Error("Position were undefined for commit ".concat(t.id));return{x:i,y:a,posWithOffset:e}},"getCommitPosition"),yt=(0,s.K2)((t,c,o)=>{var r;if(!j)throw new Error("GitGraph config not found");const n=t.append("g").attr("class","commit-bullets"),e=t.append("g").attr("class","commit-labels");let a="TB"===Q||"BT"===Q?30:0;const i=[...c.keys()],d=null!==(r=null===j||void 0===j?void 0:j.parallelCommits)&&void 0!==r&&r,l=(0,s.K2)((t,o)=>{var r,n;const e=null===(r=c.get(t))||void 0===r?void 0:r.seq,a=null===(n=c.get(o))||void 0===n?void 0:n.seq;return void 0!==e&&void 0!==a?e-a:0},"sortKeys");let h=i.sort(l);"BT"===Q&&(d&&ot(h,c,a),h=h.reverse()),h.forEach(t=>{const r=c.get(t);if(!r)throw new Error("Commit not found for key ".concat(t));d&&(a=ht(r,Q,a,U));const i=mt(r,a,d);if(o){var s,l,h;const t=lt(r),c=null!==(s=r.customType)&&void 0!==s?s:r.type,o=null!==(l=null===(h=F.get(r.branch))||void 0===h?void 0:h.index)&&void 0!==l?l:0;it(n,r,i,t,o,c),st(e,r,i,a),dt(e,r,i,a)}"TB"===Q||"BT"===Q?U.set(r.id,{x:i.x,y:i.posWithOffset}):U.set(r.id,{x:i.posWithOffset,y:i.y}),a="BT"===Q&&d?a+_:a+_+W,a>J&&(J=a)})},"drawCommits"),gt=(0,s.K2)((t,c,o,r,n)=>{const e=("TB"===Q||"BT"===Q?o.x<r.x:o.y<r.y)?c.branch:t.branch,a=(0,s.K2)(t=>t.branch===e,"isOnBranchToGetCurve"),i=(0,s.K2)(o=>o.seq>t.seq&&o.seq<c.seq,"isBetweenCommits");return[...n.values()].some(t=>i(t)&&a(t))},"shouldRerouteArrow"),ut=(0,s.K2)(function(t,c){let o=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;const r=t+Math.abs(t-c)/2;if(o>5)return r;if($.every(t=>Math.abs(t-r)>=10))return $.push(r),r;const n=Math.abs(t-c);return ut(t,c-n/5,o+1)},"findLane"),pt=(0,s.K2)((t,c,o,r)=>{var n;const e=U.get(c.id),a=U.get(o.id);if(void 0===e||void 0===a)throw new Error("Commit positions not found for commits ".concat(c.id," and ").concat(o.id));const i=gt(c,o,e,a,r);let s="",d="",l=0,m=0,y=null===(n=F.get(o.branch))||void 0===n?void 0:n.index;var g;o.type===h.MERGE&&c.id!==o.parents[0]&&(y=null===(g=F.get(c.branch))||void 0===g?void 0:g.index);let u;if(i){s="A 10 10, 0, 0, 0,",d="A 10 10, 0, 0, 1,",l=10,m=10;const t=e.y<a.y?ut(e.y,a.y):ut(a.y,e.y),o=e.x<a.x?ut(e.x,a.x):ut(a.x,e.x);var p;if("TB"===Q)if(e.x<a.x)u="M ".concat(e.x," ").concat(e.y," L ").concat(o-l," ").concat(e.y," ").concat(d," ").concat(o," ").concat(e.y+m," L ").concat(o," ").concat(a.y-l," ").concat(s," ").concat(o+m," ").concat(a.y," L ").concat(a.x," ").concat(a.y);else y=null===(p=F.get(c.branch))||void 0===p?void 0:p.index,u="M ".concat(e.x," ").concat(e.y," L ").concat(o+l," ").concat(e.y," ").concat(s," ").concat(o," ").concat(e.y+m," L ").concat(o," ").concat(a.y-l," ").concat(d," ").concat(o-m," ").concat(a.y," L ").concat(a.x," ").concat(a.y);else if("BT"===Q){var f;if(e.x<a.x)u="M ".concat(e.x," ").concat(e.y," L ").concat(o-l," ").concat(e.y," ").concat(s," ").concat(o," ").concat(e.y-m," L ").concat(o," ").concat(a.y+l," ").concat(d," ").concat(o+m," ").concat(a.y," L ").concat(a.x," ").concat(a.y);else y=null===(f=F.get(c.branch))||void 0===f?void 0:f.index,u="M ".concat(e.x," ").concat(e.y," L ").concat(o+l," ").concat(e.y," ").concat(d," ").concat(o," ").concat(e.y-m," L ").concat(o," ").concat(a.y+l," ").concat(s," ").concat(o-m," ").concat(a.y," L ").concat(a.x," ").concat(a.y)}else{var x;if(e.y<a.y)u="M ".concat(e.x," ").concat(e.y," L ").concat(e.x," ").concat(t-l," ").concat(s," ").concat(e.x+m," ").concat(t," L ").concat(a.x-l," ").concat(t," ").concat(d," ").concat(a.x," ").concat(t+m," L ").concat(a.x," ").concat(a.y);else y=null===(x=F.get(c.branch))||void 0===x?void 0:x.index,u="M ".concat(e.x," ").concat(e.y," L ").concat(e.x," ").concat(t+l," ").concat(d," ").concat(e.x+m," ").concat(t," L ").concat(a.x-l," ").concat(t," ").concat(s," ").concat(a.x," ").concat(t-m," L ").concat(a.x," ").concat(a.y)}}else s="A 20 20, 0, 0, 0,",d="A 20 20, 0, 0, 1,",l=20,m=20,"TB"===Q?(e.x<a.x&&(u=o.type===h.MERGE&&c.id!==o.parents[0]?"M ".concat(e.x," ").concat(e.y," L ").concat(e.x," ").concat(a.y-l," ").concat(s," ").concat(e.x+m," ").concat(a.y," L ").concat(a.x," ").concat(a.y):"M ".concat(e.x," ").concat(e.y," L ").concat(a.x-l," ").concat(e.y," ").concat(d," ").concat(a.x," ").concat(e.y+m," L ").concat(a.x," ").concat(a.y)),e.x>a.x&&(s="A 20 20, 0, 0, 0,",d="A 20 20, 0, 0, 1,",l=20,m=20,u=o.type===h.MERGE&&c.id!==o.parents[0]?"M ".concat(e.x," ").concat(e.y," L ").concat(e.x," ").concat(a.y-l," ").concat(d," ").concat(e.x-m," ").concat(a.y," L ").concat(a.x," ").concat(a.y):"M ".concat(e.x," ").concat(e.y," L ").concat(a.x+l," ").concat(e.y," ").concat(s," ").concat(a.x," ").concat(e.y+m," L ").concat(a.x," ").concat(a.y)),e.x===a.x&&(u="M ".concat(e.x," ").concat(e.y," L ").concat(a.x," ").concat(a.y))):"BT"===Q?(e.x<a.x&&(u=o.type===h.MERGE&&c.id!==o.parents[0]?"M ".concat(e.x," ").concat(e.y," L ").concat(e.x," ").concat(a.y+l," ").concat(d," ").concat(e.x+m," ").concat(a.y," L ").concat(a.x," ").concat(a.y):"M ".concat(e.x," ").concat(e.y," L ").concat(a.x-l," ").concat(e.y," ").concat(s," ").concat(a.x," ").concat(e.y-m," L ").concat(a.x," ").concat(a.y)),e.x>a.x&&(s="A 20 20, 0, 0, 0,",d="A 20 20, 0, 0, 1,",l=20,m=20,u=o.type===h.MERGE&&c.id!==o.parents[0]?"M ".concat(e.x," ").concat(e.y," L ").concat(e.x," ").concat(a.y+l," ").concat(s," ").concat(e.x-m," ").concat(a.y," L ").concat(a.x," ").concat(a.y):"M ".concat(e.x," ").concat(e.y," L ").concat(a.x-l," ").concat(e.y," ").concat(s," ").concat(a.x," ").concat(e.y-m," L ").concat(a.x," ").concat(a.y)),e.x===a.x&&(u="M ".concat(e.x," ").concat(e.y," L ").concat(a.x," ").concat(a.y))):(e.y<a.y&&(u=o.type===h.MERGE&&c.id!==o.parents[0]?"M ".concat(e.x," ").concat(e.y," L ").concat(a.x-l," ").concat(e.y," ").concat(d," ").concat(a.x," ").concat(e.y+m," L ").concat(a.x," ").concat(a.y):"M ".concat(e.x," ").concat(e.y," L ").concat(e.x," ").concat(a.y-l," ").concat(s," ").concat(e.x+m," ").concat(a.y," L ").concat(a.x," ").concat(a.y)),e.y>a.y&&(u=o.type===h.MERGE&&c.id!==o.parents[0]?"M ".concat(e.x," ").concat(e.y," L ").concat(a.x-l," ").concat(e.y," ").concat(s," ").concat(a.x," ").concat(e.y-m," L ").concat(a.x," ").concat(a.y):"M ".concat(e.x," ").concat(e.y," L ").concat(e.x," ").concat(a.y+l," ").concat(d," ").concat(e.x+m," ").concat(a.y," L ").concat(a.x," ").concat(a.y)),e.y===a.y&&(u="M ".concat(e.x," ").concat(e.y," L ").concat(a.x," ").concat(a.y)));if(void 0===u)throw new Error("Line definition not found");t.append("path").attr("d",u).attr("class","arrow arrow"+y%8)},"drawArrow"),ft=(0,s.K2)((t,c)=>{const o=t.append("g").attr("class","commit-arrows");[...c.keys()].forEach(t=>{const r=c.get(t);r.parents&&r.parents.length>0&&r.parents.forEach(t=>{pt(o,c.get(t),r,c)})})},"drawArrows"),xt=(0,s.K2)((t,c)=>{const o=t.append("g");c.forEach((t,c)=>{var r;const n=c%8,e=null===(r=F.get(t.name))||void 0===r?void 0:r.pos;if(void 0===e)throw new Error("Position not found for branch ".concat(t.name));const a=o.append("line");a.attr("x1",0),a.attr("y1",e),a.attr("x2",J),a.attr("y2",e),a.attr("class","branch branch"+n),"TB"===Q?(a.attr("y1",30),a.attr("x1",e),a.attr("y2",J),a.attr("x2",e)):"BT"===Q&&(a.attr("y1",J),a.attr("x1",e),a.attr("y2",30),a.attr("x2",e)),$.push(e);const i=t.name,s=Z(i),d=o.insert("rect"),l=o.insert("g").attr("class","branchLabel").insert("g").attr("class","label branch-label"+n);l.node().appendChild(s);const h=s.getBBox();d.attr("class","branchLabelBkg label"+n).attr("rx",4).attr("ry",4).attr("x",-h.width-4-(!0===(null===j||void 0===j?void 0:j.rotateCommitLabel)?30:0)).attr("y",-h.height/2+8).attr("width",h.width+18).attr("height",h.height+4),l.attr("transform","translate("+(-h.width-14-(!0===(null===j||void 0===j?void 0:j.rotateCommitLabel)?30:0))+", "+(e-h.height/2-1)+")"),"TB"===Q?(d.attr("x",e-h.width/2-10).attr("y",0),l.attr("transform","translate("+(e-h.width/2-5)+", 0)")):"BT"===Q?(d.attr("x",e-h.width/2-10).attr("y",J),l.attr("transform","translate("+(e-h.width/2-5)+", "+J+")")):d.attr("transform","translate(-19, "+(e-h.height/2)+")")})},"drawBranches"),vt=(0,s.K2)(function(t,c,o,r,n){return F.set(t,{pos:c,index:o}),c+=50+(n?40:0)+("TB"===Q||"BT"===Q?r.width/2:0)},"setBranchPosition");var bt={parser:Y,db:I,renderer:{draw:(0,s.K2)(function(t,c,o,r){var n,e;if(X(),s.Rm.debug("in gitgraph renderer",t+"\n","id:",c,o),!j)throw new Error("GitGraph config not found");const d=null!==(n=j.rotateCommitLabel)&&void 0!==n&&n,h=r.db;V=h.getCommits();const m=h.getBranchesAsObjArray();Q=h.getDirection();const y=(0,l.Ltv)('[id="'.concat(c,'"]'));let g=0;m.forEach((t,c)=>{var o;const r=Z(t.name),n=y.append("g"),e=n.insert("g").attr("class","branchLabel"),a=e.insert("g").attr("class","label branch-label");null===(o=a.node())||void 0===o||o.appendChild(r);const i=r.getBBox();g=vt(t.name,g,c,i,d),a.remove(),e.remove(),n.remove()}),yt(y,V,!1),j.showBranches&&xt(y,m),ft(y,V),yt(y,V,!0),a._K.insertTitle(y,"gitTitleText",null!==(e=j.titleTopMargin)&&void 0!==e?e:0,h.getDiagramTitle()),(0,i.mj)(void 0,y,j.diagramPadding,j.useMaxWidth)},"draw")},styles:(0,s.K2)(t=>"\n  .commit-id,\n  .commit-msg,\n  .branch-label {\n    fill: lightgrey;\n    color: lightgrey;\n    font-family: 'trebuchet ms', verdana, arial, sans-serif;\n    font-family: var(--mermaid-font-family);\n  }\n  ".concat([0,1,2,3,4,5,6,7].map(c=>"\n        .branch-label".concat(c," { fill: ").concat(t["gitBranchLabel"+c],"; }\n        .commit").concat(c," { stroke: ").concat(t["git"+c],"; fill: ").concat(t["git"+c],"; }\n        .commit-highlight").concat(c," { stroke: ").concat(t["gitInv"+c],"; fill: ").concat(t["gitInv"+c],"; }\n        .label").concat(c,"  { fill: ").concat(t["git"+c],"; }\n        .arrow").concat(c," { stroke: ").concat(t["git"+c],"; }\n        ")).join("\n"),"\n\n  .branch {\n    stroke-width: 1;\n    stroke: ").concat(t.lineColor,";\n    stroke-dasharray: 2;\n  }\n  .commit-label { font-size: ").concat(t.commitLabelFontSize,"; fill: ").concat(t.commitLabelColor,";}\n  .commit-label-bkg { font-size: ").concat(t.commitLabelFontSize,"; fill: ").concat(t.commitLabelBackground,"; opacity: 0.5; }\n  .tag-label { font-size: ").concat(t.tagLabelFontSize,"; fill: ").concat(t.tagLabelColor,";}\n  .tag-label-bkg { fill: ").concat(t.tagLabelBackground,"; stroke: ").concat(t.tagLabelBorder,"; }\n  .tag-hole { fill: ").concat(t.textColor,"; }\n\n  .commit-merge {\n    stroke: ").concat(t.primaryColor,";\n    fill: ").concat(t.primaryColor,";\n  }\n  .commit-reverse {\n    stroke: ").concat(t.primaryColor,";\n    fill: ").concat(t.primaryColor,";\n    stroke-width: 3;\n  }\n  .commit-highlight-outer {\n  }\n  .commit-highlight-inner {\n    stroke: ").concat(t.primaryColor,";\n    fill: ").concat(t.primaryColor,";\n  }\n\n  .arrow { stroke-width: 8; stroke-linecap: round; fill: none}\n  .gitTitleText {\n    text-anchor: middle;\n    font-size: 18px;\n    fill: ").concat(t.textColor,";\n  }\n"),"getStyles")}},94787:(t,c,o)=>{o.d(c,{m:()=>e});var r,n=o(32748),e=(r=class{constructor(t){this.init=t,this.records=this.init()}reset(){this.records=this.init()}},(0,n.K2)(r,"ImperativeState"),r)}}]);
//# sourceMappingURL=38.fa401f07.chunk.js.map