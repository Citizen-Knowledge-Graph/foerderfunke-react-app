{"version":3,"file":"static/js/455.a914dd4b.chunk.js","mappings":"+HAKA,SAASA,EAAiBC,EAAKC,GACX,IAAAC,EAGAC,EAGHC,EANXJ,EAAIK,WACc,QAApBH,EAAAD,EAAGK,yBAAiB,IAAAJ,GAApBA,EAAAK,KAAAN,EAAuBD,EAAIK,WAEzBL,EAAIQ,WACQ,QAAdL,EAAAF,EAAGQ,mBAAW,IAAAN,GAAdA,EAAAI,KAAAN,EAAiBD,EAAIQ,WAEnBR,EAAIU,QACY,QAAlBN,EAAAH,EAAGU,uBAAe,IAAAP,GAAlBA,EAAAG,KAAAN,EAAqBD,EAAIU,OAE7B,C,kBACAE,E,SAAAA,IAAOb,EAAkB,mB,yHCerBc,EAAqBC,EAAAA,GAAsBC,IAC3CC,EAAiB,CACnBC,SAA0B,IAAIC,IAC9BC,UAAU,EACVC,OAAQP,GAENI,EAAWD,EAAeC,SAC1BE,EAAWH,EAAeG,SAC1BC,EAASC,gBAAgBR,GACzBS,GAA6BV,EAAAA,EAAAA,IAAO,IAAMS,gBAAgBD,GAAS,aACnEG,GAAyBX,EAAAA,EAAAA,IAAO,KAClCK,EAA2B,IAAIC,IAC/BC,EAAWH,EAAeG,UAC1BK,EAAAA,EAAAA,OACC,SACCC,GAA6Bb,EAAAA,EAAAA,IAAOc,IAAsB,IAArB,MAAEC,EAAK,MAAEC,GAAOF,EACvD,GAAIE,EAAQ,EACV,MAAM,IAAIC,MAAM,IAADC,OACTH,EAAK,yBAAAG,OAAwBF,EAAK,oFAGrCX,EAASc,IAAIJ,KAChBV,EAASe,IAAIL,EAAOC,GACpBK,EAAAA,GAAIC,MAAM,sBAADJ,OAAuBH,EAAK,kBAAAG,OAAiBF,MAEvD,cACCO,GAA8BvB,EAAAA,EAAAA,IAAO,IAAMK,EAAU,eACrDmB,GAA8BxB,EAAAA,EAAAA,IAAQyB,IACxClB,EAAWkB,GACV,eACCC,GAA8B1B,EAAAA,EAAAA,IAAO,IAAMO,EAAU,eACrDlB,EAAK,CACPsC,UAAWjB,EACXE,MAAOD,EACPZ,gBAAe,KACf6B,gBAAe,KACf/B,YAAW,KACXgC,YAAW,KACXnC,kBAAiB,KACjBoC,kBAAiB,KACjBjB,aACAU,cACAC,cACAE,eAIEK,GAA6B/B,EAAAA,EAAAA,IAAO,CAACZ,EAAK4C,MAC5C7C,EAAAA,EAAAA,GAAiBC,EAAK4C,GACtBA,EAAIR,YAAYpC,EAAImB,UACpBnB,EAAIiB,SAAS4B,IAAID,EAAInB,aACpB,cACCqB,EAAS,CACXC,OAAuBnC,EAAAA,EAAAA,IAAOoC,UAC5B,MAAMhD,QAAY+C,EAAAA,EAAAA,IAAM,MAAOE,GAC/BhB,EAAAA,GAAIC,MAAMlC,GACV2C,EAAW3C,EAAKC,IACf,UAiCDiD,GA7B4BtC,EAAAA,EAAAA,IAAQuC,GAAO,gCAAArB,OAEjCqB,EAAQC,eAAc,0BAAAtB,OACfqB,EAAQE,eAAc,qBAAAvB,OAC3BqB,EAAQG,WAAU,4CAAAxB,OAGpBqB,EAAQI,oBAAmB,yBAAAzB,OACrBqB,EAAQK,oBAAmB,yFAAA1B,OAK9BqB,EAAQM,iBAAgB,iBAAA3B,OAC7BqB,EAAQO,kBAAiB,wBAAA5B,OAClBqB,EAAQQ,WAAU,yCAAA7B,OAGlBqB,EAAQQ,WAAU,iBAAA7B,OACzBqB,EAAQS,oBAAmB,qBAAA9B,OACvBqB,EAAQU,mBAAkB,6DAAA/B,OAI9BqB,EAAQW,mBAAkB,wBAAAhC,OACnBqB,EAAQQ,WAAU,sBAAA7B,OACpBqB,EAAQY,kBAAiB,YAEvC,aAKCC,GAAgCpD,EAAAA,EAAAA,IAAQqD,IAC1C,MAAMC,EAAM,IAAID,EAAUE,UAAUC,OAAO,CAACC,EAAKC,IAAQD,EAAMC,EAAK,GAC9DC,EAAU,IAAIN,EAAUO,WAAW3B,IAAI4B,IAAA,IAAE9C,EAAOC,GAAM6C,EAAA,MAAM,CAAE9C,QAAOC,WAAU8C,OAAQC,GAAMA,EAAE/C,MAAQsC,EAAM,KAAO,GAAGU,KAAK,CAACC,EAAGC,IAAMA,EAAElD,MAAQiD,EAAEjD,OAExJ,OADYmD,EAAAA,EAAAA,OAAQnD,MAAO+C,GAAMA,EAAE/C,MAC5Bb,CAAIwD,IACV,iBAiFCS,EAAU,CACZlC,SACA7C,KACAgF,SANa,CAAEC,MA7EUtE,EAAAA,EAAAA,IAAO,CAACuE,EAAMC,EAAIC,EAAUC,KACrDrD,EAAAA,GAAIC,MAAM,wBAA0BiD,GACpC,MAAMvC,EAAM0C,EAAQrF,GACdsF,GAAehD,EAAAA,EAAAA,MACfiD,GAAYC,EAAAA,EAAAA,IAAc7C,EAAIL,YAAagD,EAAaxE,KAExD2E,EAAmB,GAEnBC,EAAS,IACTC,EAAWD,EACXE,GAAMC,EAAAA,EAAAA,GAAiBV,GACvBW,EAAQF,EAAIG,OAAO,KACzBD,EAAME,KAAK,YAAa,sBACxB,MAAM,eAAEC,GAAmBX,EAC3B,IAAKY,IAAoBC,EAAAA,EAAAA,IAAcF,EAAe1C,qBACtC,OAAhB2C,QAAgB,IAAhBA,IAAAA,EAAqB,GACrB,MAAME,EAAeb,EAAUa,aACzBC,EAASC,KAAKC,IAAIZ,EAAUD,GAAU,EAZ7B,GAaTc,GAAeC,EAAAA,EAAAA,OAAMC,YAAY,GAAGC,YAAYN,GAChDO,GAAoBH,EAAAA,EAAAA,OAAMC,YAAYL,EAASD,GAAcO,YAAYN,EAASD,GACxFN,EAAMC,OAAO,UAAUC,KAAK,KAAM,GAAGA,KAAK,KAAM,GAAGA,KAAK,IAAKK,EAASH,EAAmB,GAAGF,KAAK,QAAS,kBAC1G,MAAMhC,EAAYrB,EAAIT,cAChB2E,EAAO9C,EAAcC,GACrB8C,EAAoB,CACxBb,EAAec,KACfd,EAAee,KACff,EAAegB,KACfhB,EAAeiB,KACfjB,EAAekB,KACflB,EAAemB,KACfnB,EAAeoB,KACfpB,EAAeqB,KACfrB,EAAesB,KACftB,EAAeuB,MACfvB,EAAewB,MACfxB,EAAeyB,OAEjB,IAAIzD,EAAM,EACVD,EAAU2D,QAASC,IACjB3D,GAAO2D,IAET,MAAMC,EAAehB,EAAKpC,OAAQqD,GAAwD,OAA7CA,EAAMC,KAAKpG,MAAQsC,EAAM,KAAK+D,QAAQ,IAC7EC,GAAQC,EAAAA,EAAAA,KAAapB,GAC3BhB,EAAMqC,UAAU,YAAYJ,KAAKF,GAAcO,QAAQrC,OAAO,QAAQC,KAAK,IAAKQ,GAAcR,KAAK,OAAS8B,GACnGG,EAAMH,EAAMC,KAAKrG,QACvBsE,KAAK,QAAS,aACjBF,EAAMqC,UAAU,YAAYJ,KAAKF,GAAcO,QAAQrC,OAAO,QAAQb,KAAM4C,IAClEA,EAAMC,KAAKpG,MAAQsC,EAAM,KAAK+D,QAAQ,GAAK,KAClDhC,KAAK,YAAc8B,GACb,aAAelB,EAAkByB,SAASP,GAAS,KACzDQ,MAAM,cAAe,UAAUtC,KAAK,QAAS,SAChDF,EAAMC,OAAO,QAAQb,KAAKvC,EAAIJ,mBAAmByD,KAAK,IAAK,GAAGA,KAAK,KAAK,KAAoBA,KAAK,QAAS,gBAC1G,MAAMuC,EAAiB,IAAIvE,EAAUO,WAAW3B,IAAI4F,IAAA,IAAE9G,EAAOC,GAAM6G,EAAA,MAAM,CACvE9G,QACAC,WAEI8G,EAAS3C,EAAMqC,UAAU,WAAWJ,KAAKQ,GAAgBH,QAAQrC,OAAO,KAAKC,KAAK,QAAS,UAAUA,KAAK,YAAa,CAAC0C,EAAQC,IAK7H,kBAJSlD,GAGCkD,EAHDlD,GACS8C,EAAeK,OAAS,GAGG,KAEtDH,EAAO1C,OAAO,QAAQC,KAAK,QAASP,GAAkBO,KAAK,SAAUP,GAAkB6C,MAAM,OAAS5D,GAAMuD,EAAMvD,EAAEhD,QAAQ4G,MAAM,SAAW5D,GAAMuD,EAAMvD,EAAEhD,QAC3J+G,EAAO1C,OAAO,QAAQC,KAAK,IAAKP,IAAmCO,KAAK,IAAKP,IAAmCP,KAAMR,GAChH/B,EAAIN,cACC,GAAPR,OAAU6C,EAAEhD,MAAK,MAAAG,OAAK6C,EAAE/C,MAAK,KAExB+C,EAAEhD,OAEX,MAGMmH,EAAalD,IAHMW,KAAKwC,OACzBL,EAAON,UAAU,QAAQY,QAAQnG,IAAKoG,IAAI,IAAAC,EAAA,OAAwC,QAAxCA,EAAS,OAAJD,QAAI,IAAJA,OAAI,EAAJA,EAAME,wBAAwBC,aAAK,IAAAF,EAAAA,EAAI,KAG3FrD,EAAII,KAAK,UAAW,OAAFnE,OAASgH,EAAU,KAAAhH,OAAI6D,KACzC0D,EAAAA,EAAAA,IAAiBxD,EAAKF,EAAQmD,EAAYtD,EAAU8D,cACnD,SAQDC,OAAQrG,E","sources":["../node_modules/mermaid/dist/chunks/mermaid.core/chunk-4BX2VUAB.mjs","../node_modules/mermaid/dist/chunks/mermaid.core/pieDiagram-ADFJNKIX.mjs"],"sourcesContent":["import {\n  __name\n} from \"./chunk-AGHRB4JF.mjs\";\n\n// src/diagrams/common/populateCommonDb.ts\nfunction populateCommonDb(ast, db) {\n  if (ast.accDescr) {\n    db.setAccDescription?.(ast.accDescr);\n  }\n  if (ast.accTitle) {\n    db.setAccTitle?.(ast.accTitle);\n  }\n  if (ast.title) {\n    db.setDiagramTitle?.(ast.title);\n  }\n}\n__name(populateCommonDb, \"populateCommonDb\");\n\nexport {\n  populateCommonDb\n};\n","import {\n  selectSvgElement\n} from \"./chunk-EXTU4WIE.mjs\";\nimport {\n  populateCommonDb\n} from \"./chunk-4BX2VUAB.mjs\";\nimport {\n  cleanAndMerge,\n  parseFontSize\n} from \"./chunk-S3R3BYOJ.mjs\";\nimport {\n  clear,\n  configureSvgSize,\n  defaultConfig_default,\n  getAccDescription,\n  getAccTitle,\n  getConfig2 as getConfig,\n  getDiagramTitle,\n  setAccDescription,\n  setAccTitle,\n  setDiagramTitle\n} from \"./chunk-ABZYJK2D.mjs\";\nimport {\n  __name,\n  log\n} from \"./chunk-AGHRB4JF.mjs\";\n\n// src/diagrams/pie/pieParser.ts\nimport { parse } from \"@mermaid-js/parser\";\n\n// src/diagrams/pie/pieDb.ts\nvar DEFAULT_PIE_CONFIG = defaultConfig_default.pie;\nvar DEFAULT_PIE_DB = {\n  sections: /* @__PURE__ */ new Map(),\n  showData: false,\n  config: DEFAULT_PIE_CONFIG\n};\nvar sections = DEFAULT_PIE_DB.sections;\nvar showData = DEFAULT_PIE_DB.showData;\nvar config = structuredClone(DEFAULT_PIE_CONFIG);\nvar getConfig2 = /* @__PURE__ */ __name(() => structuredClone(config), \"getConfig\");\nvar clear2 = /* @__PURE__ */ __name(() => {\n  sections = /* @__PURE__ */ new Map();\n  showData = DEFAULT_PIE_DB.showData;\n  clear();\n}, \"clear\");\nvar addSection = /* @__PURE__ */ __name(({ label, value }) => {\n  if (value < 0) {\n    throw new Error(\n      `\"${label}\" has invalid value: ${value}. Negative values are not allowed in pie charts. All slice values must be >= 0.`\n    );\n  }\n  if (!sections.has(label)) {\n    sections.set(label, value);\n    log.debug(`added new section: ${label}, with value: ${value}`);\n  }\n}, \"addSection\");\nvar getSections = /* @__PURE__ */ __name(() => sections, \"getSections\");\nvar setShowData = /* @__PURE__ */ __name((toggle) => {\n  showData = toggle;\n}, \"setShowData\");\nvar getShowData = /* @__PURE__ */ __name(() => showData, \"getShowData\");\nvar db = {\n  getConfig: getConfig2,\n  clear: clear2,\n  setDiagramTitle,\n  getDiagramTitle,\n  setAccTitle,\n  getAccTitle,\n  setAccDescription,\n  getAccDescription,\n  addSection,\n  getSections,\n  setShowData,\n  getShowData\n};\n\n// src/diagrams/pie/pieParser.ts\nvar populateDb = /* @__PURE__ */ __name((ast, db2) => {\n  populateCommonDb(ast, db2);\n  db2.setShowData(ast.showData);\n  ast.sections.map(db2.addSection);\n}, \"populateDb\");\nvar parser = {\n  parse: /* @__PURE__ */ __name(async (input) => {\n    const ast = await parse(\"pie\", input);\n    log.debug(ast);\n    populateDb(ast, db);\n  }, \"parse\")\n};\n\n// src/diagrams/pie/pieStyles.ts\nvar getStyles = /* @__PURE__ */ __name((options) => `\n  .pieCircle{\n    stroke: ${options.pieStrokeColor};\n    stroke-width : ${options.pieStrokeWidth};\n    opacity : ${options.pieOpacity};\n  }\n  .pieOuterCircle{\n    stroke: ${options.pieOuterStrokeColor};\n    stroke-width: ${options.pieOuterStrokeWidth};\n    fill: none;\n  }\n  .pieTitleText {\n    text-anchor: middle;\n    font-size: ${options.pieTitleTextSize};\n    fill: ${options.pieTitleTextColor};\n    font-family: ${options.fontFamily};\n  }\n  .slice {\n    font-family: ${options.fontFamily};\n    fill: ${options.pieSectionTextColor};\n    font-size:${options.pieSectionTextSize};\n    // fill: white;\n  }\n  .legend text {\n    fill: ${options.pieLegendTextColor};\n    font-family: ${options.fontFamily};\n    font-size: ${options.pieLegendTextSize};\n  }\n`, \"getStyles\");\nvar pieStyles_default = getStyles;\n\n// src/diagrams/pie/pieRenderer.ts\nimport { arc, pie as d3pie, scaleOrdinal } from \"d3\";\nvar createPieArcs = /* @__PURE__ */ __name((sections2) => {\n  const sum = [...sections2.values()].reduce((acc, val) => acc + val, 0);\n  const pieData = [...sections2.entries()].map(([label, value]) => ({ label, value })).filter((d) => d.value / sum * 100 >= 1).sort((a, b) => b.value - a.value);\n  const pie = d3pie().value((d) => d.value);\n  return pie(pieData);\n}, \"createPieArcs\");\nvar draw = /* @__PURE__ */ __name((text, id, _version, diagObj) => {\n  log.debug(\"rendering pie chart\\n\" + text);\n  const db2 = diagObj.db;\n  const globalConfig = getConfig();\n  const pieConfig = cleanAndMerge(db2.getConfig(), globalConfig.pie);\n  const MARGIN = 40;\n  const LEGEND_RECT_SIZE = 18;\n  const LEGEND_SPACING = 4;\n  const height = 450;\n  const pieWidth = height;\n  const svg = selectSvgElement(id);\n  const group = svg.append(\"g\");\n  group.attr(\"transform\", \"translate(\" + pieWidth / 2 + \",\" + height / 2 + \")\");\n  const { themeVariables } = globalConfig;\n  let [outerStrokeWidth] = parseFontSize(themeVariables.pieOuterStrokeWidth);\n  outerStrokeWidth ??= 2;\n  const textPosition = pieConfig.textPosition;\n  const radius = Math.min(pieWidth, height) / 2 - MARGIN;\n  const arcGenerator = arc().innerRadius(0).outerRadius(radius);\n  const labelArcGenerator = arc().innerRadius(radius * textPosition).outerRadius(radius * textPosition);\n  group.append(\"circle\").attr(\"cx\", 0).attr(\"cy\", 0).attr(\"r\", radius + outerStrokeWidth / 2).attr(\"class\", \"pieOuterCircle\");\n  const sections2 = db2.getSections();\n  const arcs = createPieArcs(sections2);\n  const myGeneratedColors = [\n    themeVariables.pie1,\n    themeVariables.pie2,\n    themeVariables.pie3,\n    themeVariables.pie4,\n    themeVariables.pie5,\n    themeVariables.pie6,\n    themeVariables.pie7,\n    themeVariables.pie8,\n    themeVariables.pie9,\n    themeVariables.pie10,\n    themeVariables.pie11,\n    themeVariables.pie12\n  ];\n  let sum = 0;\n  sections2.forEach((section) => {\n    sum += section;\n  });\n  const filteredArcs = arcs.filter((datum) => (datum.data.value / sum * 100).toFixed(0) !== \"0\");\n  const color = scaleOrdinal(myGeneratedColors);\n  group.selectAll(\"mySlices\").data(filteredArcs).enter().append(\"path\").attr(\"d\", arcGenerator).attr(\"fill\", (datum) => {\n    return color(datum.data.label);\n  }).attr(\"class\", \"pieCircle\");\n  group.selectAll(\"mySlices\").data(filteredArcs).enter().append(\"text\").text((datum) => {\n    return (datum.data.value / sum * 100).toFixed(0) + \"%\";\n  }).attr(\"transform\", (datum) => {\n    return \"translate(\" + labelArcGenerator.centroid(datum) + \")\";\n  }).style(\"text-anchor\", \"middle\").attr(\"class\", \"slice\");\n  group.append(\"text\").text(db2.getDiagramTitle()).attr(\"x\", 0).attr(\"y\", -(height - 50) / 2).attr(\"class\", \"pieTitleText\");\n  const allSectionData = [...sections2.entries()].map(([label, value]) => ({\n    label,\n    value\n  }));\n  const legend = group.selectAll(\".legend\").data(allSectionData).enter().append(\"g\").attr(\"class\", \"legend\").attr(\"transform\", (_datum, index) => {\n    const height2 = LEGEND_RECT_SIZE + LEGEND_SPACING;\n    const offset = height2 * allSectionData.length / 2;\n    const horizontal = 12 * LEGEND_RECT_SIZE;\n    const vertical = index * height2 - offset;\n    return \"translate(\" + horizontal + \",\" + vertical + \")\";\n  });\n  legend.append(\"rect\").attr(\"width\", LEGEND_RECT_SIZE).attr(\"height\", LEGEND_RECT_SIZE).style(\"fill\", (d) => color(d.label)).style(\"stroke\", (d) => color(d.label));\n  legend.append(\"text\").attr(\"x\", LEGEND_RECT_SIZE + LEGEND_SPACING).attr(\"y\", LEGEND_RECT_SIZE - LEGEND_SPACING).text((d) => {\n    if (db2.getShowData()) {\n      return `${d.label} [${d.value}]`;\n    }\n    return d.label;\n  });\n  const longestTextWidth = Math.max(\n    ...legend.selectAll(\"text\").nodes().map((node) => node?.getBoundingClientRect().width ?? 0)\n  );\n  const totalWidth = pieWidth + MARGIN + LEGEND_RECT_SIZE + LEGEND_SPACING + longestTextWidth;\n  svg.attr(\"viewBox\", `0 0 ${totalWidth} ${height}`);\n  configureSvgSize(svg, height, totalWidth, pieConfig.useMaxWidth);\n}, \"draw\");\nvar renderer = { draw };\n\n// src/diagrams/pie/pieDiagram.ts\nvar diagram = {\n  parser,\n  db,\n  renderer,\n  styles: pieStyles_default\n};\nexport {\n  diagram\n};\n"],"names":["populateCommonDb","ast","db","_db$setAccDescription","_db$setAccTitle","_db$setDiagramTitle","accDescr","setAccDescription","call","accTitle","setAccTitle","title","setDiagramTitle","__name","DEFAULT_PIE_CONFIG","defaultConfig_default","pie","DEFAULT_PIE_DB","sections","Map","showData","config","structuredClone","getConfig2","clear2","clear","addSection","_ref","label","value","Error","concat","has","set","log","debug","getSections","setShowData","toggle","getShowData","getConfig","getDiagramTitle","getAccTitle","getAccDescription","populateDb","db2","map","parser","parse","async","input","pieStyles_default","options","pieStrokeColor","pieStrokeWidth","pieOpacity","pieOuterStrokeColor","pieOuterStrokeWidth","pieTitleTextSize","pieTitleTextColor","fontFamily","pieSectionTextColor","pieSectionTextSize","pieLegendTextColor","pieLegendTextSize","createPieArcs","sections2","sum","values","reduce","acc","val","pieData","entries","_ref2","filter","d","sort","a","b","d3pie","diagram","renderer","draw","text","id","_version","diagObj","globalConfig","pieConfig","cleanAndMerge","LEGEND_RECT_SIZE","height","pieWidth","svg","selectSvgElement","group","append","attr","themeVariables","outerStrokeWidth","parseFontSize","textPosition","radius","Math","min","arcGenerator","arc","innerRadius","outerRadius","labelArcGenerator","arcs","myGeneratedColors","pie1","pie2","pie3","pie4","pie5","pie6","pie7","pie8","pie9","pie10","pie11","pie12","forEach","section","filteredArcs","datum","data","toFixed","color","scaleOrdinal","selectAll","enter","centroid","style","allSectionData","_ref3","legend","_datum","index","length","totalWidth","max","nodes","node","_node$getBoundingClie","getBoundingClientRect","width","configureSvgSize","useMaxWidth","styles"],"sourceRoot":""}